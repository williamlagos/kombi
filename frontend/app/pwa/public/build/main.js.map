{"version":3,"sources":["../../src/pipes/pipes.module.ts","../../src/directives/directives.module.ts","../../src/services/navigation.service.ts","../../src/pages/user-pages.ts","../../src/services/picture.service.ts","../../src/services/geolocation/maps.service.ts","../../src/services/geolocation/marker.service.ts","../../src/app/app.globals.ts","../../node_modules/@angular/core/fesm5 lazy","../../src lazy","../../src/components/mars-navbar/mars-navbar.ts","../../src/pages/main-pages.ts","../../src/services/push-notification.service.ts","../../src/services/file-uploader.service.ts","../../src/components/mars-product/options/mars-product-options.ts","../../src/components/components.module.ts","../../src/services/geolocation/nearby.service.ts","../../src/app/app.socket.ts","../../src/services/geolocation/geocoder.service.ts","../../src/components/mars-credit-card/mars-credit-card.ts","../../src/pipes/order-by.ts","../../src/components/mars-bank-account-card/mars-bank-account-card.ts","../../src/services/geolocation/infowindow.service.ts","../../src/app/app.utils.ts","../../src/app/main.ts","../../src/services/auth.service.ts","../../src/app/app.constants.ts","../../src/app/app.module.ts","../../locale-data/complete.js (ignored)","../../node_modules/moment-mini/locale ^/.//.*$","../../src/pipes/from-now.ts","../../src/pipes/limit-to.ts","../../src/pipes/safe.ts","../../src/directives/mars-elastic-input.ts","../../src/directives/mars-mask.ts","../../src/directives/mars-address-autocomplete.ts","../../src/app/app.locales.ts","../../src/directives/mars-cpf-validator.ts","../../src/directives/mars-cnpj-validator.ts","../../src/components/mars-assistant/mars-assistant.ts","../../src/backend/routes.js","../../src/components/mars-signup-progress/mars-signup-progress.ts","../../src/components/mars-translatable/mars-translatable.ts","../../src/components/mars-view-spinner/mars-view-spinner.ts","../../src/components/marketplace/market-item-category/market-item-category.ts","../../src/components/mars-product/mars-product.ts","../../src/services/geolocation/geolocation.service.ts","../../ws (ignored)","../../src/app/app.component.ts","../../src/services/geolocation/directions.service.ts","../../src/services/mobile-keyboard.service.ts","../../src/services/interaction.service.ts","../../src/services/view.service.ts","../../src/backend/index.js","../../src/services/cart.service.ts"],"names":[],"mappings":"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AG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4BAA4B,GAAG;AAC/B;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA,gCAAgC,GAAG;AACnC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4BAA4B,GAAG;AAC/B;;AAEA;AACA;AACA;;AAEA,yFAAyF;AACzF;AACA;AACA,gCAAgC,GAAG;AACnC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,gCAAgC,GAAG,OAAO,KAAK;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4BAA4B,GAAG,OAAO,KAAK;AAC3C;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA,gCAAgC,GAAG,OAAO,KAAK;AAC/C,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mEAAmE;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA,yBAAyB,KAAK;AAC9B,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,wBAAwB,KAAK;AAC7B;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;AACA;AACA,4BAA4B,KAAK;AACjC,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,oCAAoC,KAAK;AACzC,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mEAAmE;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA,yBAAyB,GAAG;AAC5B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,8CAA8C,GAAG;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0CAA0C,GAAG;AAC7C;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,8CAA8C,GAAG;AACjD,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA,yBAAyB,GAAG;AAC5B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,yBAAyB,GAAG;AAC5B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,yBAAyB,GAAG,aAAa,SAAS;AAClD;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG,aAAa,SAAS;AAC9C;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA,yBAAyB,GAAG,aAAa,SAAS;AAClD,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,yBAAyB,GAAG;AAC5B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qBAAqB,GAAG;AACxB;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,yBAAyB,GAAG;AAC5B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;;AAEA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,+BAA+B,KAAK;AACpC;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,mCAAmC,KAAK;AACxC,wBAAwB,WAAW,MAAM,yBAAyB;AAClE,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,uBAAuB,WAAW;AAClC;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,2BAA2B,WAAW;AACtC,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,qCAAqC,GAAG;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,qCAAqC,GAAG;AACxC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,yCAAyC,GAAG;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qCAAqC,GAAG;AACxC;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,yCAAyC,GAAG;AAC5C,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4CAA4C,SAAS;AACrD;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA,gDAAgD,SAAS;AACzD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gCAAgC,GAAG;AACnC;;AAEA;AACA;AACA;;AAEA,yFAAyF;AACzF;AACA;AACA,oCAAoC,GAAG;AACvC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,8BAA8B,SAAS,WAAW,SAAS;AAC3D;AACA;AACA;AACA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,SAAS,WAAW,SAAS;AACvD;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA,8BAA8B,SAAS,WAAW,SAAS;AAC3D,wBAAwB,SAAS,MAAM,uBAAuB;AAC9D,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,8BAA8B,SAAS,aAAa,SAAS;AAC7D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,SAAS,aAAa,SAAS;AACzD;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,8BAA8B,SAAS,aAAa,SAAS;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;AAC9D,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,sCAAsC,GAAG;AACzC;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,kCAAkC,GAAG;AACrC;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,sCAAsC,GAAG;AACzC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,oCAAoC,KAAK;AACzC;;AAEA;AACA;AACA;;AAEA,yFAAyF;AACzF;AACA;AACA,wCAAwC,KAAK;AAC7C,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4BAA4B,GAAG;AAC/B;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA,gCAAgC,GAAG;AACnC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,4BAA4B,GAAG;AAC/B;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA,gCAAgC,GAAG;AACnC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,2CAA2C,GAAG;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,uCAAuC,GAAG;AAC1C;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA,2CAA2C,GAAG;AAC9C,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iFAAiF;AACjF;AACA;AACA;AACA;AACA,yCAAyC,GAAG;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qCAAqC,GAAG;AACxC;;AAEA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA,yCAAyC,GAAG;AAC5C,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,uCAAuC,SAAS;AAChD;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,2CAA2C,SAAS;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,iCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA,qCAAqC,SAAS;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iGAAiG;AACjG;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iGAAiG;AACjG;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yGAAyG;AACzG;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mGAAmG;AACnG;AACA;AACA;AACA;AACA,4DAA4D,SAAS;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,wDAAwD,SAAS;AACjE;;AAEA;AACA;AACA;;AAEA,yGAAyG;AACzG;AACA;AACA,4DAA4D,SAAS;AACrE,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qGAAqG;AACrG;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gDAAgD,WAAW;AAC3D;;AAEA;AACA;AACA;;AAEA,2GAA2G;AAC3G;AACA;AACA,oDAAoD,WAAW;AAC/D,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iGAAiG;AACjG;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gDAAgD,WAAW;AAC3D;;AAEA;AACA;AACA;;AAEA,uGAAuG;AACvG;AACA;AACA,oDAAoD,WAAW;AAC/D,wBAAwB,WAAW,MAAM,yBAAyB;;AAElE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,6BAA6B,GAAG;AAChC;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,yBAAyB,GAAG;AAC5B;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,6BAA6B,GAAG;AAChC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA,yCAAyC,SAAS;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mGAAmG;AACnG;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA,wBAAwB,QAAQ,MAAM,sBAAsB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;;AAEA,yGAAyG;AACzG;AACA;AACA,oCAAoC,QAAQ;AAC5C,wBAAwB,QAAQ,MAAM,sBAAsB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,sBAAsB,GAAG;AACzB;;AAEA;AACA;AACA;;AAEA,mEAAmE;AACnE;AACA;AACA,0BAA0B,GAAG;AAC7B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,sBAAsB,GAAG;AACzB;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;AACA;AACA,0BAA0B,GAAG;AAC7B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,sBAAsB,GAAG;AACzB;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;AACA;AACA,0BAA0B,GAAG;AAC7B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,0BAA0B,GAAG,OAAO,KAAK;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,sBAAsB,GAAG,OAAO,KAAK;AACrC;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,0BAA0B,GAAG,OAAO,KAAK;AACzC,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,KAAK,MAAM,mBAAmB;;AAEtD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6EAA6E;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6EAA6E;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG,EAAE,SAAS;AACxC;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS,EAAE,SAAS;AACvD;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG,EAAE,SAAS,EAAE,SAAS;AACnD;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS,EAAE,SAAS;AACvD,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;AAC9D,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS,EAAE,SAAS;AACvD;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG,EAAE,SAAS,EAAE,SAAS;AACnD;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS,EAAE,SAAS;AACvD,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;AAC9D,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG,EAAE,SAAS;AACxC;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0BAA0B,GAAG,EAAE,SAAS;AACxC;;AAEA;AACA;AACA;;AAEA,yFAAyF;AACzF;AACA;AACA,8BAA8B,GAAG,EAAE,SAAS;AAC5C,wBAAwB,GAAG,MAAM,iBAAiB;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uGAAuG;AACvG;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,wBAAwB,QAAQ,MAAM,sBAAsB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;;AAEA;AACA;AACA;;AAEA,6GAA6G;AAC7G;AACA;AACA,8CAA8C,QAAQ;AACtD,wBAAwB,QAAQ,MAAM,sBAAsB;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yFAAyF;AACzF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,uDAAuD,OAAO;AAC9D;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA,2DAA2D,OAAO;AAClE,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+FAA+F;AAC/F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA,6DAA6D,SAAS;AACtE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,yDAAyD,SAAS;AAClE;;AAEA;AACA;AACA;;AAEA,mGAAmG;AACnG;AACA;AACA,6DAA6D,SAAS;AACtE,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,kDAAkD,GAAG;AACrD;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA,sDAAsD,GAAG;AACzD,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iFAAiF;AACjF;AACA;AACA;AACA;AACA,8CAA8C,GAAG;AACjD;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,0CAA0C,GAAG;AAC7C;;AAEA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA,8CAA8C,GAAG;AACjD,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6FAA6F;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iFAAiF;AACjF;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,8CAA8C,OAAO;AACrD;;AAEA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA,kDAAkD,OAAO;AACzD,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,iCAAiC,GAAG;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,6BAA6B,GAAG;AAChC;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,iCAAiC,GAAG;AACpC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6EAA6E;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,2BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA,+BAA+B,OAAO;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,8BAA8B,OAAO;AACrC;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,kCAAkC,OAAO;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,yBAAyB,OAAO;AAChC;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA,6BAA6B,OAAO;AACpC,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,+BAA+B,GAAG;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,2BAA2B,GAAG;AAC9B;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,+BAA+B,GAAG;AAClC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,qCAAqC,GAAG;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,qCAAqC,GAAG;AACxC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,wCAAwC,GAAG;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,oCAAoC,GAAG;AACvC;;AAEA;AACA;AACA;;AAEA,2FAA2F;AAC3F;AACA;AACA,wCAAwC,GAAG;AAC3C,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA;AACA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,oBAAoB,GAAG;AACvB;;AAEA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA,wBAAwB,GAAG;AAC3B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iEAAiE;AACjE;AACA;AACA;AACA;AACA,4BAA4B,GAAG;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,wBAAwB,GAAG;AAC3B;;AAEA;AACA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA,4BAA4B,GAAG;AAC/B,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;;AAEA,qEAAqE;AACrE;AACA;AACA,4BAA4B,OAAO;AACnC,wBAAwB,OAAO,MAAM,qBAAqB;;AAE1D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,uEAAuE;AACvE;AACA;AACA;AACA;AACA,mCAAmC,GAAG;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,+BAA+B,GAAG;AAClC;;AAEA;AACA;AACA;;AAEA,6EAA6E;AAC7E;AACA;AACA,mCAAmC,GAAG;AACtC,wBAAwB,GAAG,MAAM,iBAAiB;;AAElD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA,yCAAyC,SAAS;AAClD,wBAAwB,SAAS,MAAM,uBAAuB;;AAE9D;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA,wBAAwB,MAAM,MAAM,oBAAoB;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,sCAAsC,MAAM;AAC5C;;AAEA;AACA;AACA;;AAEA,iFAAiF;AACjF;AACA;AACA,0CAA0C,MAAM;AAChD,wBAAwB,MAAM,MAAM,oBAAoB;;AAExD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Applications pipe modules.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicModule } from \"ionic-angular\";\n\nimport { FromNowPipe } from \"./from-now\";\nimport { LimitToPipe } from \"./limit-to\";\nimport { OrderByPipe } from \"./order-by\";\nimport { SafePipe } from \"./safe\";\n\n@NgModule({\n    imports: [CommonModule, IonicModule],\n    declarations: [FromNowPipe, LimitToPipe, OrderByPipe, SafePipe],\n    exports: [FromNowPipe, LimitToPipe, OrderByPipe, SafePipe]\n})\nexport class PipesModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/pipes.module.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description Application directives module.\r\n */\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { IonicModule } from \"ionic-angular\";\r\n\r\nimport { MarsElasticInputDirective } from \"./mars-elastic-input\";\r\nimport { MarsMaskDirective } from \"./mars-mask\";\r\nimport { MarsAddressAutocompleteDirective } from \"./mars-address-autocomplete\";\r\nimport { MarsCpfValidator } from \"@directives/mars-cpf-validator\";\r\nimport { MarsCnpjValidator } from \"@directives/mars-cnpj-validator\";\r\n\r\n@NgModule({\r\n    imports: [CommonModule, IonicModule],\r\n    declarations: [\r\n        MarsElasticInputDirective,\r\n        MarsMaskDirective,\r\n        MarsAddressAutocompleteDirective,\r\n        MarsCnpjValidator,\r\n        MarsCpfValidator\r\n    ],\r\n    exports: [\r\n        MarsElasticInputDirective,\r\n        MarsMaskDirective,\r\n        MarsAddressAutocompleteDirective,\r\n        MarsCnpjValidator,\r\n        MarsCpfValidator\r\n    ]\r\n})\r\nexport class DirectivesModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/directives/directives.module.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Navigation service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { App, NavController, Tabs } from \"ionic-angular\";\n\nimport { AppConstants } from \"@app/app.constants\";\nimport { MarsAuthService } from \"./auth.service\";\n\n@Injectable()\nexport class MarsNavigationService {\n    navCtrl: NavController;\n\n    static ROOT_PAGE_INDEX = 0;\n    static AUTH_PAGE_REDIRECT = AppConstants.NAME.toUpperCase() + \"_AUTH_PAGE_REDIRECT\";\n    _authRedirectPage;\n\n    constructor(private app: App) { }\n\n    setNavCtrl(navCtrl: NavController) {\n        this.navCtrl = navCtrl;\n    }\n\n    navControllerIsDefined() {\n        if (this.navCtrl) {\n            return true;\n        } else {\n            console.warn(MarsNavigationService.name + \": Please, remember to call this.navigationService.setNavCtrl(this.navCtrl) after you instance the service ;)\");\n            return false;\n        }\n    }\n\n    isActive(pageName: string) {\n        return (this.navCtrl.getActive().name === pageName);\n    }\n\n    goBack() {\n        if (this.navCtrl.canGoBack())\n            this.navCtrl.pop();\n        else\n            this.navCtrl.goToRoot({});\n    }\n\n    goTo(page, params?: any, animation?: any) {\n        if (this.navControllerIsDefined()) this.navCtrl.push(page, params, animation);\n    }\n\n    goToRootPage(params?: any, animation?: any) {\n        if (this.navControllerIsDefined()) {\n            this.setRoot('LoadingPage');\n            this.setRoot('HomePage');\n            let activeNav = this.app.getActiveNavs()[0];\n            if (activeNav.getType() == \"tab\") {\n                let rootNav = this.app.getRootNavs()[0];\n                let tabs = (rootNav._children[0] as Tabs);\n                tabs.select(0);\n            }\n        }\n    }\n\n    setRoot(page, params?: any, animation?: any) {\n        this.app.getRootNavs()[0].setRoot(page, params, animation);\n    }\n\n    insertPageOnNavigationStack(navCtrl: NavController, index: number, page: any) {\n        if (this.navControllerIsDefined())\n            navCtrl.insert(index, page);\n    }\n\n    canGoBack() {\n        return this.navCtrl.canGoBack();\n    };\n\n    authCheck(page: string, roles?: Array<string>) {\n\n        /* User is not logged in */\n        if (!MarsAuthService.isLoggedIn()) {\n            localStorage[MarsNavigationService.AUTH_PAGE_REDIRECT] = page;\n            this.setRoot(\"LoginPage\", { token: \"access\" });\n            return false;\n        }\n\n        // Clears the page redirect for future authentications\n        delete localStorage[MarsNavigationService.AUTH_PAGE_REDIRECT];\n\n        /* User has finished the signup process */\n        if (!MarsAuthService.finishedSignup()) {\n            this.setRoot(MarsAuthService.getLoggedInUser().signupStep);\n            return false;\n        }\n\n        /* User has the proper permissions */\n        if (roles) {\n            let hasPermissions = false;\n            roles.map((role) => { if (MarsAuthService.hasRole(role.toUpperCase())) hasPermissions = true; });\n            if (!hasPermissions) {\n                if (this.canGoBack()) this.goBack(); // In case there are any views to return\n                else this.setRoot('HomePage'); // Otherwise, fallsback to the root page\n                return false;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/navigation.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { MarsAuthService } from \"@services/auth.service\";\n\n@Injectable()\nexport class AppUserPages {\n\n    constructor(private globals: AppGlobals) {\n        this.init();\n    };\n\n    init() {\n        this.globals.userPages = [\n            /* Customer Pages */\n            { roles: [\"CUSTOMER\"], name: \"profile\", icon: \"la-user\", page: \"CustomerProfileInformationPage\" },\n            { roles: [\"CUSTOMER\"], name: \"location\", icon: \"pin\", page: \"CustomerLocationInformationPage\" },\n            { roles: [\"CUSTOMER\"], name: \"my_pets\", icon: \"la-paw\", page: \"CustomerPetsListPage\" },\n            { roles: [\"CUSTOMER\"], name: \"payment_methods\", icon: \"la-credit-card\", page: \"PaymentInformationPage\" },\n\n            /* Merchant & Service Provider Pages */\n            { roles: [\"MERCHANT\", \"SERVICE_ESTABLISHMENT\", \"SERVICE_PROVIDER\"], name: \"profile\", icon: \"la-user\", page: \"MerchantBasicInformationPage\" },\n            { roles: [\"MERCHANT\", \"SERVICE_ESTABLISHMENT\", \"SERVICE_PROVIDER\"], name: \"location\", icon: \"pin\", page: \"MerchantLocationInformationPage\" },\n            { roles: [\"MERCHANT\", \"SERVICE_ESTABLISHMENT\", \"SERVICE_PROVIDER\"], name: \"contact\", icon: \"la-globe\", page: \"MerchantContactInformationPage\" },\n            { roles: [\"MERCHANT\"], name: \"operation\", icon: \"la-clock-o\", page: \"MerchantOperationInformationPage\" },\n            { roles: [\"MERCHANT\"], name: \"DELIVERY\", icon: \"la-automobile\", page: \"MerchantSellingInformationPage\" },\n            { roles: [\"MERCHANT\", \"SERVICE_ESTABLISHMENT\", \"SERVICE_PROVIDER\"], name: \"subscription\", icon: \"la-calendar\", page: \"SubscriptionInformationPage\" },\n            { roles: [\"MERCHANT\", \"SERVICE_ESTABLISHMENT\", \"SERVICE_PROVIDER\"], name: \"subscription\", icon: \"la-credit-card\", page: \"SubscriptionPaymentPage\" },\n\n            /* ONG Pages */\n            { roles: [\"ONG\"], name: \"profile\", icon: \"la-user\", page: \"OngBasicInformationPage\" },\n            { roles: [\"ONG\"], name: \"location\", icon: \"pin\", page: \"OngLocationInformationPage\" },\n            { roles: [\"ONG\"], name: \"contact\", icon: \"globe\", page: \"OngContactInformationPage\" }\n        ];\n    }\n\n    getPagesFor(roles) {\n        return this.globals.userPages.filter((page, pageIndex) => {\n            return roles.some((role) => {\n                return page.roles.indexOf(role) >= 0;\n            });\n        });\n    }\n\n    getUserRoles() {\n        if (!MarsAuthService.isLoggedIn()) return false;\n        return MarsAuthService.getLoggedInUser().roles;\n    }\n\n    getCurrentStep() {\n        if (!MarsAuthService.isLoggedIn()) return false;\n        return MarsAuthService.getLoggedInUser().signupStep;\n    }\n\n    getCurrentStepIndex(): number {\n        if (!MarsAuthService.isLoggedIn()) return 0;\n        let pages = this.getPagesFor(this.getUserRoles());\n        let step = this.getCurrentStep();\n        let stepIndex = 0;\n        pages.map((current, index) => { if (current.page == step) stepIndex = index; });\n        return stepIndex;\n    }\n\n    getNextStepFor(roles, page) {\n        let pages = this.getPagesFor(roles);\n        let nextStep = 0;\n        pages.forEach((current, index) => { if (current.page == page) nextStep = (index + 1); });\n        return pages[nextStep] ? pages[nextStep].page : \"finished\";\n    }\n\n    getPreviousStepFor(roles, page) {\n        let pages = this.getPagesFor(roles);\n        let nextStep = 0;\n        pages.forEach((current, index) => { if (current.page == page) nextStep = (index - 1); });\n        return pages[nextStep] ? pages[nextStep].page : \"LoginPage\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-pages.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Picture service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { MarsFileUploaderService } from \"@services/file-uploader.service\";\n\ndeclare var ImageTools;\ndeclare var loadImage;\n\n@Injectable()\nexport class MarsPictureService {\n\n    API_PATH: string;\n    STANDARD_ORIENTATION = 1;\n\n    constructor(private fileUploaderService: MarsFileUploaderService) {\n        this.setApiPath(\"picture\");\n    }\n\n    setApiPath(apiPath: string) {\n        this.API_PATH = AppConstants.SERVER_ADDRESS.concat(\"/api/\", apiPath);\n    }\n\n    async save(picture: File, params: any = {}, callback?: Function) {\n        let PICTURE_SAVE_URL = this.API_PATH + \"/save\";\n        let userToken = MarsAuthService.getLoggedInUser().token;\n        this.fileUploaderService.upload(PICTURE_SAVE_URL, picture, params, { \"x-access-token\": userToken }, callback);\n    }\n\n    scale(picture: File, scaleFactor: number) {\n        var imagePath = URL.createObjectURL(picture);\n        var image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => {\n                ImageTools.resize(picture, {\n                    width: (image.width * scaleFactor), // maximum width \n                    height: (image.height * scaleFactor) // maximum height \n                }, function (resized, resizeWasSuccessfull) {\n                    if (!resizeWasSuccessfull)\n                        console.warn(MarsPictureService.name + \": ImageTools was unable to scale the image :(\");\n                    resizeWasSuccessfull ? resolve(resized) : resolve(picture);\n                });\n            };\n            image.src = imagePath;\n        });\n    }\n\n    getOrientation(file: File) {\n        return new Promise((resolve, reject) => {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n\n                var view = new DataView((e.target as any).result);\n                if (view.getUint16(0, false) != 0xFFD8) {\n                    return resolve(-2);\n                }\n                var length = view.byteLength, offset = 2;\n                while (offset < length) {\n                    if (view.getUint16(offset + 2, false) <= 8) return resolve(-1);\n                    var marker = view.getUint16(offset, false);\n                    offset += 2;\n                    if (marker == 0xFFE1) {\n                        if (view.getUint32(offset += 2, false) != 0x45786966) {\n                            return resolve(-1);\n                        }\n                        var little = view.getUint16(offset += 6, false) == 0x4949;\n                        offset += view.getUint32(offset + 4, little);\n                        var tags = view.getUint16(offset, little);\n                        offset += 2;\n                        for (var i = 0; i < tags; i++) {\n                            if (view.getUint16(offset + (i * 12), little) == 0x0112) {\n                                return resolve(view.getUint16(offset + (i * 12) + 8, little));\n                            }\n                        }\n                    }\n                    else if ((marker & 0xFF00) != 0xFF00) {\n                        break;\n                    }\n                    else {\n                        offset += view.getUint16(offset, false);\n                    }\n                }\n                return resolve(-1);\n            };\n            reader.readAsArrayBuffer(file);\n        });\n    }\n\n    async properlyRotate(file: File) {\n        return new Promise(async (resolve, reject) => {\n            let rotation = await this.getOrientation(file);\n            let mustRotate = rotation > this.STANDARD_ORIENTATION;\n            if (mustRotate) { // In case the image must be rotated\n                let options = { orientation: rotation };\n                loadImage(file, (img) => {\n                    img.toBlob((blob) => resolve(blob));\n                }, options);\n            } else { // Otherwise, we're good to go!\n                resolve(file);\n            }\n        });\n    }\n\n    getPicture(pictureId: any) {\n        return this.API_PATH + \"/\" + pictureId;\n    }\n\n    getPictureUrlFor(item: any) {\n        return this.API_PATH + \"/\" + item._id;\n    }\n\n    getProfilePictureFor(user: any) {\n        let oauthProvider = user.oauthProvider;\n        switch (oauthProvider) {\n            case \"facebook\": {\n                return AppConstants.FACEBOOK_PICTURE_URL.replace(\"userId\", user.oauthId);\n            };\n            case \"linkedin\": {\n                return (user.pictureUrls && user.pictureUrls.values) ? user.pictureUrls.values[0] : user.pictureUrl;\n            }\n            case \"twitter\": {\n                return user.profile_image_url ? user.profile_image_url.replace(\"normal\", \"400x400\") : user.pictureUrl;\n            }\n            default: {\n                return \"assets/images/spinner.gif\";\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/picture.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Map management service.\n */\n\nimport { Injectable } from \"@angular/core\";\n\nimport { Platform } from \"ionic-angular\";\n\nimport { AppGlobals } from \"@app/app.globals\";\n\nimport { MarsAuthService } from \"@auth.service\";\n\nimport { MarsGeolocationService } from \"./geolocation.service\";\nimport { MarsMapMarkerService } from \"./marker.service\";\nimport { MarsViewService } from \"@view.service\";\nimport { AppConstants } from \"@app/app.constants\";\n\nlet apple_map_styles = <google.maps.MapTypeStyle[]>[{ \"featureType\": \"landscape.man_made\", \"elementType\": \"all\", \"stylers\": [{ \"color\": \"#faf5ed\" }, { \"lightness\": \"0\" }, { \"gamma\": \"1\" }] }, { \"featureType\": \"poi.park\", \"elementType\": \"geometry.fill\", \"stylers\": [{ \"color\": \"#bae5a6\" }] }, { \"featureType\": \"road\", \"elementType\": \"all\", \"stylers\": [{ \"weight\": \"1.00\" }, { \"gamma\": \"1.8\" }, { \"saturation\": \"0\" }] }, { \"featureType\": \"road\", \"elementType\": \"geometry.fill\", \"stylers\": [{ \"hue\": \"#ffb200\" }] }, { \"featureType\": \"road.arterial\", \"elementType\": \"geometry.fill\", \"stylers\": [{ \"lightness\": \"0\" }, { \"gamma\": \"1\" }] }, { \"featureType\": \"transit.station.airport\", \"elementType\": \"all\", \"stylers\": [{ \"hue\": \"#b000ff\" }, { \"saturation\": \"23\" }, { \"lightness\": \"-4\" }, { \"gamma\": \"0.80\" }] }, { \"featureType\": \"water\", \"elementType\": \"all\", \"stylers\": [{ \"color\": \"#a0daf2\" }] }];\n\n@Injectable()\nexport class MarsMapsService {\n\n    userLocationMarker: google.maps.Marker;\n    currentMarkerCoordinates;\n    currentMarkerLocation;\n    currentMarker;\n    static ALREADY_RENDERED_MARKERS = \"alreadyRenderedMarkers\";\n\n    constructor(private platform: Platform,\n        private globals: AppGlobals,\n        private geolocationService: MarsGeolocationService,\n        private markerService: MarsMapMarkerService) { }\n\n    getMap(mapElement: HTMLElement, options?, callback?: Function) {\n        return new Promise(async (resolve, reject) => {\n            MarsGeolocationService.onLoad(async () => {\n                let map = await this.instanceMap(mapElement, options);\n                resolve(map);\n            });\n        });\n    }\n\n    getMapForService(uniqueId: string) {\n        return new Promise(async (resolve, reject) => {\n            let mapElement = document.createElement(\"div\");\n            mapElement.id = uniqueId;\n            mapElement.style.display = \"none\";\n            document.body.appendChild(mapElement);\n            let map = await this.getMap(mapElement, { ignoreUserLocation: true });\n            resolve(map);\n        });\n    }\n\n    async instanceMap(mapElement: HTMLElement, options: any) {\n        return new Promise(async (resolve, reject) => {\n            let mapOptions: google.maps.MapOptions = Object.assign(options, {\n                disableDefaultUI: options.disableDefaultUI ? options.disableDefaultUI : false,\n                overviewMapControl: false,\n                mapTypeControl: false,\n                scaleControl: false,\n                fullscreenControl: false,\n                zoom: 2\n            });\n\n            if (this.platform.is(\"ios\"))\n                mapOptions.styles = apple_map_styles;\n\n            let customPolylineOptions = new google.maps.Polyline({\n                strokeOpacity: 0.8,\n                strokeWeight: 5\n            });\n\n            if (mapElement == null) {\n                console.warn(MarsMapsService.name + \": Map div not found. Please, check the id provided: \" + mapElement);\n                return;\n            };\n            let map = new google.maps.Map(mapElement, mapOptions);\n            map.set(MarsMapsService.ALREADY_RENDERED_MARKERS, {});\n            setTimeout(() => {\n                map.setCenter(new google.maps.LatLng(0, 0));\n            }, 200);\n\n            if (!options.ignoreUserLocation) {\n                if (!mapOptions.disableDefaultUI)\n                    this.addMyLocationController(map);\n\n                this.geolocationService.getUserLocation({}, (position) => {\n                    this.updateUserLocationOn(map, position);\n                    map.setCenter(position as any);\n                    map.setZoom(15 || options.zoom);\n                });\n            }\n            resolve(map);\n        });\n    }\n\n    addMyLocationController(map) {\n        let control = document.createElement(\"div\");\n        let targetButton = document.createElement(\"button\");\n        targetButton.style.backgroundColor = \"#fff\";\n        targetButton.style.border = \"none\";\n        targetButton.style.outline = \"none\";\n        targetButton.style.width = \"28px\";\n        targetButton.style.height = \"28px\";\n        targetButton.style.borderRadius = \"2px\";\n        targetButton.style.boxShadow = \"0 1px 4px rgba(0,0,0,0.3)\";\n        targetButton.style.cursor = \"pointer\";\n        targetButton.style.marginRight = \"10px\";\n        targetButton.style.padding = \"0px\";\n        targetButton.title = \"Your Location\";\n        control.appendChild(targetButton);\n        let text = document.createElement(\"div\");\n        text.style.margin = \"5px\";\n        text.style.width = \"18px\";\n        text.style.height = \"18px\";\n        text.style.backgroundImage = \"url(https://maps.gstatic.com/tactile/mylocation/mylocation-sprite-1x.png)\";\n        text.style.backgroundSize = \"180px 18px\";\n        text.style.backgroundPosition = \"0px 0px\";\n        text.style.backgroundRepeat = \"no-repeat\";\n        targetButton.appendChild(text);\n        control.appendChild(targetButton);\n        google.maps.event.addDomListener(targetButton, \"click\", async () => {\n            try {\n                let location = await this.geolocationService.getUserLocation();\n                this.updateUserLocationOn(map, location);\n                map.panTo(location);\n            } catch (e) {\n                console.warn(e);\n            }\n        });\n        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(targetButton);\n    }\n\n    updateUserLocationOn(map: google.maps.Map, coordinates: any) {\n        if (this.userLocationMarker)\n            this.userLocationMarker.setMap(null);\n        this.userLocationMarker = this.markerService.getUserMarker(map, coordinates);\n    }\n\n    generateMarkers(map: google.maps.Map, places: any, options: any, callback?: Function) {\n        if (places === null || !places)\n            return;\n        places.forEach((place) => {\n            if (place) {\n                place.id = place._id ? place._id : place.place_id;\n                place.ionIcon = place.ionIcon || this.globals.mapMarkerIcon;\n                place.provider = place._id ? MarsMapMarkerService.MARS_PROVIDER : MarsMapMarkerService.GOOGLE_MAPS_PROVIDER;\n                this.currentMarkerLocation = this.getPlaceLocation(place, place.provider);\n                this.currentMarkerCoordinates = new google.maps.LatLng(this.currentMarkerLocation.latitude, this.currentMarkerLocation.longitude);\n                this.currentMarker = map.get(MarsMapsService.ALREADY_RENDERED_MARKERS)[place.id];\n                this.currentMarker = this.currentMarker || this.markerService.getMarker(map, this.currentMarkerCoordinates, place, options);\n                // this.markerService.fadeInMarker(this.currentMarker, MarsMapMarkerService.MARKER_OPACITY_INITIAL_VALUE);\n                if (!map.get(MarsMapsService.ALREADY_RENDERED_MARKERS)[place.id])\n                    map.get(MarsMapsService.ALREADY_RENDERED_MARKERS)[place.id] = this.currentMarker;\n            }\n        });\n        if (callback)\n            callback();\n    }\n\n    getPlaceLocation(place, provider) {\n        try {\n            if (provider == MarsMapMarkerService.MARS_PROVIDER)\n                return { latitude: place.address.location.lat, longitude: place.address.location.lng, }\n            else\n                return { latitude: place.geometry.location.lat(), longitude: place.geometry.location.lng(), }\n        } catch (e) {\n            return { latitude: NaN, longitude: NaN };\n        }\n    }\n\n    clearMarkers(map) {\n        let currentsMarkers = map.get(MarsMapsService.ALREADY_RENDERED_MARKERS);\n        let marker: any = {};\n        let markerIsOnTheViewport = false;\n        for (let markerId in currentsMarkers) {\n            marker = currentsMarkers[markerId];\n            markerIsOnTheViewport = map.getBounds().contains(marker.getPosition());\n            if (marker && marker.setMap) {\n                if (!markerIsOnTheViewport) {\n                    delete currentsMarkers[markerId];\n                    marker.setMap(null);\n                }\n            }\n        };\n        map.set(MarsMapsService.ALREADY_RENDERED_MARKERS, currentsMarkers);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/maps.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Map marker management service.\n */\n\nimport { Injectable } from \"@angular/core\";\n\nimport { Platform } from \"ionic-angular\";\n\nimport { AppConstants } from \"@app/app.constants\";\nimport { AppGlobals } from \"@app/app.globals\";\n\nconst MARKER_OPACITY_INCREMENT = 0.1;\n\ndeclare var RichMarker;\n\n@Injectable()\nexport class MarsMapMarkerService {\n\n    static MARKER_OPACITY_INITIAL_VALUE = 0.1;\n    static GOOGLE_MAPS_PROVIDER = \"google\";\n    static MARS_PROVIDER = \"mars\";\n\n    constructor(private platform: Platform, private globals: AppGlobals) { }\n\n    getMarker(map: google.maps.Map, position: google.maps.LatLng, place, options: any = {}) {\n        let isMD = document.querySelector(\"ion-app\").className.indexOf(\"md\") > -1;\n        let platform = isMD ? \"md\" : \"ios\";\n        options = Object.assign({\n            position: position,\n            map: map,\n            visible: true,\n            optimized: true,\n            content: `<section class='marker ${place.cssClasses}'>\n                <section icon>\n                    <ion-icon class=\"icon icon-${platform} ion-${platform}-${place.ionIcon || this.globals.mapMarkerIcon}\"></ion-icon> \n                </section>\n            </section>`\n        }, options);\n        let marker = new RichMarker(options);\n        if (options.onMarkerClick) {\n            marker.addListener(\"click\", () => {\n                options.onMarkerClick(marker, place);\n            });\n            if (marker.markerWrapper_)\n                marker.markerWrapper_.style.cursor = \"pointer\";\n        };\n        return marker;\n    };\n\n    getUserMarker(map: google.maps.Map, coordinates: google.maps.LatLng) {\n        return new google.maps.Marker({\n            map: map,\n            icon: \"assets/images/map/user-marker.png\",\n            position: coordinates,\n            visible: true,\n            title: \"Sua localização\"\n        });\n    };\n\n    fadeInMarker(marker: google.maps.Marker, markerOpacity: number) {\n        if (markerOpacity <= 1) {\n            marker.setOpacity(markerOpacity);\n            setTimeout(() => {\n                markerOpacity += MARKER_OPACITY_INCREMENT;\n                this.fadeInMarker(marker, markerOpacity);\n            }, 50);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/marker.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application global variables.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppConstants } from \"./app.constants\";\nimport { AppLocales } from \"./app.locales\";\n\n@Injectable()\nexport class AppGlobals {\n\n  translations: AppTranslations;\n\n  package: string;\n  hideNavbar: boolean = true;\n  keyboardIsUp: boolean = false;\n  disableNavigation: boolean = false;\n  rootTabs: Array<any> = [];\n  userPages: Array<any> = [];\n  adminInfoPages: Array<any> = [];\n  customerInfoPages: Array<any> = [];\n  merchantInfoPages: Array<any> = [];\n  ongInfoPages: Array<any> = [];\n  currentHomeMap: google.maps.Map;\n  notifications: Array<any> = [];\n  pendingNotifications: Array<any> = [];\n  mapMarkerIcon = \"paw\";\n  orderNotificationsBadge: number;\n  paymentInstrument: any;\n\n  // Geolocation vars\n  orderAddress: any = { street: \"\" };\n  currentLocation: any = { street: \"\" };\n  currentAddress: any = { street: \"\" };\n\n  // Customer vars\n  hasPendingOrders: boolean = false;\n  currentOauthUser: any;\n  merchantKeyword: string;\n  isPlacingOrder: any;\n\n  constructor(public locales: AppLocales) {\n    this.translations = this.locales.load();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.globals.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 206;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/fesm5 lazy\n// module id = 206\n// module chunks = 71","var map = {\n\t\"../packages/admin/pages/catalogue/categories/catalogue-categories.module\": [\n\t\t625,\n\t\t4\n\t],\n\t\"../packages/admin/pages/catalogue/categories/category-options/category-options.module\": [\n\t\t558,\n\t\t70\n\t],\n\t\"../packages/admin/pages/catalogue/items/catalogue-items.module\": [\n\t\t560,\n\t\t16\n\t],\n\t\"../packages/admin/pages/catalogue/pending/catalogue-pending-items.module\": [\n\t\t561,\n\t\t69\n\t],\n\t\"../packages/admin/pages/information/basic/admin-basic-information.module\": [\n\t\t562,\n\t\t68\n\t],\n\t\"../packages/admin/pages/market-item/information/market-item-information.module\": [\n\t\t626,\n\t\t15\n\t],\n\t\"../packages/admin/pages/settings/admin-settings.module\": [\n\t\t563,\n\t\t67\n\t],\n\t\"../packages/admin/pages/subscription/coupons/information/subscription-coupon-information.module\": [\n\t\t564,\n\t\t66\n\t],\n\t\"../packages/admin/pages/subscription/coupons/list/subscription-coupons-list.module\": [\n\t\t565,\n\t\t14\n\t],\n\t\"../packages/admin/pages/subscription/plans/information/subscription-plan-information.module\": [\n\t\t566,\n\t\t65\n\t],\n\t\"../packages/admin/pages/subscription/plans/list/subscription-plans-list.module\": [\n\t\t624,\n\t\t13\n\t],\n\t\"../packages/admin/pages/users/list/user-options/user-options.module\": [\n\t\t559,\n\t\t64\n\t],\n\t\"../packages/admin/pages/users/list/users-list.module\": [\n\t\t567,\n\t\t2\n\t],\n\t\"../packages/customer/pages/cart/cart.module\": [\n\t\t568,\n\t\t63\n\t],\n\t\"../packages/customer/pages/information/basic/customer-basic-information.module\": [\n\t\t569,\n\t\t62\n\t],\n\t\"../packages/customer/pages/information/location/customer-location-information.module\": [\n\t\t570,\n\t\t61\n\t],\n\t\"../packages/customer/pages/information/profile/customer-profile-information.module\": [\n\t\t571,\n\t\t60\n\t],\n\t\"../packages/customer/pages/notifications/customer-notifications.module\": [\n\t\t572,\n\t\t59\n\t],\n\t\"../packages/customer/pages/order/creation/order-creation.module\": [\n\t\t573,\n\t\t58\n\t],\n\t\"../packages/customer/pages/order/history/order-history.module\": [\n\t\t574,\n\t\t12\n\t],\n\t\"../packages/customer/pages/pets/list/customer-pets-list.module\": [\n\t\t575,\n\t\t57\n\t],\n\t\"../packages/customer/pages/settings/customer-settings.module\": [\n\t\t576,\n\t\t56\n\t],\n\t\"../packages/merchant/pages/calendar/add-event-modal/add-event-modal.module\": [\n\t\t577,\n\t\t3\n\t],\n\t\"../packages/merchant/pages/information/basic/merchant-basic-information.module\": [\n\t\t578,\n\t\t55\n\t],\n\t\"../packages/merchant/pages/information/contact/merchant-contact-information.module\": [\n\t\t579,\n\t\t54\n\t],\n\t\"../packages/merchant/pages/information/location/merchant-location-information.module\": [\n\t\t580,\n\t\t53\n\t],\n\t\"../packages/merchant/pages/information/operation/merchant-operation-information.module\": [\n\t\t581,\n\t\t52\n\t],\n\t\"../packages/merchant/pages/information/selling/merchant-selling-information.module\": [\n\t\t582,\n\t\t51\n\t],\n\t\"../packages/merchant/pages/information/services/merchant-services-information.module\": [\n\t\t583,\n\t\t50\n\t],\n\t\"../packages/merchant/pages/inventory/categories/inventory-categories.module\": [\n\t\t584,\n\t\t49\n\t],\n\t\"../packages/merchant/pages/inventory/items/inventory-items.module\": [\n\t\t627,\n\t\t1\n\t],\n\t\"../packages/merchant/pages/notifications/merchant-notifications.module\": [\n\t\t585,\n\t\t48\n\t],\n\t\"../packages/merchant/pages/orders/analytics/orders-analytics.module\": [\n\t\t586,\n\t\t0\n\t],\n\t\"../packages/merchant/pages/orders/list/orders-list.module\": [\n\t\t587,\n\t\t47\n\t],\n\t\"../packages/merchant/pages/promotions/history/promotion-history.module\": [\n\t\t588,\n\t\t11\n\t],\n\t\"../packages/merchant/pages/promotions/information/promotion-information.module\": [\n\t\t589,\n\t\t46\n\t],\n\t\"../packages/merchant/pages/promotions/items/categories/promotion-categories.module\": [\n\t\t590,\n\t\t45\n\t],\n\t\"../packages/merchant/pages/promotions/items/items/promotion-items.module\": [\n\t\t591,\n\t\t44\n\t],\n\t\"../packages/merchant/pages/settings/merchant-settings.module\": [\n\t\t592,\n\t\t43\n\t],\n\t\"../packages/ong/pages/information/basic/ong-basic-information.module\": [\n\t\t593,\n\t\t42\n\t],\n\t\"../packages/ong/pages/information/contact/ong-contact-information.module\": [\n\t\t594,\n\t\t41\n\t],\n\t\"../packages/ong/pages/information/location/ong-location-information.module\": [\n\t\t595,\n\t\t40\n\t],\n\t\"../packages/ong/pages/settings/ong-settings.module\": [\n\t\t596,\n\t\t39\n\t],\n\t\"../pages/about/about.module\": [\n\t\t597,\n\t\t38\n\t],\n\t\"../pages/home/home.module\": [\n\t\t598,\n\t\t10\n\t],\n\t\"../pages/introduction/introduction.module\": [\n\t\t599,\n\t\t37\n\t],\n\t\"../pages/loading/loading.module\": [\n\t\t600,\n\t\t36\n\t],\n\t\"../pages/login/login.module\": [\n\t\t601,\n\t\t35\n\t],\n\t\"../pages/marketplace/market-item/details/market-item-details.module\": [\n\t\t602,\n\t\t34\n\t],\n\t\"../pages/marketplace/merchants/details/merchant-details.module\": [\n\t\t628,\n\t\t9\n\t],\n\t\"../pages/marketplace/merchants/nearby/merchants-nearby.module\": [\n\t\t603,\n\t\t33\n\t],\n\t\"../pages/marketplace/merchants/search/merchants-search.module\": [\n\t\t604,\n\t\t32\n\t],\n\t\"../pages/marketplace/merchants/shopwindow/categories/shopwindow-categories.module\": [\n\t\t605,\n\t\t31\n\t],\n\t\"../pages/marketplace/merchants/shopwindow/items/shopwindow-items.module\": [\n\t\t606,\n\t\t8\n\t],\n\t\"../pages/marketplace/order/details/order-details.module\": [\n\t\t607,\n\t\t7\n\t],\n\t\"../pages/marketplace/payment/bank-accounts/add/add-bank-account.module\": [\n\t\t608,\n\t\t30\n\t],\n\t\"../pages/marketplace/payment/bank-accounts/list/list-bank-accounts.module\": [\n\t\t609,\n\t\t29\n\t],\n\t\"../pages/marketplace/payment/bank-accounts/select/select-bank-account.module\": [\n\t\t610,\n\t\t28\n\t],\n\t\"../pages/marketplace/payment/payment-card/payment-card.module\": [\n\t\t611,\n\t\t27\n\t],\n\t\"../pages/marketplace/payment/payment-information/payment-information.module\": [\n\t\t613,\n\t\t26\n\t],\n\t\"../pages/marketplace/subscription/subscription-information/subscription-information.module\": [\n\t\t612,\n\t\t25\n\t],\n\t\"../pages/marketplace/subscription/subscription-payment/subscription-payment.module\": [\n\t\t614,\n\t\t24\n\t],\n\t\"../pages/not-found/not-found.module\": [\n\t\t615,\n\t\t23\n\t],\n\t\"../pages/password/recovery/password-recovery.module\": [\n\t\t616,\n\t\t22\n\t],\n\t\"../pages/password/update/password-update.module\": [\n\t\t617,\n\t\t21\n\t],\n\t\"../pages/specifics/pets/adopt/adopt.module\": [\n\t\t618,\n\t\t6\n\t],\n\t\"../pages/specifics/pets/details/pet-details.module\": [\n\t\t619,\n\t\t20\n\t],\n\t\"../pages/specifics/pets/information/pet-information.module\": [\n\t\t620,\n\t\t19\n\t],\n\t\"../pages/specifics/pets/lost-and-found/lost-and-found.module\": [\n\t\t621,\n\t\t5\n\t],\n\t\"../pages/terms-of-use/terms-of-use.module\": [\n\t\t622,\n\t\t18\n\t],\n\t\"../pages/user/type-information/user-type-information.module\": [\n\t\t623,\n\t\t17\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 248;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 248\n// module chunks = 71","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Responsive navbar component.\n */\n\nimport { Tabs, NavController, App } from \"ionic-angular\";\n\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\nimport { Injectable } from \"@angular/core\";\nimport { ViewChild } from \"@angular/core\";\n\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppMainPages } from \"@pages/main-pages\";\n\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { MarsViewService } from \"@services/view.service\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { MarsNavigationService } from \"@services/navigation.service\";\n\ndeclare var Mars;\n\n@Component({\n    selector: \"mars-navbar\",\n    templateUrl: \"mars-navbar.html\"\n})\n\n@Injectable()\nexport class MarsNavbarComponent {\n\n    navigationService: MarsNavigationService;\n\n    @ViewChild(\"tabs\") tabs: Tabs;\n\n    LAST_SELECTED_TAB = \"LAST_SELECTED_TAB\";\n    scrollLeft: boolean;\n    footerText: string;\n\n    constructor(private app: App,\n        private globals: AppGlobals,\n        private changeDetector: ChangeDetectorRef,\n        private authService: MarsAuthService,\n        private pages: AppMainPages) {\n        this.navigationService = new MarsNavigationService(this.app);\n    }\n\n    ngOnInit() {\n        let pages = this.pages.refresh();\n        let visible = pages.filter((page) => page.canShow());\n        if (!(visible.length > 0)) localStorage.clear();\n        this.restoreLastTab();\n        this.preserveTabs();\n    }\n\n    preserveTabs() {\n        this.tabs.ionChange.subscribe(() => {\n            let tab = this.tabs.getSelected();\n            let stringified = JSON.stringify({ root: tab.root, params: tab.rootParams });\n            localStorage[this.LAST_SELECTED_TAB] = stringified;\n        });\n    }\n\n    restoreLastTab() {\n        if (!(this.tabs as any)._views) return;\n        let stringified = localStorage[this.LAST_SELECTED_TAB];\n        if (typeof stringified !== \"string\") return false;\n        let lastTab = JSON.parse(stringified);\n        setTimeout(() => {\n            this.globals.rootTabs.map((page, index) => {\n                if (page.getRoot() == lastTab.root && page.canShow()) this.tabs.select(index, { animate: false });\n            });\n            this.globals.hideNavbar = false;\n            this.changeDetector.detectChanges();\n        }, 1000);\n    }\n\n    screenIsDesktopSized() {\n        return MarsViewService.screenIsDesktopSized();\n    }\n\n    toggleDrawer() {\n        this.scrollLeft = !this.scrollLeft;\n    }\n\n    getFooterText() {\n        return \"\";\n        /* if (this.scrollLeft)\n            return this.QUITO_LABS_ICON;\n        else\n            return Mars.UI.sidemenuFooterText || this.QUITO_LABS_TEXT; */\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-navbar/mars-navbar.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n */\n\nimport { Platform } from \"ionic-angular\";\nimport { Injectable, isDevMode } from \"@angular/core\";\n\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppConstants } from \"@app/app.constants\";\n\nimport { MarsPushNotificationService } from \"@services/push-notification.service\";\nimport { MarsCartService } from \"@services/cart.service\";\nimport { MarsAuthService } from \"@services/auth.service\";\n\ndeclare var Mars;\n\n@Injectable()\nexport class AppMainPages {\n\n    constructor(private platform: Platform,\n        private globals: AppGlobals,\n        private notificationService: MarsPushNotificationService,\n        private cartService: MarsCartService) { };\n\n    refresh() {\n        let pages = [\n            // Common pages\n            {\n                getRoot: () => { return \"MerchantsSearchPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Estabelecimentos\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-compass\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return (!MarsAuthService.isLoggedIn()) || (MarsAuthService.hasRole(\"CUSTOMER\")); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"CartPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Carrinho\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-shopping-cart\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return !this.cartService.isEmpty(); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            /* {\n                getRoot: () => { return \"AdoptPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Adoção\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"paw\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return (!MarsAuthService.isLoggedIn()) || (MarsAuthService.hasRole(\"CUSTOMER\")) || (MarsAuthService.hasRole(\"ONG\")); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"LostAndFoundPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Perdidos e Achados\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"pin\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return (!MarsAuthService.isLoggedIn()) || (MarsAuthService.hasRole(\"CUSTOMER\")) || (MarsAuthService.hasRole(\"ONG\")); },\n                disable: () => { return this.globals.disableNavigation }\n            }, */\n            {\n                getRoot: () => { return \"OrderHistoryPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Pedidos\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-clock-o\"; },\n                getBadge: () => { return this.globals.hasPendingOrders ? 1 : 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"CUSTOMER\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"CustomerSettingsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Configurações\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-cog\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"CUSTOMER\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            // Admin Pages\n            {\n                getRoot: () => { return \"CatalogueCategoriesPage\"; },\n                getRootParams: () => { return { category: \"root\" } },\n                getTitle: () => { return \"Produtos\"; },\n                getUrlPath: () => { return \"catalogue\" },\n                getIcon: () => { return \"folder\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"ADMIN\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"CataloguePendingItemsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Submissões\"; },\n                getUrlPath: () => { return \"pending\" },\n                getIcon: () => { return \"swap\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"ADMIN\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"UsersListPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Usuários\"; },\n                getUrlPath: () => { return \"users\" },\n                getIcon: () => { return \"people\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"ADMIN\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"SubscriptionPlansListPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Planos (Assinatura)\"; },\n                getUrlPath: () => { return \"subscription\" },\n                getIcon: () => { return \"refresh\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"ADMIN\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"AdminSettingsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Configurações\"; },\n                getUrlPath: () => { return \"settings},\n                getIcon: () => { return \"settings\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole(\"ADMIN\") },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            // Merchant Pages\n            {\n                getRoot: () => { return \"OrdersListPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Pedidos\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-clipboard\"; },\n                getBadge: () => { return this.globals.hasPendingOrders ? 1 : 0; },\n                canShow: () => { return MarsAuthService.hasRole('MERCHANT') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"InventoryCategoriesPage\"; },\n                getRootParams: () => { return { category: \"root\" } },\n                getTitle: () => { return \"Estoque\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-cubes\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole('MERCHANT') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"PromotionHistoryPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Promoções\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-tags\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole('MERCHANT') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"OrdersAnalyticsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Minhas Vendas\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-bar-chart\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole('MERCHANT') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"MerchantSettingsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Configurações\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-cog\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole('MERCHANT') || MarsAuthService.hasRole('SERVICE_ESTABLISHMENT') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            // ONG Pages\n            {\n                getRoot: () => { return \"AdoptPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Adoção\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-paw\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return (!MarsAuthService.isLoggedIn()) || (MarsAuthService.hasRole(\"CUSTOMER\")) || (MarsAuthService.hasRole(\"ONG\")); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"LostAndFoundPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Perdidos e Achados\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"pin\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return (!MarsAuthService.isLoggedIn()) || (MarsAuthService.hasRole(\"CUSTOMER\")) || (MarsAuthService.hasRole(\"ONG\")); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            {\n                getRoot: () => { return \"OngSettingsPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Configurações\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"settings\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return MarsAuthService.hasRole('ONG') },\n                disable: () => { return this.globals.disableNavigation }\n            },\n            // Common about page\n            {\n                getRoot: () => { return \"AboutPage\"; },\n                getRootParams: () => { return {} },\n                getTitle: () => { return \"Sobre\"; },\n                getUrlPath: () => { return \"app\" },\n                getIcon: () => { return \"la-info-circle\"; },\n                getBadge: () => { return 0; },\n                canShow: () => { return !MarsAuthService.isLoggedIn(); },\n                disable: () => { return this.globals.disableNavigation }\n            },\n        ];\n\n        this.globals.rootTabs = pages;\n\n        return pages;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main-pages.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Push notification service.\n */\n\nimport { EventEmitter, Injectable } from \"@angular/core\";\n\nimport { Platform } from \"ionic-angular\";\n\nimport { AppConstants } from \"@app/app.constants\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { MarsAuthService } from \"@services/auth.service\";\n\ndeclare var window: any;\n\n@Injectable()\nexport class MarsPushNotificationService {\n\n    onPush: EventEmitter<any> = new EventEmitter();\n    appId: string;\n    GCM_SENDER_ID: string;\n    ONESIGNAL_SUBDOMAIN: string;\n    platformIsMobile: boolean = false;\n    onesignalWebSDK: any = window.OneSignal;\n    promptOptions: any;\n\n    constructor(private platform: Platform,\n        private globals: AppGlobals) { }\n\n    initialize(options: any) {\n        this.platformIsMobile = this.platform.is(\"cordova\");\n        if (this.platformIsMobile)\n            this.getMobileSubscription();\n        else\n            this.getDesktopSubscription();\n    }\n\n    getDesktopSubscription() {\n        this.webSdkConfig([\"init\", {\n            appId: this.appId,\n            subdomainName: this.ONESIGNAL_SUBDOMAIN,\n            notifyButton: { enable: false },\n            promptOptions: this.getPromptOptions()\n        }]);\n        this.webSdkConfig([\"registerForPushNotifications\", { modalPrompt: false }]);\n        this.webSdkConfig([\"setDefaultNotificationUrl\", window.location.href]);\n        this.webSdkConfig([\"addListenerForNotificationOpened\", (notification) => { this.onPush.emit() }]);\n        this.webSdkConfig([\"registerForPushNotifications\"]);\n    };\n\n    webSdkConfig(data: Array<any>) {\n        return this.onesignalWebSDK ? this.onesignalWebSDK.push(data) : console.warn(\"Whoops! Please remember to call the initialize() function before subscribing for pushes ;)\");\n    }\n\n    getMobileSubscription() {\n        window.plugins.OneSignal.init(this.appId,\n            { googleProjectNumber: this.GCM_SENDER_ID },\n            (notification) => {\n                this.onPush.emit(notification);\n            });\n        window.plugins.OneSignal.enableInAppAlertNotification(true);  // Show an alert box if a notification comes in when the user is in your app.\n    };\n\n    setUserId(userId: string) {\n        this.webSdkConfig([\"sendTag\", \"mars_user_id\", userId]);\n    }\n\n    getPromptOptions() {\n        return this.promptOptions || {\n            actionMessage: \"Você deseja habilitar notificações no \" + AppConstants.NAME + \"?\",\n            exampleNotificationTitleDesktop: \"Nova mensagem\",\n            exampleNotificationMessageDesktop: \"Olá! Tudo bem com você? :)\",\n            exampleNotificationTitleMobile: \"Nova mensagem\",\n            exampleNotificationMessageMobile: \"Olá! Tudo bem com você? :)\",\n            exampleNotificationCaption: \"Você pode cancelar a qualquer momento\",\n            acceptButtonText: \"Estou dentro!\",\n            cancelButtonText: \"Não, obrigado.\",\n            showCredit: true\n        };\n    }\n\n    getUnreadNotificationsByType(type) {\n        if (!MarsAuthService.isLoggedIn())\n            return [];\n\n        let unread = [];\n        let isFromType = false;\n        let isUnread = false;\n        let user = MarsAuthService.getLoggedInUser()._id;\n        this.globals.notifications.map((notification) => {\n            isFromType = notification && notification.data && (notification.data.type == type);\n            isUnread = notification.readBy && (notification.readBy.indexOf(user) == -1);\n            if (isFromType && isUnread)\n                unread.push(notification);\n        });\n        return unread;\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/push-notification.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description File upload management service.\n */\n\nimport { Injectable } from \"@angular/core\";\n\nimport { Uploader } from \"angular2-http-file-upload\";\nimport { UploadItem } from \"angular2-http-file-upload\";\n\n@Injectable()\nexport class MarsFileUploaderService {\n\n    constructor(private uploaderService: Uploader) { }\n\n    upload(url: string, file: File, params: any, headers: any, callback: Function) {\n        let uploadItem = new UploadItem();\n        uploadItem.file = file;\n        uploadItem.url = url;\n        uploadItem.headers = headers;\n        uploadItem.formData = params; // (optional) form data can be sent with file\n\n        this.uploaderService.upload(uploadItem);\n\n        this.uploaderService.onCompleteUpload = (item, response, status, headers) => {\n            if (callback) callback(undefined, response);\n        };\n        this.uploaderService.onErrorUpload = (item, response, status, headers) => {\n            if (callback) callback({ status: status, message: \"Whoops! There was an error uploading the file :(\" });\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/file-uploader.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Product options component.\n */\n\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, NgZone, ChangeDetectionStrategy } from \"@angular/core\";\n\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppLocales } from \"@app/app.locales\";\n\nimport { MarsInteractionService } from \"@services/interaction.service\";\nimport { MarsNavigationService } from \"@services/navigation.service\";\n\nimport { Backend } from \"@backend/index\";\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { ViewController } from \"ionic-angular\";\nimport { NavParams } from \"ionic-angular\";\n\n@Component({ \n    templateUrl: \"mars-product-options.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n })\n\nexport class MarsProductOptionsMenu {\n    private product: any;\n    private options: any;\n    private events: Array<EventEmitter<any>>;\n    private spinner: any;\n    private token: string;\n    private translations: AppTranslations;\n\n    constructor(private viewCtrl: ViewController,\n        private navParams: NavParams,\n        private changeDetector: ChangeDetectorRef,\n        private locales: AppLocales,\n        private globals: AppGlobals,\n        private interactionService: MarsInteractionService) {\n        this.translations = locales.load();\n        this.product = navParams.data.product;\n        this.options = navParams.data.options;\n        this.events = navParams.data.events;\n        this.token = MarsAuthService.getMarsToken();\n    }\n\n    private isDeleted() {\n        return this.product && this.product.information && this.product.information.deleted;\n    }\n\n    private emit(event: string) {\n        return this.events[event].emit(this.product);\n    }\n\n    private hasListeners(event: EventEmitter<any>) {\n        return this.events && event && event.observers.length > 0;\n    }\n\n    private close(data?: any) {\n        this.viewCtrl.dismiss(data);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-product/options/mars-product-options.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application components module.\n */\n\nimport { MarsCreditCardComponent } from './mars-credit-card/mars-credit-card';\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicModule } from \"ionic-angular\";\n\nimport { PipesModule } from \"@pipes/pipes.module\";\nimport { DirectivesModule } from \"@directives/directives.module\";\n\nimport { MarsAssistantComponent } from \"./mars-assistant/mars-assistant\";\nimport { MarsNavbarComponent } from \"./mars-navbar/mars-navbar\";\nimport { MarsSignupProgressComponent } from \"./mars-signup-progress/mars-signup-progress\";\nimport { MarsTranslatableComponent } from \"./mars-translatable/mars-translatable\";\nimport { MarsViewSpinnerComponent } from \"./mars-view-spinner/mars-view-spinner\";\n\nimport { Ionic2RatingModule } from \"ionic2-rating/dist/ionic2-rating.module\";\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\nimport { NgxMaskModule } from 'ngx-mask';\n\n// Marketplace\nimport { MarketItemCategoryComponent } from \"./marketplace/market-item-category/market-item-category\";\nimport { MarsProductComponent } from \"./mars-product/mars-product\";\nimport { MarsProductOptionsMenu } from \"./mars-product/options/mars-product-options\";\nimport { MarsBankAccountCardComponent } from './mars-bank-account-card/mars-bank-account-card';\n\n@NgModule({\n    entryComponents: [MarsProductOptionsMenu],\n    imports: [\n        CommonModule,\n        IonicModule,\n        PipesModule,\n        DirectivesModule,\n        Ionic2RatingModule,\n        CurrencyMaskModule,\n        NgxMaskModule.forRoot()\n    ],\n    declarations: [\n        MarsAssistantComponent,\n        MarsNavbarComponent,\n        MarsSignupProgressComponent,\n        MarsTranslatableComponent,\n        MarsViewSpinnerComponent,\n        // Marketplace\n        MarketItemCategoryComponent,\n        MarsProductComponent,\n        MarsProductOptionsMenu,\n        MarsCreditCardComponent,\n        MarsBankAccountCardComponent\n    ],\n    exports: [\n        MarsAssistantComponent,\n        MarsNavbarComponent,\n        MarsSignupProgressComponent,\n        MarsTranslatableComponent,\n        MarsViewSpinnerComponent,\n        // Marketplace\n        MarketItemCategoryComponent,\n        MarsProductComponent,\n        MarsCreditCardComponent,\n        MarsBankAccountCardComponent\n    ]\n})\nexport class ComponentsModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Nearby management service.\n */\n\nimport { Injectable, EventEmitter } from \"@angular/core\";\n\nimport { AppConstants } from \"@app/app.constants\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppLocales } from \"@app/app.locales\";\n\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { MarsInteractionService } from \"@services/interaction.service\";\nimport { MarsGeolocationService } from \"@services/geolocation/geolocation.service\";\nimport { MarsMapsService } from \"@services/geolocation/maps.service\";\nimport { Backend } from \"@backend/index\";\n\n@Injectable()\nexport class MarsNearByService {\n\n    static MARS_PROVIDER = \"mars\";\n    static GOOGLE_PROVIDER = \"google\";\n    map: any;\n    init: EventEmitter<any> = new EventEmitter();\n\n    constructor(private locales: AppLocales,\n        private globals: AppGlobals,\n        private interactionService: MarsInteractionService,\n        private mapsService: MarsMapsService) {\n        this.initMap();\n    }\n\n    async initMap() {\n        this.map = await this.mapsService.getMapForService(\"nearby-service\");\n        this.init.emit();\n    }\n\n    getNearbyMerchants(options: any = {}) {\n        return new Promise((resolve, reject) => {\n            MarsGeolocationService.onLoad(async () => {\n                let googleMerchants = (await this.getNearbyMerchantsFromGoogleMaps(options) as any);\n                let merchants = (await this.getNearbyMerchantsFromServer(options) as any);\n                merchants = googleMerchants.concat(merchants);\n                merchants.map((merchant) => {\n                    merchant.ionIcon = this.globals.mapMarkerIcon;\n                });\n                resolve(merchants);\n            });\n        });\n    }\n\n    async getNearbyMerchantsFromServer(options) {\n        let desiredRadius = options.keyword ? 100000 : 10000;\n        let params = {\n            \"latitude\": typeof options.coordinates.lat == \"function\" ? options.coordinates.lat() : options.coordinates.lat,\n            \"longitude\": typeof options.coordinates.lng == \"function\" ? options.coordinates.lng() : options.coordinates.lng,\n            \"radius\": desiredRadius,\n            \"keyword\": options.keyword,\n            \"types\": options.types\n        };\n        return new Promise(async (resolve, reject) => {\n            try {\n                let merchants = (await Backend.getNearbyMerchants(params)).data;\n                merchants.map((merchant) => {\n                    if (merchant.address)\n                        merchant.vicinity = merchant.address.vicinity;\n                    merchant.provider = MarsNearByService.MARS_PROVIDER;\n                });\n                resolve(merchants);\n            } catch (e) {\n                reject(e);\n            } finally {\n            }\n        });\n    }\n\n    getNearbyMerchantsFromGoogleMaps(options) {\n        let desiredRadius = options.keyword ? 100000 : 3000;\n        let params = {\n            \"latitude\": options.coordinates.lat(),\n            \"longitude\": options.coordinates.lng(),\n            \"radius\": desiredRadius,\n            \"keyword\": options.keyword,\n            \"types\": options.types\n        };\n        return new Promise((resolve, reject) => {\n            if (!navigator.onLine) {\n                return reject();\n            }\n            let service = new google.maps.places.PlacesService(this.map);\n            let location = new google.maps.LatLng(params.latitude, params.longitude);\n            service.nearbySearch({\n                location: location,\n                radius: params.radius,\n                keyword: params.keyword,\n                types: params.types,\n            }, (merchants) => {\n                merchants.map((merchant) => {\n                    (merchant as any).provider = MarsNearByService.GOOGLE_PROVIDER;\n                });\n                resolve(merchants);\n            });\n        });\n    }\n\n    async getMerchantData(merchantProvider: string, merchant: string) {\n        let merchantIsFromMars = merchantProvider == MarsNearByService.MARS_PROVIDER;\n        let response = await merchantIsFromMars ? (await Backend.getMerchantByUsername({ username: merchant })).data : (await this.getGooglePlaceData(merchant));\n        return response;\n    }\n\n    async getGooglePlaceData(merchant: string) {\n        return new Promise((resolve, reject) => {\n            let requestInformation = () => {\n                let service = new google.maps.places.PlacesService(this.map);\n                service.getDetails({ placeId: merchant }, (place, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        (place as any).address = place;\n                        resolve(place);\n                    } else {\n                        reject(status);\n                    }\n                });\n            }\n            if (this.map) {\n                requestInformation();\n            } else {\n                this.init.subscribe(requestInformation);\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/nearby.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application socket module.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport * as io from \"socket.io-client\";\nimport { AppConstants } from \"./app.constants\";\n\n@Injectable()\nexport class MarsSocket {\n\n    static socket: any;\n\n    static connect(server) {\n        MarsSocket.socket = MarsSocket.socket || io(server);\n        MarsSocket.socket.on('disconnect', () => {\n            MarsSocket.socket.open();\n        });\n    }\n\n    static disconnect() {\n\n    }\n\n    static on(event: string, callback?) {\n        MarsSocket.socket.on(event, callback);\n    }\n\n    static emit(event: string, data: any) {\n        MarsSocket.socket.emit(event, data);\n    }\n\n    static join(room) {\n        MarsSocket.socket.emit('join', room);\n    }\n\n    static leave(room) {\n        MarsSocket.socket.emit('leave', room);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.socket.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Map geocoder management service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { MarsGeolocationService } from \"./geolocation.service\";\n\n@Injectable()\nexport class MarsGeocoderService {\n\n    geocoder: google.maps.Geocoder;\n\n    constructor() {\n        MarsGeolocationService.onLoad(() => {\n            this.geocoder = new google.maps.Geocoder();\n        });\n    };\n\n    coordinatesToAddress(coordinates) {\n        return new Promise((resolve, reject) => {\n            MarsGeolocationService.onLoad(() => {\n                this.geocoder.geocode(<google.maps.GeocoderRequest>{\n                    \"latLng\": coordinates\n                }, (results, status) => {\n                    if (status === google.maps.GeocoderStatus.OK)\n                        if (results[0]) return resolve(results[0]);\n                        else return reject(MarsGeocoderService.name + \": Whoops! No results found for geocoder.\");\n                    else return reject(MarsGeocoderService.name + \": Geocoder failed due to: \" + status);\n                });\n            });\n        });\n\n    }\n\n    addressSearch(address) {\n        return new Promise((resolve, reject) => {\n            MarsGeolocationService.onLoad(() => {\n                this.geocoder.geocode(<google.maps.GeocoderRequest>{\n                    \"address\": address\n                }, (results, status) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        if (results[0]) {\n                            resolve(results[0]);\n                        } else {\n                            reject(MarsGeocoderService.name + \": Whoops! No results found for geocoder.\");\n                        }\n                    } else {\n                        reject(MarsGeocoderService.name + \": Geocoder failed due to: \" + status);\n                    }\n                });\n            })\n\n        });\n    }\n\n    async addressToCoordinates(address) {\n        return new Promise((resolve, reject) => {\n            MarsGeolocationService.onLoad(async () => {\n                try {\n\n                } catch (e) {\n                    return reject(e);\n                }\n                let result = await this.addressSearch(address) as any;\n                let coordinates = {\n                    lng: result.geometry.location.lng(),\n                    lat: result.geometry.location.lat()\n                }\n                resolve(coordinates);\n            });\n        });\n    }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/geocoder.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Credit card component.\n */\n\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport * as moment from \"moment-mini\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'mars-credit-card',\n    templateUrl: 'mars-credit-card.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarsCreditCardComponent {\n    expirationMonths: Array<any>;\n    expirationYears: Array<any>;\n    availableBrands: Array<any>;\n    showBack: boolean;\n    @Input(\"card\") card: Array<any>;\n    @Input(\"exclude-fields\") excludedFields: Array<any> = [];\n\n    @ViewChild(\"cardForm\") form: NgForm;\n\n    constructor(private changeDetector: ChangeDetectorRef) { }\n\n    ngOnInit() {\n        this.initExpirationOptions();\n    }\n\n    getPhoneMask(phone) {\n        return (phone && phone.length > 14) ? '(99) 99999-9999' : '(99) 9999-9999'\n    }\n\n    getDocumentMask(documentType: string) {\n        return documentType == \"CNPJ\" ? \"99.999.999/9999-99\" : \"999.999.999-99\";\n    }\n\n    async initExpirationOptions() {\n        let expiration = {\n            months: [],\n            years: []\n        };\n        for (let month = 1; month <= 12; month++) {\n            expiration.months.push(this.pad(month));\n        }\n        for (let year = 0; year <= 30; year++) {\n            expiration.years.push(moment().add(year, \"years\").format(\"YYYY\"));\n        }\n        this.expirationMonths = expiration.months;\n        this.expirationYears = expiration.years;\n        this.changeDetector.detectChanges();\n    }\n\n    pad(num) {\n        return (num < 10) ? '0' + num.toString() : num.toString();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-credit-card/mars-credit-card.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Order by pipe.\n */\n\n/*\n * Example use\n *\t\tBasic Array of single type: *ngFor=\"let todo of todoService.todos | orderBy : \"-\"\"\n *\t\tMultidimensional Array Sort on single column: *ngFor=\"let todo of todoService.todos | orderBy : [\"-status\"]\"\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor=\"let todo of todoService.todos | orderBy : [\"status\", \"-title\"]\"\n */\n\nimport { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"orderBy\",\n    pure: false\n})\nexport class OrderByPipe implements PipeTransform {\n\n    private value: string[] = [];\n    private iterations: number = 1;\n    private HEALTHY_MAXIMUM_ITERATIONS_NUMBER = 200;\n    private thePipeIsOverloadingTheView = false;\n    private overloadWarningHasBeenShown = false;\n\n    static _orderByComparator(a: any, b: any): number {\n\n        if (a === null || typeof a === \"undefined\") a = 0;\n        if (b === null || typeof b === \"undefined\") b = 0;\n\n        if (a instanceof Date && b instanceof Date) {\n            if (a < b) return -1;\n            else if (a > b) return 1;\n            else return 0;\n        }\n\n        if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n\n            // Isn\"t a number so lowercase the string to properly compare\n            if (a.toLowerCase() < b.toLowerCase()) return -1;\n            if (a.toLowerCase() > b.toLowerCase()) return 1;\n        } else {\n\n            // Parse strings as numbers to compare properly\n            if (parseFloat(a) < parseFloat(b)) return -1;\n            if (parseFloat(a) > parseFloat(b)) return 1;\n\n        }\n\n        return 0; // equal each other\n    }\n\n    transform(input: any, config: string = \"+\"): any {\n\n        // invalid input given\n        if (!input) return input;\n\n        this.iterations++;\n        this.thePipeIsOverloadingTheView = this.iterations > this.HEALTHY_MAXIMUM_ITERATIONS_NUMBER;\n        if (this.thePipeIsOverloadingTheView && !this.overloadWarningHasBeenShown)\n            console.warn(OrderByPipe.name + `: the change detection strategy is making the pipe run too many times in a row. \n            Please, consider changing it to ChangeStrategy.OnPush in order to make change detections only when necessary.`);\n\n        // make a copy of the input\"s reference\n        this.value = [...input];\n        let value = this.value;\n\n        if (!Array.isArray(value)) return value;\n\n        if (!Array.isArray(config) || (Array.isArray(config) && config.length == 1)) {\n            let propertyToCheck: string = !Array.isArray(config) ? config : config[0];\n            let desc = propertyToCheck.substr(0, 1) == \"-\";\n\n            // Basic array\n            if (!propertyToCheck || propertyToCheck == \"-\" || propertyToCheck == \"+\") {\n                return !desc ? value.sort() : value.sort().reverse();\n            }\n            else {\n                let property: string = propertyToCheck.substr(0, 1) == \"+\" || propertyToCheck.substr(0, 1) == \"-\"\n                    ? propertyToCheck.substr(1)\n                    : propertyToCheck;\n\n                return value.sort(function (a: any, b: any) {\n                    let aValue = a[property];\n                    let bValue = b[property];\n\n                    let propertySplit = property.split(\".\");\n\n                    if (typeof aValue === \"undefined\" && typeof bValue === \"undefined\" && propertySplit.length > 1) {\n                        aValue = a;\n                        bValue = b;\n                        for (let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]];\n                            bValue = bValue[propertySplit[j]];\n                        }\n                    }\n\n                    return !desc\n                        ? OrderByPipe._orderByComparator(aValue, bValue)\n                        : -OrderByPipe._orderByComparator(aValue, bValue);\n                });\n            }\n        }\n        else {\n            // Loop over property of the array in order and sort\n            return value.sort(function (a: any, b: any) {\n                for (let i: number = 0; i < config.length; i++) {\n                    let desc = config[i].substr(0, 1) == \"-\";\n                    let property = config[i].substr(0, 1) == \"+\" || config[i].substr(0, 1) == \"-\"\n                        ? config[i].substr(1)\n                        : config[i];\n\n                    let aValue = a[property];\n                    let bValue = b[property];\n\n                    let propertySplit = property.split(\".\");\n\n                    if (typeof aValue === \"undefined\" && typeof bValue === \"undefined\" && propertySplit.length > 1) {\n                        aValue = a;\n                        bValue = b;\n                        for (let j = 0; j < propertySplit.length; j++) {\n                            aValue = aValue[propertySplit[j]];\n                            bValue = bValue[propertySplit[j]];\n                        }\n                    }\n\n                    let comparison = !desc\n                        ? OrderByPipe._orderByComparator(aValue, bValue)\n                        : -OrderByPipe._orderByComparator(aValue, bValue);\n\n                    // Don\"t return 0 yet in case of needing to sort by next property\n                    if (comparison != 0) return comparison;\n                }\n\n                return 0; // equal each other\n            });\n        }\n    }\n\n    order(input: any, orderBy: string = \"+\") {\n        return this.transform(input, orderBy);\n    }\n}\n\nexport let ORDERBY_PROVIDERS = [\n    OrderByPipe\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/order-by.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Bank account card component.\n */\n\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'mars-bank-account-card',\n    templateUrl: 'mars-bank-account-card.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarsBankAccountCardComponent {\n    @Input(\"account\") account: Array<any>;\n    @ViewChild(\"accountForm\") private form: NgForm;\n\n    private banks = [{ \"label\": \"BANCO ABN AMRO REAL S.A. (REAL)\", \"value\": \"356\" }, { \"label\": \"BANCO ACOMERCIAL E DE INVESTIMENTO SUDAMERIS S.A. (SUDAMERIS)\", \"value\": \"215\" }, { \"label\": \"BANCO ALFA S.A (ALFA)\", \"value\": \"025\" }, { \"label\": \"BANCO BBM S.A (BBM)\", \"value\": \"107\" }, { \"label\": \"BANCO BMG S.A. (BMG)\", \"value\": \"318\" }, { \"label\": \"BANCO BRADESCO S.A. (BRADESCO)\", \"value\": \"237\" }, { \"label\": \"BANCO CACIQUE S. A. (CACIQUE)\", \"value\": \"263\" }, { \"label\": \"BANCO CITIBANK S.A.\", \"value\": \"745\" }, { \"label\": \"BANCO COOPERATIVO DO BRASIL S.A. - (BANCOOB)\", \"value\": \"756\" }, { \"label\": \"BANCO COOPERATIVO SICREDI S.A. (SICREDI)\", \"value\": \"748\" }, { \"label\": \"BANCO CRUZEIRO DO SUL S.A. (CRUZEIRO DO SUL)\", \"value\": \"229\" }, { \"label\": \"BANCO DA AMAZONIA S.A. (BANCO DA AMAZÔNIA (BASA))\", \"value\": \"003\" }, { \"label\": \"BANCO DE BRASÍLIA S.A. (BRB)\", \"value\": \"070\" }, { \"label\": \"BANCO DO BRASIL S.A. (BANCO DO BRASIL)\", \"value\": \"001\" }, { \"label\": \"BANCO DO ESTADO DE SANTA CATARINA S.A.\", \"value\": \"027\" }, { \"label\": \"BANCO DO ESTADO DE SERGIPE S.A (BANESE)\", \"value\": \"047\" }, { \"label\": \"BANCO DO ESTADO DO PARÁ S/A. (BANPARÁ)\", \"value\": \"037\" }, { \"label\": \"BANCO DO ESTADO DO RIO GRANDE DO SUL S.A. (BANRISUL)\", \"value\": \"041\" }, { \"label\": \"BANCO DO NORDESTE DO BRASIL S.A (BANCO DO NORDESTE (BNB) )\", \"value\": \"004\" }, { \"label\": \"BANCO FININVEST S.A. (FININVEST)\", \"value\": \"252\" }, { \"label\": \"BANCO IBI S.A - BANCO MULTIPLO (BANCO IBI)\", \"value\": \"063\" }, { \"label\": \"BANCO INTERMEDIUM S.A.\", \"value\": \"077\" }, { \"label\": \"BANCO ITAU S.A. (ITAÚ)\", \"value\": \"341\" }, { \"label\": \"BANCO ITAUBANK S.A.\", \"value\": \"479\" }, { \"label\": \"BANCO MERCANTIL DO BRASIL S.A. (MERCANTIL DO BRASIL)\", \"value\": \"389\" }, { \"label\": \"BANCO NOSSA CAIXA S.A (NOSSA CAIXA)\", \"value\": \"151\" }, { \"label\": \"BANCO ORIGINAL\", \"value\": \"212\" }, { \"label\": \"BANCO PANAMERICANO S.A. (PANAMERICANO)\", \"value\": \"623\" }, { \"label\": \"BANCO RENDIMENTO S.A. (BANCO RENDIMENTO)\", \"value\": \"633\" }, { \"label\": \"BANCO SAFRA S.A. (SAFRA)\", \"value\": \"422\" }, { \"label\": \"BANCO SANTANDER S.A. (SANTANDER BANESPA)\", \"value\": \"033\" }, { \"label\": \"BANCO SIMPLES S.A. (BANCO SIMPLES)\", \"value\": \"749\" }, { \"label\": \"BANCO UBS PACTUAL S.A.\", \"value\": \"208\" }, { \"label\": \"BANCO UNICRED\", \"value\": \"136\" }, { \"label\": \"BANCO VOTORANTIM S.A (VOTORANTIM)\", \"value\": \"655\" }, { \"label\": \"BANESTES S.A BANCO DO ESTADO DO ESPIRITO SANTO (BANESTES)\", \"value\": \"021\" }, { \"label\": \"BANIF - BANCO INTERNACIONAL DO FUNCHAL (BRASIL), S.A. (BANIF)\", \"value\": \"719\" }, { \"label\": \"BPN BRASIL BANCO MÚLTIPLO S.A. (BPN)\", \"value\": \"069\" }, { \"label\": \"CAIXA ECONOMICA FEDERAL (CAIXA ECONÔMICA FEDERAL)\", \"value\": \"104\" }, { \"label\": \"CECRED-COOPERATIVA CENTRAL DE CREDITO URBANO\", \"value\": \"085\" }, { \"label\": \"CONFEDERAÇÂO NACIONAL DAS COOPERATIVAS CENTRAIS UNICREDS\", \"value\": \"136\" }, { \"label\": \"HSBC BANK BRASIL S.A.BANCO MULTIPLO (HSBC)\", \"value\": \"399\" }, { \"label\": \"LEMON BANK BANCO MÚLTIPLO S..A (LEMON BANK)\", \"value\": \"065\" }, { \"label\": \"UNIBANCO UNIAO DE BANCOS BRASILEIROS S.A. (UNIBANCO)\", \"value\": \"409\" }];\n    constructor(private changeDetector: ChangeDetectorRef) { }\n\n    ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-bank-account-card/mars-bank-account-card.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Map infowindow management service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppConstants } from \"@app/app.constants\";\n\n@Injectable()\nexport class MarsInfoWindowService {\n\n    constructor() { }\n\n    getInfoWindow(map: google.maps.Map, options: any = {}) {\n        let div = document.createElement(\"article\");\n        options.cssClasses = \"infowindow\" + options.cssClasses;\n        div.classList.add(\"infowindow\", options.cssClasses);\n        div.setAttribute(\"infowindow\", \"\");\n\n        let content = document.createElement(\"section\");\n        content.setAttribute(\"infowindow-content\", \"\");\n        content.classList.add(\"infowindow-content\");\n\n        let title = document.createElement(\"section\");\n        title.setAttribute(\"infowindow-title\", \"\");\n        title.classList.add(\"infowindow-title\");\n        title.innerHTML = options.title;\n\n        let body = document.createElement(\"section\");\n        body.setAttribute(\"infowindow-body\", \"\");\n        body.classList.add(\"infowindow-body\");\n        body.innerHTML = options.body;\n\n        content.appendChild(title);\n        content.appendChild(body);\n\n        if (options && options.moreInfoLink && options.moreInfoLink.onClick) {\n            let link = document.createElement(\"a\");\n            link.setAttribute(\"infowindow-link\", \"\");\n            link.classList.add(\"infowindow-link\");\n            link.innerHTML = options.moreInfoLink.content;\n            content.addEventListener(\"click\", () => {\n                options.moreInfoLink.onClick(infowindow);\n            });\n            content.appendChild(link);\n        }\n\n        div.appendChild(content);\n\n        let infowindow = new google.maps.InfoWindow({\n            content: div\n        });\n\n\n        return infowindow;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/infowindow.service.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description Application util functions.\r\n */\r\n\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AppUtils {\r\n\r\n    constructor() { };\r\n\r\n     static generateUniqueIdOf(numberOfChars) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < numberOfChars; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text.toUpperCase();\r\n    }\r\n}\r\n\r\nArray.prototype.indexOfObject = function (property: string, value: any) {\r\n    try {\r\n        for (let i = 0, len = this.length; i < len; i++) {\r\n            if (this[i] !== null && eval(`this[i].${property}`) === value) return i;\r\n        }\r\n        return -1;\r\n    } catch (e) {\r\n        return -1;\r\n    }\r\n}\r\n\r\nArray.prototype.containsObjectWith = function (property: string, value: any) {\r\n    return this.indexOfObject(property, value) > -1;\r\n}\r\n\r\nNumber.prototype.toRad = function () {\r\n    return this * Math.PI / 180;\r\n}\r\n\r\nString.prototype.contaisNumbers = function () {\r\n    let numbersOnString = this.match(/\\d+/g);\r\n    let stringHasNumbers = numbersOnString != null;\r\n    return stringHasNumbers;\r\n}\r\n\r\nString.prototype.contains = function (keyword: string) {\r\n    let stringContainsKeyword = this.indexOf(keyword) > -1;\r\n    return stringContainsKeyword;\r\n}\r\n\r\nString.prototype.isValidEmail = function () {\r\n    let emailRegex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    return emailRegex.test(this);\r\n}\r\n\r\nString.prototype.toTitleCase = function () {\r\n    return this.replace(/\\w\\S*/g, function (txt) {\r\n        if (txt)\r\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        else\r\n            return this;\r\n    });\r\n}\r\n\r\nString.prototype.toUnderscoreCase = function () {\r\n    return this.replace(/\\.?([A-Z]+)/g, function (x, y) { return \"_\" + y.toLowerCase() }).replace(/^_/, \"\");\r\n}\r\n\r\nString.prototype.toDashCase = function () {\r\n    return this.replace(/\\.?([A-Z]+)/g, function (x, y) { return \"-\" + y.toLowerCase() }).replace(/^-/, \"\");\r\n}\r\n\r\nString.prototype.limitTo = function (limit: number) {\r\n    return this.substring(0, limit) + ((this.length > limit) ? \"...\" : \"\");\r\n}\r\n\r\nElement.prototype.remove = function () {\r\n    this.parentElement.removeChild(this);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.utils.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application initialization module.\n */\n\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport { enableProdMode } from \"@angular/core\";\nimport { AppModule } from \"./app.module\";\n\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Authentication management service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppConstants } from \"@app/app.constants\";\n\n@Injectable()\nexport class MarsAuthService {\n\n    constructor() { }\n\n    static USER_KEY = AppConstants.CODENAME.toUpperCase() + \"_\" + \"MARS_USER\";\n    static TOKEN_KEY = AppConstants.CODENAME.toUpperCase() + \"_\" + \"MARS_TOKEN\";\n\n    static isLoggedIn() {\n        return localStorage[MarsAuthService.TOKEN_KEY] != \"undefined\" && localStorage[MarsAuthService.TOKEN_KEY] != undefined;\n    }\n\n    static setLoggedInUser(user) {\n        localStorage[MarsAuthService.USER_KEY] = JSON.stringify(user);\n    }\n\n    hasRole(role: string) {\n        return MarsAuthService.hasRole(role);\n    }\n\n    static hasRole(role: string) {\n        return this.isLoggedIn() && (this.getLoggedInUser().roles.indexOf(role.toUpperCase()) > -1);\n    }\n\n    static getLoggedInUser() {\n        if (this.isLoggedIn())\n            return JSON.parse(localStorage[MarsAuthService.USER_KEY]);\n    }\n\n    static setMarsToken(token: string) {\n        localStorage[MarsAuthService.TOKEN_KEY] = token;\n    }\n\n    static getMarsToken() {\n        return localStorage[MarsAuthService.TOKEN_KEY];\n    }\n\n    static logout(callback: Function) {\n        localStorage.clear();\n        callback();\n    }\n\n    isLoggedIn() {\n        return MarsAuthService.isLoggedIn();\n    }\n\n    setLoggedInUser(user) {\n        MarsAuthService.setLoggedInUser(user);\n    }\n\n    setMarsToken(token: string) {\n        MarsAuthService.setMarsToken(token);\n    }\n\n    getMarsToken() {\n        return MarsAuthService.getMarsToken();\n    }\n\n    getLoggedInUser() {\n        return MarsAuthService.getLoggedInUser();\n    }\n\n    static finishedSignup() {\n        return this.isLoggedIn() && MarsAuthService.getLoggedInUser().signupStep == \"finished\";\n    }\n\n    finishedSignup() {\n        return MarsAuthService.finishedSignup();\n    }\n\n    logout(callback: Function) {\n        MarsAuthService.logout(callback);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth.service.ts","import { Injectable } from \"@angular/core\";\n\n/**\n * @author @quitolabs.\n * @license MIT\n * @version 1.1.0\n * Service responsible for handling the app activity when it is on background mode.\n */\n\ndeclare var Mars;\n\n@Injectable()\nexport class AppConstants {\n\n    static NAME = Mars.env.display_name;\n    static CODENAME = Mars.env.codename;\n    static APP_PACKAGE = Mars.env.cordova_package;\n    static SUBPACKAGE = Mars.env.package;\n\n    static IS_DEVELOPMENT = Mars.env.IS_DEVELOPMENT;\n    static SERVER_ADDRESS = Mars.env.SERVER_ADDRESS;\n    static SOCKET_SERVER_ADDRESS = Mars.env.SOCKET_SERVER_ADDRESS;\n\n    // Push constants\n    static ONESIGNAL_APP_ID = Mars.env.ONESIGNAL_APP_ID;\n    static GCM_SENDER_ID = Mars.env.GCM_SENDER_ID;\n\n    // Oauth constants\n    static FACEBOOK_CLIENT_ID = Mars.env.FACEBOOK_CLIENT_ID;\n    static FACEBOOK_PICTURE_URL = \"https://graph.facebook.com/userId/picture?width=200&height=200\";\n    static LINKEDIN_CLIENT_ID = Mars.env.LINKEDIN_CLIENT_ID;\n    static TWITTER_CLIENT_ID = Mars.env.TWITTER_CLIENT_ID;\n    static GOOGLE_CLIENT_ID = Mars.env.GOOGLE_CLIENT_ID;\n    static IS_CORDOVA = window.location.href.indexOf(\"http\") == -1;\n    static OAUTH_REDIRECT = AppConstants.IS_CORDOVA ? AppConstants.SERVER_ADDRESS + \"/assets/scripts/hellojs/redirect.html\" : window.location.origin + \"/assets/scripts/hellojs/redirect.html\";\n\n    // Library Constants\n    static GOOGLE_MAPS_API_KEY = Mars.env.GOOGLE_MAPS_API_KEY;\n    static GOOGLE_MAPS_LIB_URL = \"https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places&v=3\".replace(\"API_KEY\", Mars.env.GOOGLE_MAPS_API_KEY);\n    static GOOGLE_MAPS_MARKER_WITH_LABEL_URL = \"assets/scripts/google-maps/markerwithlabel.js\";\n    static GOOGLE_MAPS_RICHMARKER_URL = \"assets/scripts/google-maps/richmarker.js\";\n    static GEOLOCATOR_URL = \"assets/scripts/misc/geolocator.min.js\";\n    static IP_INFO_URL = \"http://ipinfo.io\";\n    static JS_CONSOLE_LIB_URL = \"http://jsconsole.com/remote.js?CONSOLE_ID\".replace(\"CONSOLE_ID\", Mars.env.cordova_package);\n    static ONESIGNAL_LIB_URL = \"https://cdn.onesignal.com/sdks/OneSignalSDK.js\";\n    static PACE_LIB_URL = \"assets/scripts/pace.min.js\";\n    static PAGSEGURO_IMAGES_URL = \"https://stc.pagseguro.uol.com.br//img\";\n\n    // Payment Constants\n    static PAYMENT_SERVICE = Mars.env.PAYMENT_SERVICE;\n    static CURRENCY_OPTIONS = { prefix: \"R$ \", thousands: \".\", decimal: \",\" };\n\n    // Firebase Constants\n    /*      static FIREBASE_API_KEY = Mars.env.FIREBASE_API_KEY;\n         static FIREBASE_AUTH_DOMAIN = Mars.env.FIREBASE_AUTH_DOMAIN;\n         static FIREBASE_DATABASE_URL = Mars.env.FIREBASE_DATABASE_URL;\n         static FIREBASE_STORAGE_BUCKET = Mars.env.FIREBASE_STORAGE_BUCKET;\n         static FIREBASE_SENDER_ID = Mars.env.FIREBASE_SENDER_ID; */\n\n    static ADMIN_ROLE = Mars.constants.ADMIN_ROLE;\n    static COMMON_ROLE = Mars.constants.COMMON_ROLE;\n    static CUSTOMER_ROLE = Mars.constants.CUSTOMER_ROLE;\n    static MERCHANT_ROLE = Mars.constants.MERCHANT_ROLE;\n    static ONG_ROLE = Mars.constants.ONG_ROLE;\n    static ORDER_NOTIFICATION = Mars.constants.ORDER_NOTIFICATION;\n    static CURRENT_CART_ID = AppConstants.NAME.toUpperCase() + \"_CURRENT_CART\";\n\n    constructor() { };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.constants.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application Module.\n */\n\n// Polyfills\nimport \"intl\";\n/* import \"intl/locale-data/jsonp/en.js\";\nimport \"intl/locale-data/jsonp/pt.js\"; */\n/* For keyboards without the pipe key, copy and paste: | */\n\n// ----------------- External Modules\nimport { Platform, Config } from \"ionic-angular\";\nimport { NgModule } from \"@angular/core\";\nimport { IonicModule } from \"ionic-angular\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { CommonModule } from \"@angular/common\";\nimport { IonicApp } from \"ionic-angular\";\nimport { ErrorHandler } from \"@angular/core\";\nimport { IonicErrorHandler } from \"ionic-angular\";\nimport { LOCALE_ID } from \"@angular/core\";\nimport { registerLocaleData } from \"@angular/common\";\nimport localePt from \"@angular/common/locales/pt\";\nimport localeEs from \"@angular/common/locales/es\";\n\n// 3rd Party Modules\nimport { Uploader } from \"angular2-http-file-upload/uploader/uploader\";\nimport { NgCalendarModule } from 'ionic2-calendar';\n\n// App Global Modules\nimport { MyApp } from \"@app/app.component\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppLocales } from \"@app/app.locales\";\nimport { AppUtils } from \"@app/app.utils\";\nimport { MarsSocket } from \"@app/app.socket\";\nimport { AppMainPages } from \"@pages/main-pages\";\nimport { AppUserPages } from \"@pages/user-pages\";\nimport { Backend } from \"@backend/index\";\n\n// Feature Modules\nimport { ComponentsModule } from \"@components/components.module\";\nimport { MarsNavbarComponent } from \"@components/mars-navbar/mars-navbar\";\nimport { DirectivesModule } from \"@directives/directives.module\";\nimport { PipesModule } from \"@pipes/pipes.module\";\n\n// ----------------- Mars Services\nimport { MarsCartService } from \"@services/cart.service\";\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { MarsFileUploaderService } from \"@services/file-uploader.service\";\nimport { MarsInteractionService } from \"@services/interaction.service\";\nimport { MarsNavigationService } from \"@services/navigation.service\";\nimport { MarsPushNotificationService } from \"@services/push-notification.service\";\nimport { MarsViewService } from \"@services/view.service\";\nimport { MarsPictureService } from \"@services/picture.service\";\nimport { MarsGeolocationService } from \"@services/geolocation/geolocation.service\";\nimport { MarsNearByService } from \"@services/geolocation/nearby.service\";\nimport { MarsDirectionsService } from \"@services/geolocation/directions.service\";\nimport { MarsGeocoderService } from \"@services/geolocation/geocoder.service\";\nimport { MarsMapsService } from \"@services/geolocation/maps.service\";\nimport { MarsMapMarkerService } from \"@services/geolocation/marker.service\";\nimport { MarsInfoWindowService } from \"@services/geolocation/infowindow.service\";\nimport { MarsMobileKeyboardService } from \"@services/mobile-keyboard.service\";\n\nlet address = window.location.href;\nlet isIP = RegExp('^http[s]?:\\/\\/((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])');\nlet isLocalhost = address.indexOf(\"localhost\") > -1 || isIP.test(address);\nlet locationStrategy = isLocalhost ? 'hash' : 'path';\n\n@NgModule({\n    declarations: [\n        MyApp,\n    ],\n    imports: [\n        IonicModule.forRoot(MyApp, {\n            backButtonText: \"\",\n            mode: 'md', // 'md' | 'ios' | 'wp'\n            useHash: false,\n            locationStrategy: locationStrategy\n        }),\n        BrowserModule,\n        CommonModule,\n        ComponentsModule,\n        DirectivesModule,\n        PipesModule,\n        NgCalendarModule\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [MyApp],\n    providers: [\n        { provide: ErrorHandler, useClass: IonicErrorHandler },\n        { provide: LOCALE_ID, useValue: \"pt-BR\" },\n        /* { provide: LocationStrategy, useClass: (isLocalhost ? HashLocationStrategy : PathLocationStrategy) }, */\n        AppConstants,\n        AppGlobals,\n        AppLocales,\n        AppMainPages,\n        AppUserPages,\n        AppUtils,\n        MarsSocket,\n        MarsCartService,\n        MarsAuthService,\n        MarsFileUploaderService,\n        MarsInteractionService,\n        MarsMobileKeyboardService,\n        MarsNavigationService,\n        MarsPictureService,\n        MarsPushNotificationService,\n        MarsViewService,\n        MarsNavbarComponent,\n        // Geolocation Modules\n        MarsGeolocationService,\n        MarsMapsService,\n        MarsNearByService,\n        MarsGeocoderService,\n        MarsDirectionsService,\n        MarsMapMarkerService,\n        MarsInfoWindowService,\n        Uploader\n    ]\n})\n\nexport class AppModule {\n    constructor(public platform: Platform, public config: Config, public keyboard: MarsMobileKeyboardService) {\n        Backend.setDomain(AppConstants.SERVER_ADDRESS);\n        platform.ready().then((readySource) => {\n            this.keyboard.initialize();\n            if (platform.is(\"ios\")) config.set(\"spinner\", \"dots\");\n            if (platform.is(\"cordova\")) { // Okay, so the platform is ready and our plugins are available.\n               /* splashscreen.hide();\n                statusbar.show();\n                 statusbar.backgroundColorByHexString(AppConstants.DARKER_primary_color); */\n            }\n        });\n        registerLocaleData(localePt, 'pt-BR');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./locale-data/complete.js (ignored)\n// module id = 442\n// module chunks = 71","var map = {\n\t\"./locale\": 249,\n\t\"./locale.js\": 249\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 463;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment-mini/locale ^\\.\\/.*$\n// module id = 463\n// module chunks = 71","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Date into time elapsed pipe.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n import * as moment from \"moment-mini\";\n\n @Pipe({\n  name: 'fromNow',\n})\n\nexport class FromNowPipe implements PipeTransform {\n  /**\n   * Takes a date value and returns a pretty string from current time, \n   * for instance: \"four hours ago\" or \"in eleven minutes\".\n   */\n  transform(value: string, ...args) {\n    return moment(value).fromNow();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/from-now.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Character limit pipe.\n */\n\nimport { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"limitTo\"\n})\nexport class LimitToPipe {\n  transform(value: string, arg1, arg2?, arg3?, arg4?): string {\n\n    let limit = arg1 ? parseInt(arg1, 10) : 10;\n    let trail = arg2 ? arg2 : \"...\";\n    let activate = typeof arg3 == \"boolean\" ? arg3 : true;\n    let ending = arg4 ? arg4 : \"\";\n\n    if (activate)\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    else\n      return value + ending;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/limit-to.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Angular safety pipe.\n */\n\n\nimport { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { SafeHtml, SafeStyle } from \"@angular/platform-browser\";\n\n@Pipe({\n    name: \"safe\"\n})\nexport class SafePipe {\n    constructor(private sanitized: DomSanitizer) { }\n\n    transform(value, type): any {\n        switch (type) {\n            case 'html':\n                return this.sanitized.bypassSecurityTrustHtml(value);\n            case 'resource':\n                return this.sanitized.bypassSecurityTrustResourceUrl(value);\n            case 'style':\n                return this.sanitized.bypassSecurityTrustStyle(value);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/safe.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description Elastic input directive.\r\n */\r\n\r\nimport { Directive, HostListener, ViewContainerRef, Input } from \"@angular/core\";\r\nimport { NgModel } from \"@angular/forms\";\r\n\r\n@Directive({\r\n    selector: \"[mars-elastic-input]\"\r\n})\r\n\r\nexport class MarsElasticInputDirective {\r\n    constructor(private _view: ViewContainerRef, private model: NgModel) { }\r\n\r\n    ngOnInit() {\r\n        this.model.valueChanges.subscribe(() => { this.updateElementHeight(); });\r\n        window.addEventListener(\"resize\", () => { setTimeout(() => { this.updateElementHeight() }, 250); });\r\n    }\r\n\r\n    updateElementHeight() {\r\n        let nativeElement = this._view.element.nativeElement.firstElementChild;\r\n        nativeElement.style.overflow = \"hidden\";\r\n        nativeElement.style.height = \"auto\";\r\n        nativeElement.style.height = (nativeElement.scrollHeight) + \"px\";\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/mars-elastic-input.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description Input mask directive.\r\n *  Special thanks to Márcio Casale de Souza <contato@kazale.com> for the kzMask on which marsMask was based on.\r\n */\r\n\r\nimport { Directive, Input, Output, HostListener } from \"@angular/core\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[mars-mask]\"\r\n})\r\n\r\nexport class MarsMaskDirective {\r\n\r\n    private MASK_PLACEHOLDER_CHARACTER = \"_\";\r\n    private OPTIONAL_CHARACTER_MARK = \"[\";\r\n\r\n    @Input(\"mars-mask\") marsMask: string;\r\n    @Input() ngModel;\r\n    @Output() ngModelChange = new EventEmitter();\r\n\r\n    @HostListener(\"keyup\", [\"$event\"])\r\n    onKeyup($event: any) {\r\n\r\n        let currentValue = $event.target.value.replace(/\\D/g, \"\");\r\n        let maskPlaceholder = this.marsMask.replace(/\\D/g, \"\").replace(/9/g, \"_\");\r\n        let maskTemplateValue = currentValue + maskPlaceholder.substring(0, maskPlaceholder.length - currentValue.length);\r\n        let userPressedBackspace = (\"\" + $event.keyCode) == \"8\";\r\n\r\n        let maskTemplateValueIndex = 0;\r\n        let currentCharIsANumber = false;\r\n        let updatedValue = \"\";\r\n        for (let i = 0; i < this.marsMask.length; i++) {\r\n            currentCharIsANumber = !(isNaN(parseInt(this.marsMask.charAt(i))));\r\n            if (currentCharIsANumber) {\r\n                updatedValue += maskTemplateValue[maskTemplateValueIndex++];\r\n            } else {\r\n                updatedValue += this.marsMask.charAt(i);\r\n            }\r\n        }\r\n\r\n        let maskPlaceholderCharacterIndex = updatedValue.indexOf(this.MASK_PLACEHOLDER_CHARACTER);\r\n        let inputValueIsCompletelyField = !(maskPlaceholderCharacterIndex > -1);\r\n        if (!inputValueIsCompletelyField) {\r\n            updatedValue = updatedValue.substr(0, maskPlaceholderCharacterIndex);\r\n        }\r\n\r\n        if (userPressedBackspace) {\r\n            let lastCharIsANumber = !(isNaN(parseInt(updatedValue[updatedValue.length - 1])));\r\n            if (lastCharIsANumber)\r\n                updatedValue = updatedValue.substring(0, updatedValue.length - 1);\r\n            else {\r\n                let lastNumberIndex = this.getLastNumberIndex(updatedValue);\r\n                updatedValue = updatedValue.substring(0, lastNumberIndex + 1);\r\n            }\r\n        }\r\n\r\n        this.ngModelChange.emit(updatedValue);\r\n        $event.target.value = updatedValue;\r\n    }\r\n\r\n    getLastNumberIndex(str: string) {\r\n        let char = \"\";\r\n        let charIsANumber = false;\r\n        let lastNumberIndex = -1;\r\n        for (let i = 0; i < str.length; i++) {\r\n            char = str[i];\r\n            charIsANumber = !(isNaN(parseInt(char)));\r\n            if (charIsANumber)\r\n                lastNumberIndex = i;\r\n        }\r\n        return lastNumberIndex;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/mars-mask.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Address autocomplete directive.\n */\n\nimport { Input, Output, Directive, ChangeDetectorRef } from \"@angular/core\";\nimport { EventEmitter } from \"@angular/core\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { MarsInteractionService } from \"@services/interaction.service\";\n\ndeclare var google;\n\n@Directive({\n    selector: \"[mars-address-autocomplete]\"\n})\nexport class MarsAddressAutocompleteDirective {\n\n    MAX_RADIUS = 100000;\n    ELEMENT_INITIALIZATION_DELAY = 2000;\n\n    @Input(\"mars-address-autocomplete\") uniqueId: string;\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n    @Input(\"options\") options: any = {};\n    @Input(\"global-location\") isGlobalLocation: any = {};\n\n    static DEFAULT_KEY_MAPPING = {\n        \"formatted_address\": \"vicinity\",\n        \"street\": \"street\",\n        \"street_number\": \"number\",\n        \"sublocality_level_1\": \"neighbourhood\",\n        \"administrative_area_level_2\": \"city\",\n        \"postal_code\": \"postalCode\",\n        \"administrative_area_level_1\": \"state\",\n        \"country\": \"country\"\n    };\n\n    constructor(private globals: AppGlobals,\n        private changeDetector: ChangeDetectorRef,\n        private interactionService: MarsInteractionService) { }\n\n    ngOnInit() {\n        setTimeout(() => {\n            let inputId = this.uniqueId;\n            let div = document.querySelector(`[mars-address-autocomplete=${inputId}]`);\n            if (!div)\n                console.warn(MarsAddressAutocompleteDirective.name + \": Whoops! We were unable to find any divs with the id provided :(\");\n            let divIsAnInput = div && div.nodeName == \"INPUT\";\n            let input: any = divIsAnInput ? div : (document.querySelector(`[mars-address-autocomplete=${inputId}] input`));\n            if (!input)\n                console.warn(MarsAddressAutocompleteDirective.name + \": Whoops! Be sure to add the directive only to inputs or divs with input children ;)\");\n            this.generateAutocompleteInput(input);\n        }, this.ELEMENT_INITIALIZATION_DELAY);\n    }\n\n    async generateAutocompleteInput(input) {\n        let coordinates;\n        try {\n            coordinates = await this.getUserLocation();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            this.changeDetector.detectChanges();\n            if (coordinates) { /* In case the coordinates were obtained successfully */\n                let autocomplete = new google.maps.places.Autocomplete(input, this.options);\n                let circle = new google.maps.Circle({\n                    center: <google.maps.LatLng>coordinates,\n                    radius: this.options.radius || this.MAX_RADIUS\n                });\n                autocomplete.setBounds(circle.getBounds());\n                autocomplete.addListener(\"place_changed\", () => {\n                    let place = autocomplete.getPlace();\n                    let address = this.parseAddress(place);\n                    if (this.isGlobalLocation) this.globals.currentAddress = address;\n                    this.onSelect.emit({ place: place, address: address });\n                });\n            }\n        }\n    }\n\n    async getUserLocation() {\n        return new Promise((resolve, reject) => {\n            if (this.globals.currentLocation) {\n                window.navigator.geolocation.getCurrentPosition((location) => {\n                    resolve(this.getLatLngFrom(location));\n                }, (err) => {\n                    reject(err);\n                });\n            } else {\n                resolve(this.globals.currentLocation);\n            }\n\n\n        });\n    }\n\n    getLatLngFrom(location) {\n        // In case we retrieve the location successfully, we must wrap it on a google maps friendly way.\n        let coordinates = typeof google !== \"undefined\" ? new google.maps.LatLng(location.coords.latitude, location.coords.longitude) : this.createFallbackCoordinates(location);\n        return coordinates;\n    }\n\n    createFallbackCoordinates(nativeCoordinates) {\n        nativeCoordinates.lat = function () {\n            return this.coords.latitude;\n        }\n        nativeCoordinates.lng = function () {\n            return this.coords.longitude;\n        }\n        return nativeCoordinates;\n    }\n\n    static getAddressElement(gmapsAddressComponent: Array<any>, addressComponentCode: string) {\n        let value;\n        gmapsAddressComponent.map((element) => {\n            if (element.types && element.types.indexOf && (element.types.indexOf(addressComponentCode) > -1))\n                value = element.short_name || element.long_name;\n        });\n        return value;\n    }\n\n    static getPlaceLatLng(place: google.maps.places.PlaceResult) {\n        return {\n            lng: place.geometry.location.lng(),\n            lat: place.geometry.location.lat()\n        };\n    }\n\n    static getAddressFromPlace(place: google.maps.places.PlaceResult, keyMapping?: any) {\n        if (!place || !place.geometry) {\n            console.warn(MarsAddressAutocompleteDirective.name + \": Whoops! It looks like the geometry property is missing from this place.\");\n            return false;\n        }\n        let address: any = {};\n        let addressKeys = keyMapping || MarsAddressAutocompleteDirective.DEFAULT_KEY_MAPPING;\n        // Get each component of the address from the place details\n        // and fill the corresponding field on the form.\n        for (let i = 0; i < place.address_components.length; i++) {\n            let infoType = place.address_components[i].types[0];\n            let infoIsRequired = addressKeys[infoType];\n            if (infoIsRequired) {\n                let infoValue = place.address_components[i][\"long_name\"];\n                address[addressKeys[infoType]] = infoValue;\n            }\n        }\n        address.vicinity = place.formatted_address;\n        return address;\n    }\n\n    parseAddress(place: google.maps.places.PlaceResult) {\n        if (!place) return {};\n        let rawAddress = place.address_components;\n        let address: any = {};\n        /* Parses address */\n        address.streetNumber = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"street_number\");\n        address.location = MarsAddressAutocompleteDirective.getPlaceLatLng(place);\n        address.street = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"route\");\n        address.number = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"street_number\");\n        address.neighbourhood = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"sublocality\");\n        address.city = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"administrative_area_level_2\");\n        address.state = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"administrative_area_level_1\");\n        address.country = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"country\");\n        address.postalCode = MarsAddressAutocompleteDirective.getAddressElement(rawAddress, \"postal_code\");\n        if (address.streetNumber) address.street = address.street + \", \" + address.streetNumber;\n        return address;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/directives/mars-address-autocomplete.ts","\n/**\n* @author @quitolabs.\n* @license MIT\n* @version 1.1.0\n* Service responsible for handling the app activity when it is on background mode.\n*/\n\nimport { Injectable } from \"@angular/core\";\nimport { AppTranslations } from \"../typings/global/translations/index.d.ts\";\n    \n@Injectable()\nexport class AppLocales {\n      private en: any = {\n      };\n      private es: any = {\n      };\n      private pt: any = {\n            \"a_customer\": `Tenho ou quero adotar um pet`,\n            \"an_ong\": `Sou uma ONG`,\n            \"a_merchant\": `Sou uma Petshop`,\n            \"a_merchant_and_service_establishment\": `Sou uma Petshop & Veterinária`,\n            \"a_pro\": `Sou um(a) profissional de pets`,\n            \"a_service_establishment\": `Sou uma clínica veterinária`,\n            \"about\": `Sobre`,\n            \"about_text\": `Somos amantes de pets e apaixonados por inovação. Como tal, decidimos juntar essas paixões e\n    criar algo que reunisse tudo o que mundo pet procura em um único app.\n    <br/>\n    <br/>Com a 99pets, você pode encontrar pets para adoção, ajudar a encontrar pets perdidos, os\n    melhores produtos do mundo pet, as clínicas e profissionais mais qualificados, os melhores\n    eventos e estar sempre conectado com novidades da comunidade pet.\n    <br/> Tudo isso da tela do seu celular!\n    <br/>\n    <br/> Gostou? Então vem com a gente!`,\n            \"accept\": `Aceitar`,\n            \"accepted_order\": `Aceito`,\n            \"access_the_platform\": `Acesse a plataforma `,\n            \"access_with_facebook\": `Entrar com o Facebook`,\n            \"activate\": `Ativar`,\n            \"active\": `Ativo`,\n            \"active_promotions\": `Ativas`,\n            \"active_categories\": `Ativas`,\n            \"age\": `Idade`,\n            \"add\": `Adicionar`,\n            \"add_bank_account\": `Adicionar conta bancária`,\n            \"add_card\": `Adicionar cartão (+)`,\n            \"add_category\": `Adicionar categoria (+)`,\n            \"add_coupon\": `Adicionar Cupom de Desconto`,\n            \"add_more_items\": `Adicionar mais itens`,\n            \"add_picture\": `Adicionar imagem`,\n            \"add_prices_by_pet_size\": `Adicione os preços por porte, em R$ (Reais)`,\n            \"add_subcategory\": `Adicionar subcategoria`,\n            \"add_subcategory_to\": `Adicionar subcategoria à`,\n            \"add_to_cart\": `Adicionar ao carrinho`,\n            \"add_to_the_cart\": `Adicionar ao carrinho`,\n            \"add_to_the_promotion\": `Adicionar produto à promoção`,\n            \"add_your_payment_data\": `Adicione seus dados para recebimento`,\n            \"additional_information\": `Informações Adicionais`,\n            \"address\": `Endereço`,\n            \"admin\": `Administrador`,\n            \"admin_request_sent\": `Seu cadastro foi enviado ao administrador do sistema. Aguarde pela confirmação no seu e-mail ;)`,\n            \"adopt\": `Adote`,\n            \"adoption_intro\": `Adotar é um ato de amor. Lembre-se de fazê-lo de forma consciente. <br/> \n    Aqui estão os contatos da ONG resposável para que vocês possam combinar a adoção ;)`,\n            \"adoption\": `Adoção`,\n            \"adult\": `Adulto`,\n            \"ADULT\": `Adulto`,\n            \"alert_running_offline\": `Você está utilizando o aplicativo em modo offline. Para uma experiência completa, ative seu pacote de dados ou WiFi ;)`,\n            \"all_the_products\": `Todos os produtos`,\n            \"all_items_added_to_promotion_category\": `Todos os itens dessa categoria já foram adicionados à promoção ;)`,\n            \"all_items_added_to_inventory_category\": `Todos os itens dessa categoria já foram adicionados ao estoque ;)`,\n            \"and_for_the_establishment\": `E para o estabelecimento?`,\n            \"an_password_recovery_email_has_been_sent_to_you\": `Um e-mail de recuperação de senha foi enviado para você: <br> Lembre-se de verificar na caixa de Spam ;)`,\n            \"application_terms_of_use\": `termos de uso do aplicativo`,\n            \"are_you_sure_you_would_like_to_remove_this_pet\": `Você realmente deseja remover este pet?`,\n            \"at\": `às`,\n            \"available_items\": `Itens disponíveis`,\n            \"available_balance\": `Saldo`,\n            \"available_for_adoption\": `Disponível para adoção`,\n            \"balance_current_releases\": `Disponível`,\n            \"balance_future_releases\": `Lançamentos futuros`,\n            \"bank\": `Banco`,\n            \"bank_accounts\": `Contas bancárias`,\n            \"bank_account_number\": `Número da Conta`,\n            \"bank_account_number_label\": `Conta`,\n            \"bank_account_agency\": `Agência`,\n            \"bank_account_agency_label\": `Agência`,\n            \"bank_info\": `Informações Bancárias`,\n            \"bank_name\": `Nome do Banco`,\n            \"bank_name_label\": `Banco`,\n            \"BANRICOMPRAS_CREDIT\": `Banricompras (Crédito)`,\n            \"BANRICOMPRAS_DEBIT\": `Banricompras (Débito)`,\n            \"basic_information\": `Informações Básicas`,\n            \"BathAndShearAtPetshop\": `Banho e tosa na Petshop`,\n            \"BathAtHome\": `Banho em Casa`,\n            \"BathAtPetshop\": `Banho na Petshop`,\n            \"by\": `Por`,\n            \"cancel\": `Cancelar`,\n            \"canceled_order\": `Cancelado`,\n            \"call\": `Ligar`,\n            \"card_expiration\": `Validade`,\n            \"card_holder\": `Titular`,\n            \"card_number\": `Número do cartão`,\n            \"card_verfication_code\": `CVC/CVV`,\n            \"card_verfication_code_explanation\": `Três dígitos`,\n            \"cart\": `Carrinho`,\n            \"cart_emptied_successfully\": `Carrinho esvaziado com sucesso!`,\n            \"CASH\": `Dinheiro`,\n            \"cash\": `Dinheiro`,\n            \"cash_change\": `Troco`,\n            \"category_deactivation_confirm\": `Você tem certeza que gostaria de desativar esta categoria? <br><br> Todas as suas subcategorias e produtos ficarão indisponíveis aos usuários do sistema:`,\n            \"category_name\": `Nome da categoria`,\n            \"category\": `Categoria`,\n            \"categories\": `Categorias`,\n            \"change\": `Alterar`,\n            \"change_password\": `Alterar senha`,\n            \"change_user_role\": `Alterar tipo de usuário`,\n            \"charges_for_delivering\": `Cobra a entrega`,\n            \"check_your_connection_and\": `Verifique sua conexão e `,\n            \"CHECKOUT\": `Retirada na loja`,\n            \"choose_plan\": `Escolher`,\n            \"choose_items\": `Selecionar itens`,\n            \"choose_your_user_type_below\": `Escolha o seu tipo de usuário abaixo ;)`,\n            \"choose_your_subscription_plan_below\": ` Selecione o plano mais adequado para suas necessidades ;)`,\n            \"choose_your_subscription_payment_method_below\": `Escolha a forma mais cômoda para pagar suas mensalidades ;)`,\n            \"clear_data\": `Limpar dados`,\n            \"click_below_to_confirm_your_email\": `Clique abaixo para confirmar seu e-mail e utilizar o aplicativo com agilidade e segurança:`,\n            \"click_here\": `Clique aqui`,\n            \"click_here_to_ask_for_the_admin_to_register_it\": `Clique aqui para requisitar ao administrador que ele seja cadastrado.`,\n            \"click_here_to_try_again\": `clique aqui para tentar novamente`,\n            \"click_to_see_more\": `Clique para ver mais`,\n            \"closes_at_lunch\": `Fecha ao meio-dia`,\n            \"closing_time\": `Horário de Fechamento (ex: 18:00)`,\n            \"complement\": `Complemento`,\n            \"comments\": `Comentários`,\n            \"confirm\": `Confirmar`,\n            \"confirm_email\": `Confirmar e-mail`,\n            \"congrats\": `Parabéns!`,\n            \"congrats_your_profile_has_been_created\": `Seu cadastro foi criado com sucesso! <br> Precisamos só de mais algumas informações para liberar o seu acesso ao app ;)`,\n            \"copied_to_the_clipboard\": `Copiado para a área de transferência ;)`,\n            \"contact\": `Contato`,\n            \"coupon\": `Cupom de Desconto`,\n            \"create\": `Criar`,\n            \"create_promotion\": `Criar promoção`,\n            \"created_order\": `Criado`,\n            \"credentials\": `Credenciais`,\n            \"credit_card\": `Cartão de crédito`,\n            \"credits\": `Créditos`,\n            \"currency_prefix\": `R$`,\n            \"customer\": `Consumidor`,\n            \"customer_app_advantages\": `   Significa muito mais comodidade na\n    <br> hora de comprar produtos\n    <br>para o seu Pet!`,\n            \"customer_app_step_one\": `Você encontra estabelecimentos ao seu redor.`,\n            \"customer_app_step_two\": `Escolhe os produtos que deseja.`,\n            \"customer_app_step_three\": `Monta seu carrinho de compras.`,\n            \"customer_app_step_four\": `Envia o pedido.`,\n            \"customer_app_step_five\": `Recebe em casa ou retira na loja!`,\n            \"deactivate\": `Desativar`,\n            \"deactivate_account\": `Desativar conta`,\n            \"deactivated\": `Desativado`,\n            \"delivers\": `Realiza serviço de entrega`,\n            \"DELIVERY\": `Delivery`,\n            \"delivery\": `delivery`,\n            \"delivery_area\": `Área de entrega`,\n            \"delivery_tax\": `Taxa da entrega`,\n            \"delivery_time\": `Tempo médio de entrega`,\n            \"description\": `Descrição`,\n            \"details\": `Detalhes`,\n            \"discount_price_placeholder\": `Preço com desconto em reais`,\n            \"do_you_deliver\": `Você faz o serviço de entrega?`,\n            \"do_you_really_want_to_clear_the_order_history\": `Você realmente deseja limpar seu histórico de compras?`,\n            \"do_you_really_want_to_deactivate_your_account\": `Você realmente deseja desativar sua conta?`,\n            \"do_you_really_want_to_logout\": `Você realmente deseja sair?`,\n            \"do_you_really_want_to_remove_all_the_items_from_the_cart\": `Você realmente deseja remover todos os itens do carrinho?`,\n            \"do_you_really_want_to_remove_this_card\": `Você realmente deseja remover este cartão?`,\n            \"do_you_really_want_to_remove_this_product\": `Você realmente deseja remover este item?`,\n            \"do_you_really_want_to_remove_this_product_from_the_inventory\": `Você realmente deseja remover este item do estoque?`,\n            \"does_your_store_closes_at_lunch\": `Sua loja fecha ao meio dia?`,\n            \"Dogwalker\": `Dogwalker`,\n            \"done\": `Pronto`,\n            \"dont_have_an_account\": `Não tem um cadastro`,\n            \"dont_worry_it_is_safe_with_us\": `Não se preocupe, eles estão seguros conosco`,\n            \"ELO_CREDIT\": `Elo (Crédito)`,\n            \"ELO_DEBIT\": `Elo (Débito)`,\n            \"edit\": `Editar`,\n            \"edit_category_name\": `Editar nome da categoria`,\n            \"empty_up\": `Esvaziar`,\n            \"end_date\": `Data final`,\n            \"error_duplicated_email\": `Ops! Já existe um usuário cadastrado com o e-mail fornecido. Por favor, autentique-se com ele ou tente um e-mail diferente ;)`,\n            \"error_duplicated_username\": `Ops! Já existe um usuário cadastrado com este usuário.`,\n            \"error_duplicated_item_name\": `Ops! Já existe um item com este nome. Por favor, tente um nome diferente ;)`,\n            \"error_gps_high_precision\": `Ops! Será que você poderia ativar seu gps em modo de alta precisão e tentar novamente?`,\n            \"error_minimum_value_is_greater_than_order_total\": `Ops! O valor do seu pedido é menor do que o valor mínimo para pedidos definido pelo estabelecimento. <br> Aproveite esta chance para obter outros produtos e evitar imprevistos ;)`,\n            \"error_no_gps\": `Ops! Ative o GPS do seu dispositivo e tente novamente ;)`,\n            \"error_on_getting_coordinates\": `Ops! Nós não conseguimos obter sua localização atual.\n Por favor, tente novamente mais tarde.`,\n            \"error_unstable_internet_connection\": `Ops! Parece que você está conectado a uma rede instável. \nVerifique a conexão do seu dispositivo e tente novamente ;)`,\n            \"establishment\": `Sou uma Petshop`,\n            \"establishments\": `Estabelecimentos`,\n            \"establishment_description\": `Uma breve descrição`,\n            \"evaluate\": `Avaliar`,\n            \"evaluation\": `Avaliação`,\n            \"exit\": `Sair`,\n            \"failed_saving_picture_for_item\": `Ops! Houve uma falha salvando uma das imagens. Por favor, tente novamente.`,\n            \"female\": `Feminino`,\n            \"finish\": `Finalizar`,\n            \"first_item_added_to_inventory\": `<center> Você adicionou o seu primeiro produto ao estoque! </center> <br/> <br/> Para visualizá-lo, acesse a aba \"Meus Produtos\"`,\n            \"first_item_added_to_promotion\": `<center> Você adicionou o seu primeiro produto a uma promoção! </center> <br/> <br/> Para visualizá-lo, acesse a aba \"Em Promoção\"`,\n            \"for_the_consumer\": ` Para você `,\n            \"for_the_establishment\": `Para o estabelecimento`,\n            \"forgot_your_password\": `Esqueceu sua senha`,\n            \"friday\": `Sexta-feira`,\n            \"from\": `De`,\n            \"G\": `Grande (G)`,\n            \"GG\": `Muito Grande (GG)`,\n            \"general\": `Geral`,\n            \"go_back\": `Voltar`,\n            \"go_to_the_app\": `Acessar`,\n            \"hello\": `Olá`,\n            \"please_input_your_data_below\": `Pronto(a) para começar? <br> Por favor, insira seus dados abaixo:`,\n            \"please_input_your_credentials_below\": `Por favor, insira suas credenciais abaixo ;)`,\n            \"please_add_a_bank_account_in_order_to_receive_your_balance\": `Olá! Parece que você ainda não possui nenhuma conta bancária cadastrada. Por favor, adicione uma conta para transferir o seu saldo ;)`,\n            \"height\": `altura`,\n            \"here_is_your_data\": `Aqui estão os seus dados`,\n            \"home\": `Home`,\n            \"how_it_works\": `Como funciona`,\n            \"i_already_know_the_app\": `Já conheço o aplicativo`,\n            \"i_am\": `O quê você gostaria de fazer no aplicativo?`,\n            \"i_am_a_pet_store\": `Sou uma pet shop`,\n            \"i_declare_to_have_read_and_agree_with_the\": `Declaro que li e aceito os `,\n            \"in_case_of_doubt_our_email_is\": ` Em caso de dúvidas, o nosso e-mail é`,\n            \"in_case_of_changes_contact_the_client\": `Em caso de cancelamento ou falta de estoque, por favor, entre em contato diretamente com o cliente.`,\n            \"in_construction\": ` Em construção...`,\n            \"inactive_categories\": `Inativas`,\n            \"i_have_a_pet\": `Tenho um pet`,\n            \"i_want_to_adopt\": `Quero adotar`,\n            \"information\": `Informações`,\n            \"insert_the_card_data_below\": `Insira os dados do cartão abaixo para ter agilidade e tranquilidade na hora de comprar ;)`,\n            \"insert_the_product_price_below\": `Insira o preço do produto abaixo`,\n            \"insert_your_address_and_select_one_of_the_suggestions\": `Insira seu endereço e selecione uma das sugestões listadas ;)`,\n            \"invalid_email_message\": `Ops! Por favor, insira um endereço de e-mail válido ;)`,\n            \"in_inventory\": `Em Estoque`,\n            \"in_order_to_enjoy_your_new_features\": `para utilizar suas funcionalidades!`,\n            \"in_order_to_finish_your_signup_please_add_a_payment_method\": `Parabéns! Para finalizar o processo de cadastro, adicione uma forma de pagamento para sua assinatura.`,\n            \"in_promotion\": `Em Promoção`,\n            \"inventory\": `Estoque`,\n            \"item\": `Item`,\n            \"items\": `Itens`,\n            \"item_age_group\": `Idade`,\n            \"item_categories\": `Categorias`,\n            \"item_description\": `Descrição`,\n            \"item_description_example\": `Exemplo: A Ração Pedigree Carne, Frango e Cereais possui vitamina E e Selênio, ingredientes com ação antioxidante. Estes dois nutrientes juntos se complementam na proteção das células contra a ação de radicais livres, que são produzidos através do metabolismo normal, e contribuem para o processo de envelhecimento celular..`,\n            \"item_image\": `Imagem`,\n            \"item_name\": `Nome do item`,\n            \"item_name_example\": `Exemplo: Ração Pedigree Carne, Frango e Cereais para Cães Adultos`,\n            \"item_saved_successfully\": `Registro salvo com sucesso!`,\n            \"item_updated_successfully\": `Item atualizado com sucesso!`,\n            \"item_submissions\": `Submissões`,\n            \"item_weight\": `Peso (kg)`,\n            \"know_more\": `Saiba mais`,\n            \"know_more_about\": `Saiba mais sobre`,\n            \"label_loading_google_maps\": `Carregando mapa...`,\n            \"last_step\": `Fim`,\n            \"leave_blank_if_no\": `Deixe em branco os portes que você não atende`,\n            \"lets_choose_you_a_role\": `Vamos escolher um tipo de conta para você: <br/> Com qual destes tipo de usuário você se identifica mais?`,\n            \"liked_the_app\": `Gostou do app`,\n            \"loading\": `Carregando`,\n            \"loading_cart\": `Carregando carrinho...`,\n            \"loading_data\": `Carregando informações`,\n            \"loading_map\": `Carregando mapa`,\n            \"loading_merchants\": `Carregando estabelecimentos`,\n            \"loading_order_history\": `Carregando histórico...`,\n            \"loading_orders\": `Carregando pedidos`,\n            \"loading_products\": `Carregando produtos...`,\n            \"loading_promotion_history\": `Carregando histórico...`,\n            \"loading_the_map\": `Carregando o mapa...`,\n            \"location\": `Endereço`,\n            \"login\": `Entrar`,\n            \"logout\": `Sair`,\n            \"looks_like_youre_on_an_unstable_connection\": `Ops! Parece que você está conectado a uma rede instável`,\n            \"long\": `Longo`,\n            \"lost_and_found\": `Perdidos e Achados`,\n            \"lost_pet\": `Pet perdido ou encontrado`,\n            \"M\": `Médio (M)`,\n            \"male\": `Masculino`,\n            \"powered_by\": `Feito com <span style=\"color: red;\">❤</span> por Quito Labs`,\n            \"map\": `Mapa`,\n            \"mark_as_found\": `Marcar como encontrado`,\n            \"mask_cpf\": `999.999.999-999`,\n            \"mask_cnpj\": `99.999.999/9999-99`,\n            \"mask_full_date\": `99/99/9999`,\n            \"mask_phone\": `(99) 999999999`,\n            \"mask_postal_code\": `99999-999`,\n            \"MASTER_CARD_CREDIT\": `Master Card (Crédito)`,\n            \"MASTER_CARD_DEBIT\": `Master Card (Débito)`,\n            \"medium\": `Médio`,\n            \"meet_the_project\": `Conheça a 99Pets!`,\n            \"merchant\": `Fornecedor`,\n            \"merchant_app_advantages\": `   São muitas vantagens \n    <br> para você e para o seu negócio!`,\n            \"merchant_app_step_one\": `Você indica o aplicativo para os seus consumidores.`,\n            \"merchant_app_step_two\": `Eles passam a utilizá-lo como canal de compra.`,\n            \"merchant_app_step_three\": `Você ganha toda a abrangência das vendas online.`,\n            \"merchant_app_step_four\": `Suas vendas aumentam, você cresce e se aproxima do seu público.`,\n            \"merchant_app_step_five\": `Um mundo novo de clientes passa a ver o seu negócio!`,\n            \"message_placeholder\": `Sua mensagem...`,\n            \"minimum_delivery_value\": `Valor mínimo para entrega`,\n            \"minutes\": `Minutos`,\n            \"minutes_input\": `(Minutos)`,\n            \"mocked_address\": `Av. Sapiranga, 472 - Bom Fim, Porto Alegre - RS, Brasil`,\n            \"mocked_charges_for_delivering\": `Sim`,\n            \"mocked_delivery_area\": `Zona Sul de POA`,\n            \"mocked_delivery_avarage_time\": `30 minutos (aprox.)`,\n            \"mocked_minimum_buy_value\": `R$15,00`,\n            \"mocked_payment_modes\": `Dinheiro, cartão de crédito, cartão de débito.`,\n            \"mocked_phone\": `(51) 3223-9172`,\n            \"monday\": `Segunda-feira`,\n            \"months\": `Meses`,\n            \"month\": `Mês`,\n            \"more_info\": `Mais Informações`,\n            \"my_items\": `Meus produtos`,\n            \"my_pets\": `Meus pets`,\n            \"my_sellings\": `Minhas Vendas`,\n            \"name\": `Nome`,\n            \"new_item\": `Novo Item`,\n            \"new_category\": `Nova Categoria`,\n            \"new_item_request\": `Solicitação de Novo Item`,\n            \"new_promotion\": `Nova Promoção`,\n            \"next\": `Próximo`,\n            \"nice_seeing_you_here\": `Que bom ver você aqui`,\n            \"no\": `Não`,\n            \"no_catalogue_items_found\": `Ops! Não há nenhum item cadastrado para esta categoria. Clique no + para cadastrar um novo item ;)`,\n            \"no_catalogue_categories_found\": `Olá! Ainda não existem categorias cadastradas: Seja o primeiro! Clique no canto direito superior para criar uma nova categoria ;)`,\n            \"no_comments_yet\": `Poxa! Ainda não recebemos nenhuma pista do paradeiro para este pet. Você viu ele? Não hesite em enviar uma mensagem e ajudar a fazer um final feliz!`,\n            \"no_categories_found\": `Ops! Parece haver algo errado com o carregamento das categorias. Por favor, tente novamente mais tarde :(`,\n            \"no_inventory_items_found\": `Ops! Não há nenhum item cadastrado para esta categoria. Clique no + para sugerir um novo item ;)`,\n            \"no_items_on_inventory_category\": `Olá! Você ainda não adicionou nenhum produto desta categoria ao seu estoque. Adicione-os e retorne a esta aba para visualizá-los aqui.`,\n            \"no_items_added_to_promotion_category\": `Olá! Você ainda não adicionou nenhum produto desta categoria à sua promoção. Adicione-os e retorne a esta aba para visualizá-los aqui.`,\n            \"no_merchant_found_message\": `Nenhum estabelecimento foi encontrado na sua região :( <br/> <a href=\"mailto:ola@petmarket.io\">Entre em contato</a>, nos avise do seu interesse para que possamos fazer uma experiência mais completa para você!`,\n            \"no_orders_made_message\": `Ops! Você ainda não possui nenhum pedido realizado.\n <br/> Finalize uma compra para visualizá-los aqui ;)`,\n            \"no_orders_on_this_period\": `Ops! Não há nenhum pedido a ser exibido. Selecione outro período, ou aguarde novos pedidos serem feitos ;)`,\n            \"no_orders_yet\": `Olá! Você ainda não recebeu nenhum pedido. Lembre de ficar de olho nesta aba para não perder nada ;)`,\n            \"no_pending_items_found\": `Assim que novos itens forem sugeridos por usuários do sistema, eles aparecerão aqui ;)`,\n            \"no_pets_found_message\": `Já tem um ou mais pets? Cadastre ele na plataforma para ter mais praticidade ;)`,\n            \"no_pets_nearby_found\": `Ops! Nós não encontramos nenhum pet na sua região: Mas não desanime! <br/> Estamos trabalhando para alcançar cada vez mais lugares. <br/> Volte em breve e convide seus amigos, pets e ongs conhecidas no meio tempo ;)`,\n            \"no_pending_orders\": `Oba! Você não possui nenhum pedido pendente. Fique de olho: Assim que você recebê-los, eles serão exibidos aqui ;)`,\n            \"no_products_found_message\": `Nenhum produto foi encontrado com este nome :(`,\n            \"no_products_on_cart_message\": `Ops! Você ainda não possui nenhum item neste carrinho.\nAdicione produtos para visualizá-los aqui ;)`,\n            \"no_products_on_inventory_message\": `Ops! Você ainda não possui nenhum produto cadastrado.\n<br/> Acesse a aba de Produtos para adicioná-los ;)`,\n            \"no_products_on_promotion_message\": `Adicione produtos à promoção digitando na barra de pesquisa acima ;)`,\n            \"no_promotions_created_message\": `Você ainda não possui nenhuma promoção ativa:\n <br/> Adicione produtos ao estoque e clique no \"+\" para criá-la ;)`,\n            \"no_promotions_on_history\": `Parece que você ainda não possui nenhuma promoção no histórico. Após o periodo de validade, as promoções criadas serão exibidas aqui ;)`,\n            \"no_users_found_message\": `Ops! Nós não conseguimos encontrar nenhum usuário com base nestes critérios. Por favor, tente novamente ;)`,\n            \"non_binary\": `Não binário`,\n            \"notifications\": `Notificações`,\n            \"observations\": `Observações`,\n            \"on_delivery\": `Na Entrega`,\n            \"opening_time\": `Horário de Abertura (ex: 09:00)`,\n            \"operation\": `Funcionamento`,\n            \"operation_times\": `Horários`,\n            \"operation_finished_succesfully\": `Operação realizada com sucesso :)`,\n            \"optional_input\": `(Opcional)`,\n            \"order\": `Pedido`,\n            \"order_accepted_successfully\": `Pedido aceito com sucesso!`,\n            \"order_canceled_successfully\": `Pedido cancelado com sucesso!`,\n            \"order_history\": `Pedidos`,\n            \"order_details\": `Detalhes do Pedido`,\n            \"order_history_cleared_successfully\": `Histórico limpo com sucesso! :)`,\n            \"orders\": `Pedidos`,\n            \"P\": `Pequeno (P)`,\n            \"Page_information_and_products\": `Ver informações e produtos`,\n            \"password\": `Senha`,\n            \"password_confirmation\": `Confirmação de senha`,\n            \"password_recovery\": `Recuperação de senha`,\n            \"password_recovery_introduction\": `Ops! Você esqueceu sua senha? <br> Não se preocupe: acontece com os melhores ;) <br>\nInsira seu e-mail abaixo para recuperá-la:`,\n            \"payment\": `Pagamento`,\n            \"payment_methods\": `Formas de pagamento`,\n            \"payment_method\": `Meio de pagamento`,\n            \"payment_card\": `Cartão`,\n            \"payment_mode\": `Modo de pagamento`,\n            \"payment_options\": `Opções`,\n            \"payment_modes\": `Formas de pagamento`,\n            \"payment_name\": `Nome do Titular da Conta`,\n            \"payment_slip\": `Boleto`,\n            \"pending_orders\": `Pendentes`,\n            \"pet\": `Pet`,\n            \"pets\": `Pets`,\n            \"pet_age\": `Idade (aprox.)`,\n            \"pet_hair\": `Pêlo`,\n            \"pet_size\": `Porte`,\n            \"phone\": `Telefone`,\n            \"pick_end_date\": `Escolher data final`,\n            \"pick_start_date\": `Escolher data inicial`,\n            \"pictures\": `Imagens`,\n            \"place_order\": `Pedir`,\n            \"please_enter_a_valid_name\": `Por favor, insira um nova válido`,\n            \"please_enter_a_valid_card_number\": `Por favor, verifique o número do cartão informado ;)`,\n            \"previous\": `Anterior`,\n            \"price\": `Preço`,\n            \"price_placeholder\": `Preço em reais (ex: 12.99)`,\n            \"prices_of\": `Preços de `,\n            \"product\": `Produto`,\n            \"product_added_successfully\": `Produto adicionado com sucesso!`,\n            \"product_categories\": `Categorias do produto`,\n            \"product_description\": `Descrição do produto`,\n            \"product_image\": `Imagem do produto`,\n            \"product_name\": `Nome do produto`,\n            \"product_price_from\": `De`,\n            \"product_price_to\": `Por`,\n            \"product_removed_successfully\": `Produto removido com sucesso!`,\n            \"product_type\": `Tipo do produto`,\n            \"product_weight\": `Peso do produto (kg)`,\n            \"products\": `Produtos`,\n            \"professionals\": `Profissionais`,\n            \"profile\": `Perfil`,\n            \"project_name\": `99Pets`,\n            \"slogan\": `Você ama pets? Então vem com a gente!`,\n            \"promotion\": `Promoção`,\n            \"promotion_created_successfully\": `Promoção criada com sucesso! Selecione os itens do estoque que você deseja adicionar a ela ;)`,\n            \"promotion_history\": `Promoções`,\n            \"promotion_introduction_text\": `Clique para selecionar as datas de início e fim da promoção ;)`,\n            \"promotion_items\": `Itens da Promoção`,\n            \"promotion_saved_successfully\": `Promoção salva com sucesso!`,\n            \"promotions_history\": `Histórico`,\n            \"property\": `Propriedade`,\n            \"property_examples\": `Ex: Câmera, Cor`,\n            \"property_value\": `Valor`,\n            \"property_value_examples\": `Ex: 13MP, Dourado`,\n            \"PUPPY\": `Filhote`,\n            \"puppy\": `Filhote`,\n            \"quantity\": `Quantidade`,\n            \"rate_us\": `Nos dê uma avaliação`,\n            \"read_more\": `Ler mais`,\n            \"receive_withdrawal\": `Receber saldo`,\n            \"receiving_address\": `Endereço para entrega`,\n            \"receiving_mode\": `Modo de recebimento`,\n            \"recover_password\": `Recuperar senha`,\n            \"reject\": `Rejeitar`,\n            \"reloading_map\": `Recarregando mapa`,\n            \"reloading_the_map\": `Recarregando o mapa...`,\n            \"remember_to_change_it_after_signing_in_again\": `Lembre-se de alterá-la ao entrar novamente ;)`,\n            \"remove\": `Remover`,\n            \"remove_from_cart\": `Remover do carrinho`,\n            \"request\": `Solicitar`,\n            \"results\": `Resultados`,\n            \"reviewed_orders\": `Revisados`,\n            \"saturday\": `Sábado`,\n            \"save\": `Salvar`,\n            \"save_promotion\": `Salvar Promoção`,\n            \"search_by_the_partner_name\": `Pesquise pelo nome do estabelecimentos ;)`,\n            \"select\": `Selecionar`,\n            \"select_picture\": `Selecionar`,\n            \"select_a_bank_account\": `Selecione uma conta abaixo`,\n            \"selling\": `Vendas`,\n            \"send_email\": `Enviar e-mail`,\n            \"SENIOR\": `Sênior`,\n            \"senior\": `Sênior`,\n            \"server_failure\": `Ops! Houve uma falha na operação, tente novamente mais tarde.`,\n            \"service_provider\": `Sou Prestador de Serviço`,\n            \"service_provider_description\": `Uma breve descrição sobre você`,\n            \"services_you_provide\": `Serviços que você presta`,\n            \"settings\": `Configurações`,\n            \"sign_in\": `Entrar`,\n            \"sign_up_now\": `Cadastre-se agora`,\n            \"signup_completed_successfully\": `Cadastro atualizado com sucesso! :)`,\n            \"skip\": `Pular`,\n            \"short\": `Curto`,\n            \"so_come_with_us\": `Então vem com a gente!`,\n            \"start_date\": `Data inicial`,\n            \"status\": `Status`,\n            \"store_basic_information\": `Informações básicas`,\n            \"store_buy_information\": `Informações de compra`,\n            \"subcategory\": `Subcategoria`,\n            \"submitted_by\": `Submetido por`,\n            \"subscription\": `Assinatura`,\n            \"subscription_plan\": `Plano`,\n            \"subscription_plans\": `Planos`,\n            \"subtotal\": `Subtotal`,\n            \"sunday\": `Domingo`,\n            \"temper\": `Temperamento`,\n            \"temper_easy\": `Fácil`,\n            \"temper_medium\": `Médio`,\n            \"temper_hard\": `Difícil`,\n            \"terms_of_use\": `Termos de Uso`,\n            \"terms_of_use_for_marketplace\": `Olá, <br>\n    <br>\n    Para que você possa utilizar o Marketplace do 99Pets destacamos algumas informações da contratação do serviço e outros temas relevantes para facilitar a sua experiência no nosso Site:<br>\n    <br>\n    A - O que é o Marketplace do 99Pets? Marketplace nada mais é do que um grande local de compras e vendas de produtos. No ambiente online isso se traduz em um espaço virtual onde além de serem vendidos produtos e serviços pelo 99Pets, a empresa permite que outros lojistas anunciem seus produtos e serviços através do endereço eletrônico www.99pets.org. Assim, o 99Pets é mais do que uma loja virtual, é como se fosse um shopping center virtual, onde vários lojistas vendem seus produtos e serviços diretamente aos consumidores. Podemos dizer então que o 99Pets é uma plataforma online, integrada ao portal www.99pets.org, onde um usuário Vendedor pode oferecer seus próprios produtos e/ou serviços diretamente a usuários Compradores. O serviço prestado pelo 99Pets é o oferecimento desta plataforma aos usuários, com inúmeras funcionalidades, permitindo que usuários Vendedores e Compradores se aproximem e realizem transações diretamente entre si.<br>\n    <br>\n    B - Quem vende os produtos ou serviços do Marketplace? Ao acessar o endereço www.99pets.org e buscar um produto e/ou serviço, o usuário Comprador terá várias ofertas relacionadas ao produto e/ou serviços que procura. Essas ofertas podem ser de produto vendido e entregue diretamente pelo 99Pets ou vendido e entregue diretamente por um usuário Vendedor. Atenção: quando você, usuário Comprador, escolher um produto ou serviço oferecido diretamente por terceiros, usuários Vendedores, você estará sujeito às regras e condições de oferta disponibilizada por este usuário Vendedor. O 99Pets não regula preço, prazo de entrega e condições da oferta, sendo estas feitas exclusivamente pelo usuário Vendedor. Desta forma, o usuário Comprador está ciente e de acordo que, ao comprar um produto e/ou serviço diretamente de um usuário Vendedor, o 99Pets não será responsável pelo conteúdo, prazo de entrega e condições da oferta do usuário Vendedor. O 99Pets somente se responsabiliza pelo seu próprio conteúdo e pelas suas ofertas.<br>\n    <br>\n    C - Como identifico um produto ou serviço oferecido no Marketplace do 99Pets? Em cada oferta do Site é exibida informação sobre quem vende e entrega o produto ou serviço. Antes de adicionar um produto ou serviço no seu carrinho, verifique no campo \"Vendido e entregue por\" se quem o oferece é um usuário Vendedor ou o 99Pets. Abaixo, exemplo de como você visualizará as opções de compra:<br>\n    <br>\n    D - Quais produtos ou serviços podem ser oferecidos no Marketplace? O usuário Vendedor poderá expor a venda todo e qualquer produto e serviço que esteja em conformidade com a legislação brasileira e como os Termos e Condições Gerais de Uso do site. Não é permitido ainda oferecer produtos e/ou serviços que não possuam autorização específica de órgãos reguladores competentes e/ou que violem direitos de terceiros.<br>\n    <br>\n    E - A quem se aplicam as condições dos Termos e Condições de Uso do Marketplace? Estes Termos e Condições de Uso do Marketplace se aplicam a todos os usuários do Site Vendedores ou Compradores. Ao utilizar o Marketplace do 99Pets o usuário declara que leu, compreendeu e aceitou estes Termos e Condições de Uso do Marketplace, os Termos e Condições Gerais de Uso do site, a Política de Privacidade do 99Pets e as demais políticas do site.<br>\n    <br>\n    F - Como esclareço minhas dúvidas sobre o Marketplace do 99Pets? Qualquer dúvida sobre o Marketplace do 99Pets pode ser esclarecida entrando em contato com nosso Atendimento, por email, chat ou telefone.<br>\n    <br>\n    Termos e Condições de Uso do Marketplace - Contrato do Usuário<br>\n    Estes Termos e Condições de Uso do Marketplace (ou Contrato) aplicam-se aos usuários Vendedores e Compradores dos serviços oferecidos pela 99Pets por meio do Site www.99Pets (Site).<br>\n    <br>\n    Qualquer pessoa (adiante usuário), que utilize os serviços do 99Pets deverá ter lido, entendido e aceitado estes Termos e Condições de Uso do Marketplace, os Termos e Condições de Uso Gerais do Site, bem Política de Privacidade do 99Pets e demais políticas do Site.<br>\n    <br>\n    1. Objeto<br>\n    1.1. O objeto deste Contrato é estabelecer as regras e condições para disponibilização no Site de produtos e serviços por terceiros denominados usuários Vendedores, bem como as condições de utilização do Site para a compra destes produtos e serviços pelos usuários Compradores.<br>\n    <br>\n    1.2. O 99Pets autoriza os usuários Vendedores a anunciarem seus produtos e serviços diretamente no Site, desde que respeitados os termos e condições deste Contrato.<br>\n    <br>\n    2. Obrigações do Usuário Vendedor<br>\n    2.1. Será de exclusiva responsabilidade do usuário Vendedor estabelecer diretamente as características, o preço, a forma de entrega e as demais condições de sua oferta, sem interferência do 99Pets.<br>\n    <br>\n    2.2. O usuário Vendedor é o único responsável pelos anúncios e condições das suas ofertas de produtos e serviços disponibilizados no Marketplace e declara estar ciente que deverá honrar integralmente todas as ofertas anunciadas, incluindo, mas não se limitando, àquelas que eventualmente possuam erros de preços e/ou equívocos de quaisquer condições dos produtos e serviços disponibilizados pelo usuário Vendedor.<br>\n    <br>\n    2.3. Fica estabelecido que, ao oferecer diretamente produtos e/ou serviços no Marketplace, o usuário Vendedor se obriga a cumprir a Legislação em vigor e as regras do Site, incluindo, mas não se limitando a:<br>\n    <br>\n    Lei 8.078/1990 - Código de Defesa do Consumidor;<br>\n    Lei 12.965/2014 - Marco Civil da Internet;<br>\n    Decreto 7.692/2013;<br>\n    Leis de Entrega;<br>\n    Termos e Condições Gerais de Uso do 99Pets;<br>\n    Política de entrega, troca e devolução de produtos;<br>\n    Política de Produtos Proibidos; e<br>\n    Anexos deste Contrato.<br>\n    2.4. O usuário Vendedor somente disponibilizará produtos e/ou serviços que estejam sob seu controle. O usuário Vendedor autoriza, desde já, o 99Pets a efetuar todo e qualquer cancelamento de compra e devolução dos devidos recursos ao usuário Comprador sempre que por este solicitado, de acordo com a legislação em vigor, ou caso o 99Pets identifique, a seu único e exclusivo critério, risco na operação.<br>\n    <br>\n    2.5. O usuário Vendedor deverá reparar eventuais vícios e/ou defeitos dos produtos e/ou serviços por ele anunciados, bem como informar eventual cancelamento da compra a pedido do usuário Comprador. Neste caso, caberá ao usuário Vendedor realizar a coleta do produto cancelado no endereço indicado pelo usuário Comprador, sem ônus adicional.<br>\n    <br>\n    2.6. Ao definir as condições da oferta, o usuário Vendedor declara ser integralmente responsável pelos produtos e/ou serviços disponibilizados aos usuários Compradores do Site, incluindo as caraterísticas do produto e/ou serviço, preço, forma e prazos de entrega, além de todas as condições relacionadas à oferta.<br>\n    <br>\n    2.7. O usuário Vendedor se obriga a: <br>\n    (i) Integrar sua plataforma eletrônica ao 99Pets, diretamente ou por meio de integradores, desde que compatíveis com a tecnologia do 99Pets. A integração deverá manter as ofertas publicadas na plataforma eletronica do 99Pets sempre atualizadas no prazo máximo de 1 hora, a partir da alteração do conteúdo na plataforma do usuário Vendedor. <br>\n    (ii) Garantir que as ofertas do Site tenham, no mínimo, as mesmas condições comerciais oferecidas na plataforma do usuário Vendedor e nos demais portais e sites em que o usuário Vendedor ofereça seus produtos e/ou serviços. Esta condição não se aplica às formas de pagamento oferecidas, que no Site serão definidas a exclusivo critério do 99Pets; <br>\n    (iii) Responsabilizar-se diretamente em relação aos produtos e/ou serviços por ele oferecidos, pelo atendimento pré e pós venda aos usuários Compradores na ferramenta disponibilizada pelo 99Pets, por telefone e/ou canais eletrônicos, a exemplo, mas não se limitando ao atendimento por e-mail, através de uma equipe contratada e treinada pelo usuário Vendedor para tal fim, respeitadas as condições estabelecidas no presente Contrato; <br>\n    (iv) Responsabilizar-se pelo resultado de serviços prestados por eventuais contratados para atendimento dos usuários Compradores; <br>\n    (v) Inativar imediatamente a divulgação e venda de produtos e/ou serviços cuja disponibilização e comercialização esteja impossibilitada por qualquer motivo; <br>\n    (vi) Cumprir com suas próprias obrigações tributárias em relação aos produtos e/ou serviços por ele oferecidos a usuários Compradores, em cumprimento à legislação em vigor, inclusive em relação à emissão dos respectivos documentos fiscais diretamente aos usuários Compradores, não podendo imputar ao 99Pets quaisquer ônus em relação ao cumprimento destas obrigações.<br>\n    <br>\n    2.8. O usuário Vendedor declara que possui ferramentas de segurança aptas a garantir a integridade e a confidencialidade do recolhimento, registro, armazenamento e utilização de quaisquer dados dos usuários Compradores, responsabilizando-se pela utilização indevida e não autorizada destes dados, inclusive em obediência a eventual legislação posterior a este Contrato que regule especificamente a proteção de dados.<br>\n    <br>\n    2.9. O usuário Vendedor reconhece e declara que não terá acesso ao endereço eletrônico de qualquer usuário Comprador por meio do 99Pets, mas tão somente a um e-mail mascarado para eventual contato que se faça necessário.<br>\n    <br>\n    2.10. O usuário Vendedor se compromete a não utilizar os dados dos usuários Compradores para divulgações publicitárias e qualquer outro fim que não o cumprimento deste Contrato, salvo mediante expressa autorização do usuário Comprador diretamente no Site do usuário Vendedor. Ao enviar qualquer tipo de publicidade ao usuário Comprador, observados os limites desta cláusula, o usuário Vendedor se compromete a cumprir integralmente o disposto no Código de Autorregulamentação do Email Marketing.<br>\n    <br>\n    2.11. As Partes acordam que o 99Pets poderá disponibilizar aos usuários Compradores mecanismos de -rating- ou -ranking- para avaliação da performance dos usuários Vendedores no Marketplace. O sistema de avaliação será feito exclusivamente com informações inseridas pelos usuários Compradores, não tendo o 99Pets qualquer ingerência e/ou direito de editar os conteúdos publicados, exceto, nos casos de conteúdos de baixo calão e/ou que violem a legislação em vigor.<br>\n    <br>\n    3. Obrigações do usuário Comprador<br>\n    3.1. Para realizar transações no Marketplace do 99Pets, o usuário Comprador deverá ler, compreender e aceitar expressamente o presente Termo e Condições de Uso do Marketplace, bem como os demais documentos neste relacionados, especialmente o Termos e Condições de Uso Gerais do Site, que contempla a Política de Privacidade e demais anexos.<br>\n    <br>\n    3.2. O usuário Comprador declara estar ciente das responsabilidades e obrigações dos usuários Vendedores descritas neste Contrato, reconhecendo que ao comprar um produto e/ou serviço diretamente de um usuário Vendedor, o 99Pets não possuirá qualquer responsabilidade pelo conteúdo, prazo de entrega, atendimento e condições da oferta do usuário Vendedor, cabendo ao 99Pets apenas promover a aproximação entre os usuários Vendedor e Comprador, por meio da sua plataforma de Marketplace.<br>\n    <br>\n    3.3. Ao realizar transações no Marketplace do 99Pets, o usuário Comprador autoriza, expressamente, que o 99Pets disponibilize seus dados ao usuário Vendedor do qual será adquirido o produto ou serviço pelo usuário Comprador, para que este concretize a transação.<br>\n    <br>\n    3.4. Os Termos e Condições de Uso do Marketplace do 99Pets estão sujeitos a constante melhoria e aprimoramento. Assim, o 99Pets se reserva o direito de modificar a qualquer momento, de forma unilateral, o presente documento. Os novos Termos e Condições de uso do Marketplace entrarão em vigor após 10 (dez) dias contados de sua publicação no Portal. Caso o usuário Comprador não esteja de acordo com as novas regras, deverá entrar em contato com os canais de atendimento do 99Pets, hipótese em que se considerará rescindido seu vínculo contratual com o 99Pets, devendo, no entanto, ser cumpridas todas as obrigações assumidas até o momento da efetiva rescisão.<br>\n    <br>\n    3.5. O usuário Comprador deverá cumprir com suas próprias obrigações tributárias, em cumprimento à legislação em vigor, não podendo imputar ao 99Pets quaisquer ônus em relação ao cumprimento destas obrigações.<br>\n    <br>\n    4. Obrigações do 99Pets<br>\n    4.1. O 99Pets será responsável pelo desenvolvimento do Marketplace, incluindo, mas não se limitando a, toda estrutura física e tecnológica para a manutenção do serviço prestado.<br>\n    <br>\n    4.1.1. O 99Pets oferecerá ainda as ferramentas necessárias ao checkout e processo de pagamento (diretamente ou por meio de serviços prestados por terceiros), bem como ferramentas para comunicações via e-mail relacionadas ao status do pedido.<br>\n    <br>\n    4.2. Obriga-se o 99Pets a: <br>\n    (i) Prestar ao usuário Vendedor as informações possíveis e relevantes para o cumprimento do objeto do presente Contrato, incluindo informações adicionais sobre o desenvolvimento do funcionamento do Marketplace; <br>\n    (ii) Manter seu portal funcionando de forma que os produtos e/ou serviços oferecidos pelo usuário Vendedor sejam disponibilizados publicamente a todos os usuários Compradores; <br>\n    (iii) Manter em seu portal, por si ou por terceiros, ferramentas destinadas ao registro das informações dos usuários Compradores, especialmente em relação às informações cadastrais, registro das vendas e gerenciamento de pagamentos; <br>\n    (iv) Efetuar, por si ou por terceiros, os repasses ao usuário Vendedor em relação às transações efetuadas no Marketplace em decorrência do presente Contrato, efetuando as devidas retenções pelas tarifas por utilização do serviço de Marketplace, bem como demais retenções legais caso aplicáveis; <br>\n    (v) Envidar os melhores esforços para divulgar o Marketplace nos canais publicitários disponíveis.<br>\n    <br>\n    4.3. O 99Pets poderá oferecer atendimento pós-venda básico, com os seguintes serviços: confirmação de pagamento, problemas no pagamento, informações de pedido, status do pedido, prazo de entrega estabelecido pelo usuário Vendedor.<br>\n    <br>\n    4.4. Quando o cancelamento da compra for solicitado pelo usuário Comprador através do Marketplace, o 99Pets deverá endereçar referida solicitação ao respectivo usuário Vendedor para que adote todas as providências necessárias, conforme cláusula 2.4.<br>\n    <br>\n    5. Publicações de Anúncios das Ofertas<br>\n    5.1. O usuário Vendedor, ao publicar as ofertas no Marketplace, deverá indicar as informações detalhadas e completas sobre os produtos e/ou serviços oferecidos, incluindo as formas de entrega disponíveis, prazos de entrega, custos de frete e demais informações necessárias para a oferta do produto e/ou serviço ao usuário Comprador, observada a legislação aplicável.<br>\n    <br>\n    5.2. Para publicar as ofertas no Marketplace, as imagens do usuário Vendedor deverão ter o tamanho mínimo de 400 x 400 pixels ou 40 kbytes, sem qualquer marca d'agua, logo e/ou quaisquer informações do usuário Vendedor e com a indicação do código de identificação individual de cada item - ID do SKU, sob pena de não integração dos produtos e/ou serviços no Marketplace.<br>\n    <br>\n    5.3. O 99Pets não poderá assegurar o êxito de qualquer negociação realizada pelo usuário Vendedor.<br>\n    <br>\n    6. Responsabilidade pela Integração dos Anúncios<br>\n    6.1. O usuário Vendedor deverá, para integração no Marketplace do 99Pets, disponibilizar seus produtos e/ou serviços por meio de plataforma online, mantida diretamente pelo usuário Vendedor ou por serviços oferecidos por empresas especializadas.<br>\n    <br>\n    6.2. O usuário Vendedor será responsável por todos os seus anúncios de produtos e/ou serviços veiculados no Marketplace por meio de integrador próprio ou oferecidos por terceiros incluindo, mas não se limitando, eventuais cobranças e negociações realizadas.<br>\n    <br>\n    6.3. O usuário Vendedor reconhece que o 99Pets não possui qualquer ingerência ou responsabilidade no que diz respeito à relação entre o usuário Vendedor e o integrador, bem como que não poderá assumir qualquer obrigação ou, ainda, conceder qualquer direito que possa ser conflitante com o disposto no presente Contrato.<br>\n    <br>\n    7. Práticas Vedadas<br>\n    7.1. O usuário Vendedor não poderá, entre outras atitudes previstas neste Contrato: <br>\n    (i) Manipular os preços dos produtos e/ou serviços anunciados no Marketplace; <br>\n    (ii) Interferir nas negociações entre outros usuários Vendedores; <br>\n    (iii) Anunciar produtos proibidos pelas políticas do 99Pets constantes neste Contrato e na legislação aplicável ao produto e ou serviços disponibilizado à venda; <br>\n    (iv) Agredir, caluniar, injuriar ou difamar outros usuários Vendedores.<br>\n    <br>\n    7.2. A prática de quaisquer atos descritos acima poderá ser sancionada pelo 99Pets, com o consequente e imediato cancelamento ou suspensão do usuário Vendedor no Marketplace, sem prejuízo das ações legais cabíveis.<br>\n    <br>\n    8. Tarifas e Pagamentos<br>\n    8.1. O usuário Vendedor pagará ao 99Pets tarifa pela utilização do serviço de Marketplace correspondente a um percentual sobre a soma do valor do produto e/ou serviço anunciado e o respectivo frete, denominado \"Tarifa\". O frete será repassado ao usuário Vendedor que contrata diretamente serviços de transporte.<br>\n    <br>\n    8.2. Os percentuais e peculiaridades que compõem a Tarifa seguem especificados na Proposta Comercial preenchida no Site. O 99Pets se resguarda ao direito de propor nova Tarifa a qualquer tempo, sendo certo que, caso o usuário Vendedor não concorde com a alteração da Tarifa proposta, poderá se manifestar no prazo de até 5 (cinco) dias a contar do envio da comunicação pelo 99Pets para rescisão do Contrato. A não manifestação do usuário Vendedor no prazo descrito nesta cláusula será entendida como aceite tácito.<br>\n    <br>\n    8.2.1 Caso o usuário Vendedor inicie vendas de produtos com categoria(s) não negociada(s) na assinatura deste Contrato, a Tarifa a ser cobrada será 19,99% (dezenove vírgula noventa e nove por cento).<br>\n    <br>\n    8.3. O 99Pets disponibilizará relatório a cada 30 (trinta) dias para o usuário Vendedor demonstrando o valor a ser pago/retido a título de Tarifa. O relatório será sempre fechado no dia 25 e disponibilizado no dia 01 do mês seguinte (ou no primeiro dia útil subsequente) e conterá as Tarifas relacionadas às transações realizadas pelo usuário Vendedor nos 30 (trinta) dias anteriores à data do fechamento do relatório. O repasse dos valores apurados e refletidos no referido relatório será realizado todo dia 10 do mês subsequente ao fechamento ou no próximo dia útil subsequente, podendo haver alteração nas datas de repasse, sem necessidade de prévio aviso.<br>\n    <br>\n    8.3.1. Os pagamentos dos repasses dos valores apurados e refletidos no relatório mensal poderão ser antecipados junto a terceiros mediante análise prévia e aprovação pelo 99Pets O usuário Vendedor deverá formalizar eventual interesse através do canal de Atendimento Ajuda no Portal do Vendedor, sendo que as condições da operação serão apresentadas diretamente pelos terceiros que realizarão a antecipação. <br>\n    Esta condição poderá ser revogada a qualquer momento e a exclusivo critério do 99Pets.<br>\n    <br>\n    8.4. O usuário Vendedor deverá apontar eventuais divergências no relatório de Tarifas, formalmente, em até 05 (cinco) dias úteis a contar da liberação do relatório de vendas, hipótese em que o 99Pets analisará tais divergências e procederá, caso necessário, com as devidas correções para o débito/repasse (conciliação) de eventuais diferenças no mês subsequente.<br>\n    <br>\n    8.5. Para solicitar um estorno ao 99Pets, o usuário Vendedor deverá informar da forma definida pelo 99Pets: (i) Número do pedido; (ii) Item a ser ressarcido; (iii) Valor a ser ressarcido; (iv) Data do pedido; e. (v) Motivo do ressarcimento.<br>\n    <br>\n    8.6. O 99Pets, ao processar os pedidos de estorno reterá/cobrará, também a título de tarifa pela utilização do serviço, o equivalente a 5% (cinco por cento) do valor total da compra cancelada. Eventual conciliação financeira será realizada na fatura seguinte ao da realização do estorno.<br>\n    <br>\n    8.7. Após a disponibilização do relatório de transações, o 99Pets emitirá a Nota Fiscal referente às Tarifas aplicáveis, que deverão ser pagas pelo usuário Vendedor em até 15 (quinze) dias contados da emissão da Nota Fiscal ou debitadas, em até 15 (quinze) dias contados da emissão da Nota Fiscal, de valores a serem repassados ao usuário Vendedor pelas transações realizadas. Qualquer ingresso futuro de valores a serem repassados ao usuário Vendedor em razão de operações realizadas no Marketplace poderá ser utilizado pelo 99Pets para quitar eventuais débitos pendentes.<br>\n    <br>\n    8.8. O atraso no pagamento pelo usuário Vendedor das Tarifas devidas ao 99Pets resultará em multa contratual de 2% (dois por cento) do valor da respectiva Nota Fiscal, acrescida de juros de mora de 1% (um por cento) ao mês, calculados até a data do efetivo pagamento. Fica facultada a rescisão contratual, a exclusivo critério do 99Pets, caso a inadimplência permaneça sem justo motivo por mais de 30 (trinta) dias corridos após o envio de notificação por escrito ao usuário Vendedor relatando o inadimplemento, ressalvado ainda o direito do 99Pets de reclamar indenização.<br>\n    <br>\n    8.9. As responsabilidades decorrentes dos tributos devidos em razão deste Contrato serão de responsabilidade daquele que a lei definir como contribuinte, em especial quanto aos valores percebidos a título de Tarifa.<br>\n    <br>\n    8.10. O 99Pets diretamente, ou por meio de terceiros definidos a seu exclusivo critério, poderá oferecer serviços de gerenciamento de pagamento ao usuário Vendedor para pagamento de seus produtos e/ou serviços, podendo ser cobradas tarifas pela utilização de referido serviço.<br>\n    <br>\n    8.11. As Partes deverão guardar e manter disponível todas as informações e comprovantes referentes aos cancelamentos, ressarcimentos e devoluções pelo período de 05 (cinco) anos, podendo a outra Parte no caso de eventual ação judicial movida pelo comprador e/ou terceiro solicitar à Parte detentora de tais informações, que deverá prontamente disponibilizá-las.<br>\n    <br>\n    9. Direitos Autorais e Propriedade Intelectual<br>\n    9.1. O usuário Vendedor é o único responsável pelos produtos e/ou serviços por ele oferecidos no Marketplace, pela entrega destes, bem como pelo serviço de pós-venda relacionado ao atendimento aos usuários Compradores;<br>\n    <br>\n    9.2. O 99Pets é o único responsável pelos danos causados a seus usuários por defeitos ou vícios relativos exclusivamente à prestação do serviço de Marketplace no site www.99pets.org, desde que o 99Pets tenha dado causa aos referidos defeitos ou vícios.<br>\n    <br>\n    9.3. O usuário Vendedor concorda em manter indene o 99Pets, seus diretores, gerentes, empregados e agentes em relação a todas e quaisquer responsabilidades, obrigações, perdas, danos, penalidades, ações, decisões, processos, custos, despesas, multas, condenações, incluindo, mas não se limitando, honorários ou desembolsos de qualquer natureza decorrentes dos produtos e serviços oferecidos pelo usuário Vendedor por meio do Marketplace, e/ou pelo descumprimento das demais obrigações deste instrumento.<br>\n    <br>\n    9.4. Nenhuma das Partes terá qualquer tipo de responsabilidade, frente à outra Parte, por defeitos técnicos e/ou operacionais oriundos do sistema de usuários Compradores.<br>\n    <br>\n    9.5. As Partes reconhecem que não é de responsabilidade do 99Pets qualquer dano, prejuízo ou perda sofridos pelo usuário Vendedor em razão de falhas na internet, no sistema ou no servidor utilizado pelo usuário Vendedor decorrentes de condutas de terceiros, vírus ou caso fortuito e/ou força maior.<br>\n    <br>\n    9.6. O usuário Vendedor declara ser o único e exclusivo responsável pela existência, quantidade, qualidade, estado, integridade ou legitimidade dos produtos por ele ofertados no Marketplace, estando o usuário Comprador ciente e de acordo com o aqui estabelecido. As Partes isentam, portanto, o 99Pets de toda e qualquer responsabilidade neste sentido.<br>\n    <br>\n    10. Propriedade Intelectual<br>\n    10.1. O usuário Vendedor, direta ou indiretamente, não fará ou autorizará o uso das marcas, logotipos, slogans, imagens, patentes, modelos de utilidade, desenhos industriais, segredos industriais ou outra propriedade intelectual do 99Pets, suas afiliadas, controladas, controladoras e demais empresas do seu grupo econômico (\"Propriedade Intelectual\"), salvo se necessário para a execução do presente Contrato e exclusivamente durante sua vigência, desde que mediante prévia autorização por escrito do 99Pets.<br>\n    <br>\n    10.2. O 99Pets é titular do Portal www.99pets.org e detém todos os direitos sobre a aparência, design, funcionalidade e todos os demais aspectos do Portal, sendo que tais direitos não poderão ser utilizados, reproduzidos e/ou copiados sem a expressa autorização do 99Pets.<br>\n    <br>\n    10.3. O usuário Vendedor declara que as marcas, nomes empresariais título de estabelecimento, expressão de propaganda, slogans, imagens ou qualquer outra propriedade intelectual por ele e/ou empresas do mesmo grupo econômico utilizadas para a sua própria identificação, não infringem quaisquer direitos de propriedade intelectual de terceiros. Ainda, declara que seus produtos e/ou serviços expostos à venda no portal www.99pets.org não violam ou infringem patente, direito autoral, marca, nome comercial, trade dress, imagem, desenho industrial, segredo comercial ou, sem limitação, quaisquer direitos de propriedade intelectual de terceiros, declarando o usuário Vendedor, por fim, que o presente Contrato não viola quaisquer cessões, licenças ou concessões outorgadas e firmadas entre si e terceiros.<br>\n    <br>\n    10.4. O usuário Vendedor concorda em manter indene o 99Pets, seus diretores, gerentes, empregados e agentes em relação a todas e quaisquer responsabilidades, obrigações, perdas, danos, penalidades, ações, decisões, processos, custos, despesas, multas, condenações, incluindo, mas não se limitando, honorários ou desembolsos de qualquer natureza decorrentes de quaisquer violações e/ou alegações de violação de direito autoral e/ou de propriedade industrial de terceiros durante ou após a vigência do presente Contrato.<br>\n    <br>\n    10.5. O usuário Vendedor, em relação ao conteúdo publicado no site do www.99pets.org, concede ao 99Pets uma licença gratuita, não exclusiva, livre de royalties, pelo prazo de 10 (dez) anos após o término ou rescisão deste Contrato, para incluindo, mas não se limitando, publicar, reproduzir, distribuir, utilizar, transmitir, exibir, criar trabalhos derivados e de qualquer forma explorar comercialmente todo o conteúdo relativo aos produtos e/ou serviços disponibilizados por meio do Marketplace, incluindo propagandas e marketing promocional por meio do 99Pets, sites de terceiros, e-mail e outras mídias.<br>\n    <br>\n    10.6. O usuário Vendedor concede ao 99Pets licença gratuita e não exclusiva, livre royalties, durante o período de vigência do Contrato para publicação, utilização, reprodução, distribuição, transmissão e exibição das marcas e nome comercial do usuário Vendedor em relação à execução deste Contrato.<br>\n    <br>\n    10.7. O 99Pets poderá remover anúncio do usuário Vendedor caso receba alguma denúncia, reclamação ou questionamento de terceiros titular de marca.<br>\n    <br>\n    11. Confidencialidade<br>\n    11.1. O usuário Vendedor se obriga, por si e seus sócios, prepostos, empregados e/ou subcontratados, durante todo o período de vigência deste Contrato e por 5 (cinco) anos após o seu término ou rescisão, a manter o mais completo e absoluto sigilo e confidencialidade sobre toda e qualquer informação relacionada com as atividades desenvolvidas pelas Partes, sejam elas diretamente relacionadas ao objeto deste Contrato ou não, sob pena de responder pelas perdas e danos e demais cominações legais decorrentes de tal violação.<br>\n    <br>\n    11.2. O usuário Vendedor obriga-se a exigir dos seus eventuais colaboradores e subcontratados as mesmas condições de sigilo assumidas no presente Contrato, respondendo solidariamente com estes em todas as infrações eventualmente cometidas.<br>\n    <br>\n    11.3. Não serão consideradas informações confidenciais aquelas que sejam de conhecimento público na época da sua transmissão a terceiros, bem como aquelas requisitadas por autoridade governamental ou decisão judicial, desde que a parte receptora notifique previamente a parte reveladora, para que esta tome as medidas necessárias que entender cabíveis.<br>\n    <br>\n    11.4. Na hipótese de término deste Contrato por qualquer razão, todos os documentos, dados ou materiais referentes ao 99Pets em poder do usuário Vendedor ou de seus subcontratados, deverão ser imediatamente devolvidos ao 99Pets, mediante protocolo de entrega, no endereço constante no preâmbulo deste Contrato.<br>\n    <br>\n    12. Vigência e Rescisão<br>\n    12.1. Este Contrato vigorará desde a data do seu aceite e por prazo indeterminado. As Partes poderão rescindi-lo mediante o envio de comunicação prévia e por escrito com antecedência de 30 (trinta) dias, sem qualquer ônus ou indenizações, ressalvadas as obrigações pendentes.<br>\n    <br>\n    12.2. O presente Contrato poderá ainda ser automaticamente rescindido, a qualquer tempo, de pleno direito, nas seguintes hipóteses: (i) insolvência, liquidação judicial ou extrajudicial, recuperação judicial ou extrajudicial ou falência de uma das Partes; (ii) alteração do objeto social de qualquer das Partes, que inviabilize a execução do Contrato; (iii) reestruturação societária, fusão, cisão ou incorporação de qualquer das Partes, bem como havendo qualquer participação societária do usuário Vendedor ou empresas coligadas com concorrentes do 99Pets; (iv) motivos de caso fortuito ou força maior, na forma definida em Lei, que impossibilitem a execução deste Contrato por mais de 30 (trinta) dias, desde que tal circunstância seja imediatamente notificada à outra Parte; (v) inadimplemento, por qualquer das PARTES, de qualquer das cláusulas e/ou condições do Contrato, caso a Parte inadimplente não sane a falta no prazo de 30 (trinta) dias corridos após o recebimento de notificação por escrito pela Parte inocente, relatando o inadimplemento, hipótese esta em que a Parte inocente terá o direito de reclamar indenização; e, (vi) não observância do quanto previsto nas Práticas Vedadas constantes na cláusula 7.<br>\n    <br>\n    12.3. O usuário Vendedor poderá ainda rescindir o Contrato caso não concorde com a alteração da Tarifa. Neste caso, após a manifestação expressa da discordância no prazo previsto na cláusula 8.2., o Contrato será automaticamente rescindido no prazo de 30 (trinta) dias, período este em que deverão ser mantidas todas as obrigações contratuais.<br>\n    <br>\n    12.4. As Partes reconhecem que, além das responsabilidades e obrigações das Partes que dadas a sua natureza sobreviverão à extinção do Contrato, permanecerá a obrigação de confidencialidade prevista na cláusula 11.1, bem como a concessão de licença gratuita prevista na cláusula 10.5., ambas do presente instrumento.<br>\n    <br>\n    13. Mediações e Conflitos<br>\n    13.1. - Reclamações recebidas pelo 99Pets<br>\n    <br>\n    13.1.1. É facultado ao 99Pets intervir no atendimento das reclamações dos usuários Compradores do Marketplace, especialmente nos seguintes casos: (i) o usuário Comprador não recebe o produto e/ou serviço adquirido do usuário Vendedor no prazo ofertado; (ii) o produto e/ou serviço recebido é diferente do descrito na página do produto e/ou serviço; (iii) o produto e/ou serviço recebido apresenta vício ou defeito; e/ou (iv) o usuário Comprador deseja devolver o produto e não é atendido pelo usuário Vendedor. Nestas hipóteses, entre outras, o 99Pets mediará a solução do problema entre os usuários Comprador e Vendedor, seguidos os procedimentos descritos nesta cláusula.<br>\n    <br>\n    13.1.2. Recebida a reclamação do usuário Comprador, o 99Pets encaminhará a ocorrência ao usuário Vendedor, que deverá apresentar solução definitiva ao usuário Comprador, sempre no prazo de 5 (cinco) dias úteis (contados do envio da reclamação pelo 99Pets).<br>\n    <br>\n    13.1.3. Findo o prazo para solução da ocorrência sem resposta ou solução por parte do usuário Vendedor, a equipe de atendimento do 99Pets poderá optar pelo cancelamento da transação e o ressarcimento integral dos valores pagos ao usuário Comprador.<br>\n    <br>\n    13.2. - Reclamações recebidas diretamente pelo usuário Vendedor<br>\n    <br>\n    13.2.1. Caso a reclamação seja feita pelo usuário Comprador diretamente junto ao usuário Vendedor, o usuário Vendedor deverá notificar o 99Pets sobre os casos de cancelamento do pedido nos seguintes prazos:<br>\n    <br>\n    Motivo do Cancelamento\tPrazo para notificação do 99Pets<br>\n    Atraso/demora na entrega de produto e/ou serviço\t1 dia útil contado da reclamação do usuário Comprador<br>\n    Vicio ou defeito de produto e/ou serviço\t1 dia útil contado do recebimento do produto no centro de distribuição do usuário Vendedor<br>\n    Produto e/ou serviço diferente do adquirido\t1 dia útil contado do recebimento do produto no centro de distribuição do usuário Vendedor<br>\n    Atraso na coleta do produto no endereço do usuário Comprador\t1 dia útil contado da reclamação do usuário Comprador<br>\n    13.2.2. Caso chegue ao conhecimento do 99Pets que a reclamação de um usuário Comprador não foi comunicada pelo usuário Vendedor nos prazos descritos nesta cláusula, poderá o 99Pets proceder imediatamente ao cancelamento da transação e o ressarcimento integral dos valores pagos ao usuário Comprador.<br>\n    <br>\n    13.3. Condições Gerais para atendimento ou cancelamento do pedido do usuário Comprador<br>\n    <br>\n    13.3.1. Aberta uma reclamação pelo usuário Comprador, em qualquer canal, a solução apresentada pelo usuário Vendedor deverá sempre estar de acordo com a legislação em vigor, em especial o Código de Defesa do Consumidor.<br>\n    <br>\n    13.3.2. Caso seja solicitada pelo usuário Comprador a troca/devolução de algum produto, o usuário Vendedor deverá realizar a coleta do produto conforme os prazos mínimos estabelecidos no Anexo \"Tabela de Prazos para Coleta de Produtos\".<br>\n    <br>\n    13.3.3. Nos casos de cancelamento do pedido pelo usuário Comprador, especialmente decorrente de falhas ocasionadas pelo usuário Vendedor, serão normalmente cobradas pelo 99Pets as tarifas por utilização do serviço de Marketplace.<br>\n    <br>\n    13.3.4. O 99Pets cobrará do usuário Vendedor, através de descontos em faturas vincendas, todas as tarifas devidas pela prestação dos serviços de Marketplace, bem como todo e qualquer custo comprovadamente arcado pelo 99Pets com o cancelamento/ressarcimento do usuário Comprador.<br>\n    <br>\n    14. Disposições Gerais<br>\n    14.1. As Partes declaram que detém todos os direitos necessários à formalização deste Contrato, assumindo, a tal respeito, toda a responsabilidade perante a outra Parte e/ou terceiros.<br>\n    <br>\n    14.2. As Partes garantem, para todos os fins e efeitos, que cumprem os padrões de seu setor e/ou segmento de mercado e atua em conformidade com a legislação brasileira.<br>\n    <br>\n    14.3. As Partes deverão cumprir (i) todas as normas legais (leis federais, estaduais, municipais e internacionais, regras e regulamentos e exigências governamentais) atualmente vigentes, bem como normas que se tornarem vigentes relacionadas à privacidade, confidencialidade ou segurança das informações obtidas; (ii) todos os padrões da indústria aplicáveis às matérias de privacidade, proteção de dados, confidencialidade ou segurança da informação; (iii) as políticas de privacidade aplicáveis, declarações ou notificações que sejam fornecidos por escrito.<br>\n    <br>\n    14.4. O 99Pets espera que os usuários Vendedores que anunciem seus produtos e/ou serviços diretamente no Site ajam com ética e de maneira consistente com o Código de Ética do 99Pets.<br>\n    <br>\n    14.5. Usuário Vendedor e 99Pets, que reconhecem sua responsabilidade social, declaram que respeitarão integralmente a Lei 8.069/90 (Estatuto da Criança e do Adolescente), que não se utilizarão, em hipótese alguma, de trabalhadores submetidos ou forçados a condições ilegais de domínio do empregador (trabalho escravo), sob pena de rescisão imediata e de pleno direito deste Contrato, submetendo-se a Parte que infringir esta cláusula ao ressarcimento das perdas e danos causados e penalidades previstas em lei.<br>\n    <br>\n    14.6. As Partes obrigam-se a atuar, durante a vigência deste Contrato, de acordo com a melhor técnica aplicável, com zelo e diligência, sempre em rigorosa observância aos termos da Lei 6.938/81 (Política Nacional do Meio Ambiente), da Lei 9.605/98 (Lei dos Crimes Ambientais) e da Lei 12.305/2010 (Política Nacional dos Resíduos Sólidos), assim como as demais leis ambientais vigentes correlatas, assumindo todas as responsabilidades estabelecidas em lei e decorrentes de suas atividades.<br>\n    <br>\n    14.7. Os usuários Vendedores ou Compradores se comprometem a observar e cumprir as normas estabelecidas nos Programas de Sanções Econômicas e Embargos dos Estados Unidos da América (OFAC), bem como a não oferecer no Marketplace do 99Pets quaisquer produtos e/ou serviços originários e/ou fabricados por pessoas, empresas e/ou países constantes na listagem do OFAC.<br>\n    <br>\n    14.7.1. Os usuários Vendedores ou Compradores, ou qualquer entidade operando em nome de um usuário Vendedor ou Comprador não poderá ter acionista e/ou ser controlada, no todo ou em parte, por qualquer pessoa física ou jurídica, ou país sob sanções ou embargo de acordo com a lista do OFAC.<br>\n    <br>\n    14.7.2. Os produtos e/ou serviços oferecidos pelos usuários Vendedores ou Compradores não poderão conter partes ou matérias prima oriundas de países, ou empresas sob sanções ou embargos de acordo com a lista do OFAC.<br>\n    <br>\n    14.8. É vedado ao usuário Vendedor representar o 99Pets, assim como atuar em seu nome ou benefício perante terceiros e/ou Órgão do Governo, em qualquer nível, sem prévia e expressa autorização do 99Pets.<br>\n    <br>\n    14.9. As Partes se obrigam por si, seus herdeiros e/ou sucessores ao fiel cumprimento do aqui estipulado. Os direitos aqui previstos não poderão ser cedidos sem o consentimento prévio e por escrito da outra Parte, com exceção da cessão de direitos e obrigações a empresas de mesmo grupo econômico do 99Pets.<br>\n    <br>\n    14.10. Este Contrato substitui quaisquer declarações prévias ou outros acordos orais, escritos ou subentendidos e constitui o acordo definitivo entre as Partes acerca de seu objeto.<br>\n    <br>\n    14.11. A eventual invalidação, nulidade ou não exequibilidade de qualquer dispositivo contratual não afetará as demais disposições deste instrumento, as quais continuarão válidas e exequíveis.<br>\n    <br>\n    14.12. Qualquer omissão ou tolerância de qualquer das Partes em exigir o fiel cumprimento dos termos e condições deste Contrato não constituirá novação, perdão ou renúncia, nem afetará o direito da Parte de exigir seu cumprimento a qualquer tempo.<br>\n    <br>\n    14.13. Fica expressamente estipulado que não se estabelece entre as Partes, por força deste Contrato, nenhuma relação de sociedade, associação, consórcio, representação, agência, joint venture ou responsabilidade subsidiária ou solidária, tampouco implica a existência de qualquer vínculo empregatício entre as Partes, seus sócios, administradores, empregados, prepostos e/ou subcontratados, correndo por conta e responsabilidade exclusiva de seu contratante todas as obrigações fiscais, trabalhistas, infortunísticas (acidentes de trabalho), fundiárias (FGTS) e previdenciárias decorrentes de sua relação com aqueles.<br>\n    <br>\n    14.14. Todas as notificações, avisos, citações, intimações e quaisquer outros dados requeridos ou necessários entre as Partes deverão ser feitos por escrito e serão entregues ou remetidos para a outra Parte nominalmente na pessoa de seu representante legal informado no momento do cadastro junto ao Site.<br>\n    <br>\n    14.15. Qualquer alteração de endereço físico ou eletrônico do usuário Vendedor ou Comprador deverá ser imediatamente atualizado no Site. Até que seja feita essa atualização, serão válidos e eficazes os avisos, as comunicações, as notificações e as interpelações enviadas para o endereço informado. As Partes reconhecem que todas as mensagens enviadas por meio eletrônico constituem evidência e prova legal em âmbito judicial.<br>\n    <br>\n    14.16. Os compromissos e obrigações assumidos pelas Partes no âmbito do presente Contrato são passíveis de execução específica, nos termos dos artigos 461, 466-A e seguintes, do Código de Processo Civil, servindo este instrumento como título executivo extrajudicial, nos termos do artigo 585, II, do Código de Processo Civil, reconhecendo as Partes, desde logo, que o simples pagamento de perdas e danos poderá não constituir a compensação total e adequada no caso de inadimplemento de obrigação assumida neste Contrato.<br>\n    <br>\n    14.17. Sem prejuízo de outras medidas cabíveis, o 99Pets poderá advertir, suspender, temporária ou definitivamente o usuário Vendedor no Marketplace, cancelar os seus anúncios, iniciando ações legais cabíveis e/ou suspendendo a prestação de seus serviços se: (i) O usuário Vendedor não cumprir qualquer dispositivo destes Termos e Condições de Uso do Marketplace e demais políticas do 99Pets; (ii) O usuário Vendedor descumprir com seus deveres; (iii) O usuário Vendedor praticar atos fraudulentos ou dolosos; (iv) Caso qualquer informação fornecida pelo usuário Vendedor esteja incorreta; e,(v) Caso o 99Pets entenda que os anúncios ou qualquer atitude do usuário Vendedor tenha causado algum dano a terceiros ou ao próprio 99Pets ou, ainda, que possa causar. Nos casos de suspensão do usuário Vendedor, todos os anúncios ativos e/ou ofertas realizadas serão automaticamente cancelados.<br>\n    <br>\n    14.18. Os Termos e Condições de Uso do Marketplace estão sujeitos a constante melhoria e aprimoramento. Assim, o 99Pets se reserva o direito de modificar a qualquer momento, de forma unilateral, o presente Termos e Condições de Uso. Os novos Termos e Condições de Uso entrarão em vigor após 10 (dez) dias contados de sua publicação no Site. Caso os usuários Vendedores e usuários Compradores não estejam de acordo com as novas regras, deverão entrar em contato com os canais de atendimento do 99Pets, hipótese em que se considerará rescindido seu vínculo contratual com o 99Pets, devendo, no entanto, ser cumpridas todas as obrigações assumidas até o momento da efetiva rescisão. Não havendo manifestação no prazo estipulado, será entendido como aceito os novos Termos e Condições de Uso do Marketplace e o Contrato continuará vinculando as Partes.<br>\n    <br>\n    14.19. Anexos - São parte integrante e inseparável destes Termos e Condições de Uso do Marketplace os seguintes documentos e/ou seções do Site indicados a seguir. Estes documentos podem ser consultados no próprio Site, clicando na página correspondente:<br>\n    <br>\n    Termos e Condições Gerais de uso do 99Pets<br>\n    Política de entrega, troca e devolução de produtos;<br>\n    Politica de cadastramento de produtos no site do 99Pets;<br>\n    Tabela de Prazos para Coleta, Troca e Devoluções de Produtos;<br>\n    Service Level Agreement (SLA);<br>\n    Produtos Proibidos;<br>\n    Código de Ética do 99Pets.<br>\n    15. Lei aplicável e foro de eleição\n    Estes Termos e Condições de Uso do Marketplace são regidos pelas Leis do Brasil. Para todas as controvérsias e questões relacionadas e estes Termos e Condições as partes elegem o foro da Comarca de Porto Alegre - RS. Ficam excluídas desta regra as questões em que o Usuário se enquadre no conceito legal de Consumidor, situação em que qualquer.`,\n            \"thursday\": `Quinta-feira`,\n            \"the_current_subscription_value_is\": `<br/> O valor atual da assiatura é de: `,\n            \"this_is_a_recurring_payment\": `<br/> Dica: Este é um pagamento recorrente e será descontado diretamente da sua forma de pagamento ;)`,\n            \"total\": `Total`,\n            \"Training\": `Adestramento`,\n            \"tuesday\": `Terça-feira`,\n            \"type\": `Tipo`,\n            \"type_your_address_to_search_for_merchants\": `Digite o endereço desejado acima para buscar por estabelecimentos próximos a você ;)`,\n            \"type_your_address_here\": `Digite sua localização atual aqui (Ex.: Rua dos Anjos, 432) ;)`,\n            \"unities\": `Unidades`,\n            \"unities_abbreviation\": `Unid.`,\n            \"unity\": `Unidade`,\n            \"unit_kg\": `kg`,\n            \"unit_gram\": `g`,\n            \"until\": `até`,\n            \"update\": `Atualizar`,\n            \"user_role\": `Tipo de Usuário`,\n            \"username_explanation\": `Ex.: olamundo.`,\n            \"using_a_card_speeds_things_up_and_make_them_secure\": `Com um cartão cadastrado, você pode comprar no aplicativo com muito mais agilidade e segurança ;)`,\n            \"value\": `Valor`,\n            \"version\": `Versão`,\n            \"via_app\": `Via aplicativo`,\n            \"view\": `Ver`,\n            \"view_information_and_products\": `Ver informações e produtos`,\n            \"view_items\": `Ver itens`,\n            \"view_more\": `Ver mais`,\n            \"view_order_products\": `Ver produtos`,\n            \"view_profile\": `Ver perfil`,\n            \"view_the_order\": `Ver o pedido`,\n            \"VISA_CREDIT\": `Visa (Crédito)`,\n            \"VISA_DEBIT\": `Visa (Débito)`,\n            \"warning_you_dont_have_notifications_yet\": `Você ainda não possui nenhuma notificação ;)`,\n            \"waiting_for_the_establishment\": `Aguardando o estabelecimento...`,\n            \"we_were_unable_to_locate_your_address\": `Ops! Nós não conseguimos encontrar o endereço informado. Você pode revisar os dados e tentar novamente?`,\n            \"wednesday\": `Quarta-feira`,\n            \"weight\": `Peso`,\n            \"welcome\": `Seja bem vinda(o)!`,\n            \"withdraw_balance\": `Receber saldo`,\n            \"wonderful\": `Maravilhoso!`,\n            \"working_hours\": `Horário de Funcionamento`,\n            \"working_hours_divider\": `às`,\n            \"would_you_like_to_add_a_payment_method\": `Você gostaria de adicionar uma forma de pagamento à sua conta?`,\n            \"who_are_you\": `Você é`,\n            \"where_are_you\": `Aonde você está?`,\n            \"whoops_check_the_credentials_and_try_again\": `Ops! Verifique as credenciais informadas e tente novamente ;)`,\n            \"whoops_price_must_be_higher_than_zero\": `Ops! Você deve inserir um valor para cadastrar o produto ;)`,\n            \"whoops_quantity_must_be_higher_or_equals_to_one\": `Ops! A quantidade deve ser maior ou igual a 1.`,\n            \"whoops_the_address_must_contain_the_street_number\": `Ops! Por favor, verifique o endereço informado: Você lembrou de adicionar o número da rua? ;)`,\n            \"whoops_we_dont_have_enough_order_data_yet\": `Ops! Nós ainda não temos dados o bastante para gerar seus gráficos. Por favor, volte novamente em breve ;)`,\n            \"whoops_you_must_be_logged_in_to_access_this_content\": `Ops! Você deve estar logado para acessar este conteúdo ;)`,\n            \"whoops_you_must_be_logged_in_to_perform_this_action\": `Ops! Você deve estar logado para realizar esta ação ;)`,\n            \"whoops_you_have_delayed_payments\": `Ops! Nós não conseguimos identificar o pagamento da sua última mensalidade. <br/><br/> Por favor, verifique seus dados de pagamento para não perder seu acesso à plataforma ;)`,\n            \"wrong_password_confirmation_message\": `Ops! As senhas digitadas devem ser iguais ;)`,\n            \"years\": `anos`,\n            \"yes\": `Sim`,\n            \"you_do_not_have_any_pets_yet_ong_message\": `Olá! Neste espaço, você pode cadastrar pets para adoção e manter um histórico dos finais felizes que já proporcionou!`,\n            \"you_do_not_have_any_lost_pets_yet_ong_message\": `Olá! Neste espaço, você pode cadastrar pets para perdidos para que usuários ajudem a reuní-lo com seu tutor ;)`,\n            \"you_can_only_add_products_from_one_store_at_a_time\": `Ops! Você só pode adicionar produtos de uma loja de cada vez.<br/> \nFinalize a compra ou esvazie o carrinho para adicionar produtos de outras lojas.`,\n            \"you_have_received_a_new_order\": `Você recebeu um novo pedido!`,\n            \"you_have_received_a_new_order_message\": `Olá! Você recebeu um novo pedido de CUSTOMER_NAME`,\n            \"you_love_pets_but_life_is_a_rush\": `Você ama pets, mas a vida anda corrida?`,\n            \"you_must_be_authenticated_to_finish_the_order\": `Ops! Você deve estar autenticado para finalizar o pedido ;)`,\n            \"you_must_be_on_a_quality_network_in_order_to_signup\": `Você deve estar em uma rede estável para se cadastrar ;)`,\n            \"you_must_be_online_to_view_the_map\": `Ops! Você deve estar online para visualizar este mapa.`,\n            \"you_must_inform_your_street_number\": `Lembre-se de informar o número do seu endereço ;)`,\n            \"your_address\": `Seu endereço (com número)`,\n            \"your_account_role_has_been_updated_to\": `O nível de permissão da sua conta foi atualizado para`,\n            \"your_birth_date\": `Sua data de nascimento`,\n            \"your_city\": `Sua cidade`,\n            \"your_current_password\": `Sua senha atual`,\n            \"your_email\": `Seu e-mail`,\n            \"your_email_has_been_confirmed_successfully\": `Seu e-mail foi confirmado com sucesso! Autentique-se para utilizar o aplicativo com tranquilidade e segurança!`,\n            \"your_name\": `Seu nome`,\n            \"your_neighbourhood\": `Seu bairro`,\n            \"your_new_password\": `Sua nova senha`,\n            \"your_open_days\": `Dias de atendimento`,\n            \"your_order_has_been_canceled\": `Seu pedido foi cancelado :(`,\n            \"your_order_has_been_canceled_message\": `Olá, seu pedido para MERCHANT_NAME foi cancelado.`,\n            \"your_order_has_been_confirmed\": `Seu pedido foi enviado! Aguarde a confirmação do estabelecimento em seu e-mail ;)`,\n            \"your_order_has_been_confirmed_message\": `Seu pedido para MERCHANT_NAME foi confirmado!`,\n            \"your_password\": `Sua senha`,\n            \"your_phone_number\": `Seu telefone`,\n            \"your_sex\": `Seu sexo`,\n            \"your_suggestion_has_been_sent\": `Muito obrigado pela sua contribuição! <br> Sua sugestão foi enviada com sucesso e será adicionada assim que possível por nossos administradores ;)`,\n            \"your_store_name\": `Nome do seu estabelecimento`,\n            \"your_tax_document\": `Seu CNPJ`,\n            \"your_tax_document_CNPJ\": `Seu CNPJ`,\n            \"your_tax_document_CPF\": `Seu CPF`,\n            \"your_temporary_password_is\": `Sua nova temporária de acesso é`,\n            \"your_username\": `Seu usuário`,\n            \"your_website\": `Seu website (Opcional)`,\n            \"your_zip_code\": `Seu CEP`,\n      };\n\n      public load(): AppTranslations {\n            return this[\"pt\" || navigator.language];\n      }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.locales.ts","import { NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport * as CPF from \"@fnando/cpf\";\n\n@Directive({\n    selector: '[mars-cpf][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MarsCpfValidator,\n            multi: true\n        }\n    ]\n})\nexport class MarsCpfValidator implements Validator {\n    validate(control: FormControl) {\n        let cpf = control.value;\n        if (cpf && !CPF.isValid(cpf)) {\n            return { cpf: { error: \"Whoops! This cpf number is not valid ;)\" } }\n        }\n        return null;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/directives/mars-cpf-validator.ts","import { NG_VALIDATORS, FormControl, Validator } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport * as CNPJ from \"@fnando/cnpj\";\n\n@Directive({\n    selector: '[mars-cnpj][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MarsCnpjValidator,\n            multi: true\n        }\n    ]\n})\nexport class MarsCnpjValidator implements Validator {\n    validate(control: FormControl) {\n        let cnpj = control.value;\n        if (cnpj && !CNPJ.isValid(cnpj)) {\n            return { cnpj: { error: \"Whoops! This cnpj number is not valid ;)\" } }\n        }\n        return null;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/directives/mars-cnpj-validator.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Assistant with message.\n */\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\n\n@Component({\n    selector: \"mars-assistant\",\n    templateUrl: \"mars-assistant.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class MarsAssistantComponent {\n    \n    @Input(\"message\") message: string;\n\n    constructor(private changeDetector: ChangeDetectorRef) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-assistant/mars-assistant.ts","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addSkipURL = exports.addSkip_TYPE = exports.addSkip_RAW_URL = exports.addSkip = exports.updatePasswordURL = exports.updatePassword_TYPE = exports.updatePassword_RAW_URL = exports.updatePassword = exports.recoverPasswordURL = exports.recoverPassword_TYPE = exports.recoverPassword_RAW_URL = exports.recoverPassword = exports.updateUserURL = exports.updateUser_TYPE = exports.updateUser_RAW_URL = exports.updateUser = exports.authenticateUserURL = exports.authenticateUser_TYPE = exports.authenticateUser_RAW_URL = exports.authenticateUser = exports.getUserProfileURL = exports.getUserProfile_TYPE = exports.getUserProfile_RAW_URL = exports.getUserProfile = exports.isUniqueUsernameURL = exports.isUniqueUsername_TYPE = exports.isUniqueUsername_RAW_URL = exports.isUniqueUsername = exports.createUserURL = exports.createUser_TYPE = exports.createUser_RAW_URL = exports.createUser = exports.removePictureURL = exports.removePicture_TYPE = exports.removePicture_RAW_URL = exports.removePicture = exports.getLatestURL = exports.getLatest_TYPE = exports.getLatest_RAW_URL = exports.getLatest = exports.getPictureURL = exports.getPicture_TYPE = exports.getPicture_RAW_URL = exports.getPicture = exports.addPictureURL = exports.addPicture_TYPE = exports.addPicture_RAW_URL = exports.addPicture = exports.getPetURL = exports.getPet_TYPE = exports.getPet_RAW_URL = undefined;\nexports.getPet = exports.removeCommentFromPetURL = exports.removeCommentFromPet_TYPE = exports.removeCommentFromPet_RAW_URL = exports.removeCommentFromPet = exports.addCommentToPetURL = exports.addCommentToPet_TYPE = exports.addCommentToPet_RAW_URL = exports.addCommentToPet = exports.removePetURL = exports.removePet_TYPE = exports.removePet_RAW_URL = exports.removePet = exports.savePetURL = exports.savePet_TYPE = exports.savePet_RAW_URL = exports.savePet = exports.removePetFromUserURL = exports.removePetFromUser_TYPE = exports.removePetFromUser_RAW_URL = exports.removePetFromUser = exports.addPetToUserURL = exports.addPetToUser_TYPE = exports.addPetToUser_RAW_URL = exports.addPetToUser = exports.getPetsByStatusURL = exports.getPetsByStatus_TYPE = exports.getPetsByStatus_RAW_URL = exports.getPetsByStatus = exports.getPetsByONGURL = exports.getPetsByONG_TYPE = exports.getPetsByONG_RAW_URL = exports.getPetsByONG = exports.getPetsByUserURL = exports.getPetsByUser_TYPE = exports.getPetsByUser_RAW_URL = exports.getPetsByUser = exports.accessWithFacebookURL = exports.accessWithFacebook_TYPE = exports.accessWithFacebook_RAW_URL = exports.accessWithFacebook = exports.getNotificationURL = exports.getNotification_TYPE = exports.getNotification_RAW_URL = exports.getNotification = exports.getNotificationsURL = exports.getNotifications_TYPE = exports.getNotifications_RAW_URL = exports.getNotifications = exports.sendNotificationURL = exports.sendNotification_TYPE = exports.sendNotification_RAW_URL = exports.sendNotification = exports.transferWithdrawalURL = exports.transferWithdrawal_TYPE = exports.transferWithdrawal_RAW_URL = exports.transferWithdrawal = exports.getAvailabeWithdrawalURL = exports.getAvailabeWithdrawal_TYPE = exports.getAvailabeWithdrawal_RAW_URL = exports.getAvailabeWithdrawal = exports.cancelSubscriptionURL = exports.cancelSubscription_TYPE = exports.cancelSubscription_RAW_URL = exports.cancelSubscription = exports.addSubscriptionURL = exports.addSubscription_TYPE = exports.addSubscription_RAW_URL = exports.addSubscription = exports.getSubscriptionCouponURL = exports.getSubscriptionCoupon_TYPE = exports.getSubscriptionCoupon_RAW_URL = exports.getSubscriptionCoupon = exports.toggleSubscriptionCouponURL = exports.toggleSubscriptionCoupon_TYPE = exports.toggleSubscriptionCoupon_RAW_URL = exports.toggleSubscriptionCoupon = exports.getSubscriptionCouponsURL = exports.getSubscriptionCoupons_TYPE = exports.getSubscriptionCoupons_RAW_URL = exports.getSubscriptionCoupons = exports.saveSubscriptionCouponURL = exports.saveSubscriptionCoupon_TYPE = exports.saveSubscriptionCoupon_RAW_URL = exports.saveSubscriptionCoupon = exports.toggleSubscriptionPlanURL = exports.toggleSubscriptionPlan_TYPE = exports.toggleSubscriptionPlan_RAW_URL = exports.toggleSubscriptionPlan = exports.getSubscriptionPlansURL = exports.getSubscriptionPlans_TYPE = exports.getSubscriptionPlans_RAW_URL = exports.getSubscriptionPlans = exports.saveSubscriptionPlanURL = exports.saveSubscriptionPlan_TYPE = exports.saveSubscriptionPlan_RAW_URL = exports.saveSubscriptionPlan = exports.getMerchantScheduleURL = exports.getMerchantSchedule_TYPE = exports.getMerchantSchedule_RAW_URL = undefined;\nexports.getMerchantSchedule = exports.requestServiceProvisionNearbyURL = exports.requestServiceProvisionNearby_TYPE = exports.requestServiceProvisionNearby_RAW_URL = exports.requestServiceProvisionNearby = exports.removePromotionItemURL = exports.removePromotionItem_TYPE = exports.removePromotionItem_RAW_URL = exports.removePromotionItem = exports.addPromotionItemURL = exports.addPromotionItem_TYPE = exports.addPromotionItem_RAW_URL = exports.addPromotionItem = exports.getPromotionItemsURL = exports.getPromotionItems_TYPE = exports.getPromotionItems_RAW_URL = exports.getPromotionItems = exports.getPromotionCategoryURL = exports.getPromotionCategory_TYPE = exports.getPromotionCategory_RAW_URL = exports.getPromotionCategory = exports.getPromotionURL = exports.getPromotion_TYPE = exports.getPromotion_RAW_URL = exports.getPromotion = exports.savePromotionURL = exports.savePromotion_TYPE = exports.savePromotion_RAW_URL = exports.savePromotion = exports.getPromotionsURL = exports.getPromotions_TYPE = exports.getPromotions_RAW_URL = exports.getPromotions = exports.getPaymentModesURL = exports.getPaymentModes_TYPE = exports.getPaymentModes_RAW_URL = exports.getPaymentModes = exports.getReceivingModesURL = exports.getReceivingModes_TYPE = exports.getReceivingModes_RAW_URL = exports.getReceivingModes = exports.rateOrderURL = exports.rateOrder_TYPE = exports.rateOrder_RAW_URL = exports.rateOrder = exports.cancelOrderURL = exports.cancelOrder_TYPE = exports.cancelOrder_RAW_URL = exports.cancelOrder = exports.acceptOrderURL = exports.acceptOrder_TYPE = exports.acceptOrder_RAW_URL = exports.acceptOrder = exports.getOrderURL = exports.getOrder_TYPE = exports.getOrder_RAW_URL = exports.getOrder = exports.getOrdersByPeriodURL = exports.getOrdersByPeriod_TYPE = exports.getOrdersByPeriod_RAW_URL = exports.getOrdersByPeriod = exports.getOrdersURL = exports.getOrders_TYPE = exports.getOrders_RAW_URL = exports.getOrders = exports.createOrderURL = exports.createOrder_TYPE = exports.createOrder_RAW_URL = exports.createOrder = exports.getNearbyMerchantsByServiceURL = exports.getNearbyMerchantsByService_TYPE = exports.getNearbyMerchantsByService_RAW_URL = exports.getNearbyMerchantsByService = exports.getNearbyMerchantsURL = exports.getNearbyMerchants_TYPE = exports.getNearbyMerchants_RAW_URL = exports.getNearbyMerchants = exports.createMerchantURL = exports.createMerchant_TYPE = exports.createMerchant_RAW_URL = exports.createMerchant = exports.getMerchantByUsernameURL = exports.getMerchantByUsername_TYPE = exports.getMerchantByUsername_RAW_URL = exports.getMerchantByUsername = exports.getMerchantByIdURL = exports.getMerchantById_TYPE = exports.getMerchantById_RAW_URL = exports.getMerchantById = exports.activateMarketItemCategoryURL = exports.activateMarketItemCategory_TYPE = exports.activateMarketItemCategory_RAW_URL = exports.activateMarketItemCategory = exports.deactivateMarketItemCategoryURL = exports.deactivateMarketItemCategory_TYPE = exports.deactivateMarketItemCategory_RAW_URL = exports.deactivateMarketItemCategory = exports.getMarketItemCategoryBySlugURL = exports.getMarketItemCategoryBySlug_TYPE = exports.getMarketItemCategoryBySlug_RAW_URL = undefined;\nexports.getMarketItemCategoryBySlug = exports.getRootMarketItemCategoriesURL = exports.getRootMarketItemCategories_TYPE = exports.getRootMarketItemCategories_RAW_URL = exports.getRootMarketItemCategories = exports.getMarketItemCategoriesURL = exports.getMarketItemCategories_TYPE = exports.getMarketItemCategories_RAW_URL = exports.getMarketItemCategories = exports.addMarketItemCategoryURL = exports.addMarketItemCategory_TYPE = exports.addMarketItemCategory_RAW_URL = exports.addMarketItemCategory = exports.getMarketItemAttributesURL = exports.getMarketItemAttributes_TYPE = exports.getMarketItemAttributes_RAW_URL = exports.getMarketItemAttributes = exports.addMarketItemAttributeURL = exports.addMarketItemAttribute_TYPE = exports.addMarketItemAttribute_RAW_URL = exports.addMarketItemAttribute = exports.getMarketItemsURL = exports.getMarketItems_TYPE = exports.getMarketItems_RAW_URL = exports.getMarketItems = exports.getAllMarketItemsURL = exports.getAllMarketItems_TYPE = exports.getAllMarketItems_RAW_URL = exports.getAllMarketItems = exports.getPendingMarketItemsURL = exports.getPendingMarketItems_TYPE = exports.getPendingMarketItems_RAW_URL = exports.getPendingMarketItems = exports.activateMarketItemURL = exports.activateMarketItem_TYPE = exports.activateMarketItem_RAW_URL = exports.activateMarketItem = exports.deactivateMarketItemURL = exports.deactivateMarketItem_TYPE = exports.deactivateMarketItem_RAW_URL = exports.deactivateMarketItem = exports.rejectMarketItemURL = exports.rejectMarketItem_TYPE = exports.rejectMarketItem_RAW_URL = exports.rejectMarketItem = exports.acceptMarketItemURL = exports.acceptMarketItem_TYPE = exports.acceptMarketItem_RAW_URL = exports.acceptMarketItem = exports.getMarketItemBySlugURL = exports.getMarketItemBySlug_TYPE = exports.getMarketItemBySlug_RAW_URL = exports.getMarketItemBySlug = exports.getMarketItemByIdURL = exports.getMarketItemById_TYPE = exports.getMarketItemById_RAW_URL = exports.getMarketItemById = exports.saveMarketItemURL = exports.saveMarketItem_TYPE = exports.saveMarketItem_RAW_URL = exports.saveMarketItem = exports.getInventoryItemsURL = exports.getInventoryItems_TYPE = exports.getInventoryItems_RAW_URL = exports.getInventoryItems = exports.getInventoryCategoryURL = exports.getInventoryCategory_TYPE = exports.getInventoryCategory_RAW_URL = exports.getInventoryCategory = exports.getInventoryItemsCountURL = exports.getInventoryItemsCount_TYPE = exports.getInventoryItemsCount_RAW_URL = exports.getInventoryItemsCount = exports.removeInventoryItemURL = exports.removeInventoryItem_TYPE = exports.removeInventoryItem_RAW_URL = exports.removeInventoryItem = exports.saveInventoryItemURL = exports.saveInventoryItem_TYPE = exports.saveInventoryItem_RAW_URL = exports.saveInventoryItem = exports.createCustomerAccountURL = exports.createCustomerAccount_TYPE = exports.createCustomerAccount_RAW_URL = exports.createCustomerAccount = exports.getFavoritesListURL = exports.getFavoritesList_TYPE = exports.getFavoritesList_RAW_URL = exports.getFavoritesList = exports.removeFavoriteMerchantURL = exports.removeFavoriteMerchant_TYPE = exports.removeFavoriteMerchant_RAW_URL = exports.removeFavoriteMerchant = exports.getPaymentCardsURL = exports.getPaymentCards_TYPE = exports.getPaymentCards_RAW_URL = exports.getPaymentCards = exports.removePaymentCardURL = exports.removePaymentCard_TYPE = exports.removePaymentCard_RAW_URL = undefined;\nexports.removePaymentCard = exports.addPaymentCardURL = exports.addPaymentCard_TYPE = exports.addPaymentCard_RAW_URL = exports.addPaymentCard = exports.useCouponURL = exports.useCoupon_TYPE = exports.useCoupon_RAW_URL = exports.useCoupon = exports.getCouponURL = exports.getCoupon_TYPE = exports.getCoupon_RAW_URL = exports.getCoupon = exports.createCouponURL = exports.createCoupon_TYPE = exports.createCoupon_RAW_URL = exports.createCoupon = exports.decrementOnCartURL = exports.decrementOnCart_TYPE = exports.decrementOnCart_RAW_URL = exports.decrementOnCart = exports.incrementOnCartURL = exports.incrementOnCart_TYPE = exports.incrementOnCart_RAW_URL = exports.incrementOnCart = exports.getCartItemsURL = exports.getCartItems_TYPE = exports.getCartItems_RAW_URL = exports.getCartItems = exports.clearCartURL = exports.clearCart_TYPE = exports.clearCart_RAW_URL = exports.clearCart = exports.getCartURL = exports.getCart_TYPE = exports.getCart_RAW_URL = exports.getCart = exports.createCartURL = exports.createCart_TYPE = exports.createCart_RAW_URL = exports.createCart = exports.getBankAccountsURL = exports.getBankAccounts_TYPE = exports.getBankAccounts_RAW_URL = exports.getBankAccounts = exports.removeBankAccountURL = exports.removeBankAccount_TYPE = exports.removeBankAccount_RAW_URL = exports.removeBankAccount = exports.addBankAccountURL = exports.addBankAccount_TYPE = exports.addBankAccount_RAW_URL = exports.addBankAccount = exports.getLeadURL = exports.getLead_TYPE = exports.getLead_RAW_URL = exports.getLead = exports.getLeadsURL = exports.getLeads_TYPE = exports.getLeads_RAW_URL = exports.getLeads = exports.addLeadURL = exports.addLead_TYPE = exports.addLead_RAW_URL = exports.addLead = exports.getPostCommentsURL = exports.getPostComments_TYPE = exports.getPostComments_RAW_URL = exports.getPostComments = exports.saveCommentURL = exports.saveComment_TYPE = exports.saveComment_RAW_URL = exports.saveComment = exports.getChatURL = exports.getChat_TYPE = exports.getChat_RAW_URL = exports.getChat = exports.getChatsURL = exports.getChats_TYPE = exports.getChats_RAW_URL = exports.getChats = exports.changeUserRoleURL = exports.changeUserRole_TYPE = exports.changeUserRole_RAW_URL = exports.changeUserRole = exports.activateUserAsAdminURL = exports.activateUserAsAdmin_TYPE = exports.activateUserAsAdmin_RAW_URL = exports.activateUserAsAdmin = exports.deactivateUserAsAdminURL = exports.deactivateUserAsAdmin_TYPE = exports.deactivateUserAsAdmin_RAW_URL = exports.deactivateUserAsAdmin = exports.getUsersAsAdminURL = exports.getUsersAsAdmin_TYPE = exports.getUsersAsAdmin_RAW_URL = exports.getUsersAsAdmin = exports.request = exports.setDomain = exports.getDomain = undefined;\n\nvar _axios = require(\"axios\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _qs = require(\"qs\");\n\nvar _qs2 = _interopRequireDefault(_qs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable */\nlet domain = '';\n\nconst getDomain = exports.getDomain = () => {\n  return domain;\n};\n\nconst setDomain = exports.setDomain = $domain => {\n  domain = $domain;\n};\n\nconst request = exports.request = (method, url, body, queryParameters, form, config) => {\n  method = method.toLowerCase();\n  let keys = Object.keys(queryParameters);\n  let queryUrl = url;\n\n  if (keys.length > 0) {\n    queryUrl = url + '?' + _qs2.default.stringify(queryParameters);\n  } // let queryUrl = url+(keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\n\n\n  if (body) {\n    return _axios2.default[method](queryUrl, body, config);\n  } else if (method === 'get' || method === 'delete' || method === 'head' || method === 'option') {\n    return _axios2.default[method](queryUrl, config);\n  } else {\n    return _axios2.default[method](queryUrl, _qs2.default.stringify(form), config);\n  }\n};\n/*==========================================================\n *                    \n ==========================================================*/\n\n/**\n * \n * request: getUsersAsAdmin\n * url: getUsersAsAdminURL\n * method: getUsersAsAdmin_TYPE\n * raw_url: getUsersAsAdmin_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param role - Desired role.\n * @param keyword - Filtering keyword.\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n */\n\n\nconst getUsersAsAdmin = exports.getUsersAsAdmin = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/admin/users';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['role'] !== undefined) {\n    queryParameters['role'] = parameters['role'];\n  }\n\n  if (parameters['role'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: role'));\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['keyword'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: keyword'));\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['page'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: page'));\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getUsersAsAdmin_RAW_URL = exports.getUsersAsAdmin_RAW_URL = function () {\n  return '/api/admin/users';\n};\n\nconst getUsersAsAdmin_TYPE = exports.getUsersAsAdmin_TYPE = function () {\n  return 'get';\n};\n\nconst getUsersAsAdminURL = exports.getUsersAsAdminURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/admin/users';\n\n  if (parameters['role'] !== undefined) {\n    queryParameters['role'] = parameters['role'];\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: deactivateUserAsAdmin\n * url: deactivateUserAsAdminURL\n * method: deactivateUserAsAdmin_TYPE\n * raw_url: deactivateUserAsAdmin_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst deactivateUserAsAdmin = exports.deactivateUserAsAdmin = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/admin/users/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst deactivateUserAsAdmin_RAW_URL = exports.deactivateUserAsAdmin_RAW_URL = function () {\n  return '/api/admin/users/{id}';\n};\n\nconst deactivateUserAsAdmin_TYPE = exports.deactivateUserAsAdmin_TYPE = function () {\n  return 'post';\n};\n\nconst deactivateUserAsAdminURL = exports.deactivateUserAsAdminURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/admin/users/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: activateUserAsAdmin\n * url: activateUserAsAdminURL\n * method: activateUserAsAdmin_TYPE\n * raw_url: activateUserAsAdmin_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst activateUserAsAdmin = exports.activateUserAsAdmin = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/admin/users/{id}/activate';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst activateUserAsAdmin_RAW_URL = exports.activateUserAsAdmin_RAW_URL = function () {\n  return '/api/admin/users/{id}/activate';\n};\n\nconst activateUserAsAdmin_TYPE = exports.activateUserAsAdmin_TYPE = function () {\n  return 'post';\n};\n\nconst activateUserAsAdminURL = exports.activateUserAsAdminURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/admin/users/{id}/activate';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: changeUserRole\n * url: changeUserRoleURL\n * method: changeUserRole_TYPE\n * raw_url: changeUserRole_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n * @param role - \n */\n\n\nconst changeUserRole = exports.changeUserRole = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/admin/users/{id}/role/{role}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{role}', `${parameters['role']}`);\n\n  if (parameters['role'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: role'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst changeUserRole_RAW_URL = exports.changeUserRole_RAW_URL = function () {\n  return '/api/admin/users/{id}/role/{role}';\n};\n\nconst changeUserRole_TYPE = exports.changeUserRole_TYPE = function () {\n  return 'post';\n};\n\nconst changeUserRoleURL = exports.changeUserRoleURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/admin/users/{id}/role/{role}';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{role}', `${parameters['role']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getChats\n * url: getChatsURL\n * method: getChats_TYPE\n * raw_url: getChats_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getChats = exports.getChats = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/chat/chats';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getChats_RAW_URL = exports.getChats_RAW_URL = function () {\n  return '/api/chat/chats';\n};\n\nconst getChats_TYPE = exports.getChats_TYPE = function () {\n  return 'get';\n};\n\nconst getChatsURL = exports.getChatsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/chat/chats';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getChat\n * url: getChatURL\n * method: getChat_TYPE\n * raw_url: getChat_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param chat - \n */\n\n\nconst getChat = exports.getChat = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/chat/{chat}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{chat}', `${parameters['chat']}`);\n\n  if (parameters['chat'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: chat'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getChat_RAW_URL = exports.getChat_RAW_URL = function () {\n  return '/api/chat/{chat}';\n};\n\nconst getChat_TYPE = exports.getChat_TYPE = function () {\n  return 'get';\n};\n\nconst getChatURL = exports.getChatURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/chat/{chat}';\n  path = path.replace('{chat}', `${parameters['chat']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: saveComment\n * url: saveCommentURL\n * method: saveComment_TYPE\n * raw_url: saveComment_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param comment - JSON representation of the comment.\n * @param post - \n */\n\n\nconst saveComment = exports.saveComment = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/comment/{post}/save';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['comment'] !== undefined) {\n    body = parameters['comment'];\n  }\n\n  path = path.replace('{post}', `${parameters['post']}`);\n\n  if (parameters['post'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: post'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst saveComment_RAW_URL = exports.saveComment_RAW_URL = function () {\n  return '/api/comment/{post}/save';\n};\n\nconst saveComment_TYPE = exports.saveComment_TYPE = function () {\n  return 'post';\n};\n\nconst saveCommentURL = exports.saveCommentURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/comment/{post}/save';\n  path = path.replace('{post}', `${parameters['post']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPostComments\n * url: getPostCommentsURL\n * method: getPostComments_TYPE\n * raw_url: getPostComments_RAW_URL\n * @param post - \n */\n\n\nconst getPostComments = exports.getPostComments = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/comment/by-post/{post}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{post}', `${parameters['post']}`);\n\n  if (parameters['post'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: post'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPostComments_RAW_URL = exports.getPostComments_RAW_URL = function () {\n  return '/api/comment/by-post/{post}';\n};\n\nconst getPostComments_TYPE = exports.getPostComments_TYPE = function () {\n  return 'get';\n};\n\nconst getPostCommentsURL = exports.getPostCommentsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/comment/by-post/{post}';\n  path = path.replace('{post}', `${parameters['post']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addLead\n * url: addLeadURL\n * method: addLead_TYPE\n * raw_url: addLead_RAW_URL\n * @param lead - JSON representation of the lead.\n */\n\n\nconst addLead = exports.addLead = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/lead';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['lead'] !== undefined) {\n    body = parameters['lead'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addLead_RAW_URL = exports.addLead_RAW_URL = function () {\n  return '/api/lead';\n};\n\nconst addLead_TYPE = exports.addLead_TYPE = function () {\n  return 'post';\n};\n\nconst addLeadURL = exports.addLeadURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/lead';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getLeads\n * url: getLeadsURL\n * method: getLeads_TYPE\n * raw_url: getLeads_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getLeads = exports.getLeads = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/lead';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getLeads_RAW_URL = exports.getLeads_RAW_URL = function () {\n  return '/api/lead';\n};\n\nconst getLeads_TYPE = exports.getLeads_TYPE = function () {\n  return 'get';\n};\n\nconst getLeadsURL = exports.getLeadsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/lead';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getLead\n * url: getLeadURL\n * method: getLead_TYPE\n * raw_url: getLead_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst getLead = exports.getLead = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/lead/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getLead_RAW_URL = exports.getLead_RAW_URL = function () {\n  return '/api/lead/{id}';\n};\n\nconst getLead_TYPE = exports.getLead_TYPE = function () {\n  return 'get';\n};\n\nconst getLeadURL = exports.getLeadURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/lead/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addBankAccount\n * url: addBankAccountURL\n * method: addBankAccount_TYPE\n * raw_url: addBankAccount_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param account - JSON representation of the account.\n */\n\n\nconst addBankAccount = exports.addBankAccount = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/bank-account/bank-account';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['account'] !== undefined) {\n    body = parameters['account'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addBankAccount_RAW_URL = exports.addBankAccount_RAW_URL = function () {\n  return '/api/bank-account/bank-account';\n};\n\nconst addBankAccount_TYPE = exports.addBankAccount_TYPE = function () {\n  return 'post';\n};\n\nconst addBankAccountURL = exports.addBankAccountURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/bank-account/bank-account';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removeBankAccount\n * url: removeBankAccountURL\n * method: removeBankAccount_TYPE\n * raw_url: removeBankAccount_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst removeBankAccount = exports.removeBankAccount = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/bank-account/bank-account/{id}/delete';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removeBankAccount_RAW_URL = exports.removeBankAccount_RAW_URL = function () {\n  return '/api/bank-account/bank-account/{id}/delete';\n};\n\nconst removeBankAccount_TYPE = exports.removeBankAccount_TYPE = function () {\n  return 'post';\n};\n\nconst removeBankAccountURL = exports.removeBankAccountURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/bank-account/bank-account/{id}/delete';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getBankAccounts\n * url: getBankAccountsURL\n * method: getBankAccounts_TYPE\n * raw_url: getBankAccounts_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getBankAccounts = exports.getBankAccounts = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/bank-account/bank-accounts';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getBankAccounts_RAW_URL = exports.getBankAccounts_RAW_URL = function () {\n  return '/api/bank-account/bank-accounts';\n};\n\nconst getBankAccounts_TYPE = exports.getBankAccounts_TYPE = function () {\n  return 'get';\n};\n\nconst getBankAccountsURL = exports.getBankAccountsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/bank-account/bank-accounts';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createCart\n * url: createCartURL\n * method: createCart_TYPE\n * raw_url: createCart_RAW_URL\n */\n\n\nconst createCart = exports.createCart = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/create';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createCart_RAW_URL = exports.createCart_RAW_URL = function () {\n  return '/api/cart/create';\n};\n\nconst createCart_TYPE = exports.createCart_TYPE = function () {\n  return 'post';\n};\n\nconst createCartURL = exports.createCartURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/create';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getCart\n * url: getCartURL\n * method: getCart_TYPE\n * raw_url: getCart_RAW_URL\n * @param id - \n */\n\n\nconst getCart = exports.getCart = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getCart_RAW_URL = exports.getCart_RAW_URL = function () {\n  return '/api/cart/{id}';\n};\n\nconst getCart_TYPE = exports.getCart_TYPE = function () {\n  return 'get';\n};\n\nconst getCartURL = exports.getCartURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: clearCart\n * url: clearCartURL\n * method: clearCart_TYPE\n * raw_url: clearCart_RAW_URL\n * @param id - \n */\n\n\nconst clearCart = exports.clearCart = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/{id}/clear';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst clearCart_RAW_URL = exports.clearCart_RAW_URL = function () {\n  return '/api/cart/{id}/clear';\n};\n\nconst clearCart_TYPE = exports.clearCart_TYPE = function () {\n  return 'post';\n};\n\nconst clearCartURL = exports.clearCartURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/{id}/clear';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getCartItems\n * url: getCartItemsURL\n * method: getCartItems_TYPE\n * raw_url: getCartItems_RAW_URL\n * @param id - \n * @param category - \n */\n\n\nconst getCartItems = exports.getCartItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/{id}/items/list/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getCartItems_RAW_URL = exports.getCartItems_RAW_URL = function () {\n  return '/api/cart/{id}/items/list/{category}';\n};\n\nconst getCartItems_TYPE = exports.getCartItems_TYPE = function () {\n  return 'get';\n};\n\nconst getCartItemsURL = exports.getCartItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/{id}/items/list/{category}';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: incrementOnCart\n * url: incrementOnCartURL\n * method: incrementOnCart_TYPE\n * raw_url: incrementOnCart_RAW_URL\n * @param item - JSON representation of the item.\n * @param id - \n */\n\n\nconst incrementOnCart = exports.incrementOnCart = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/{id}/items/increment';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst incrementOnCart_RAW_URL = exports.incrementOnCart_RAW_URL = function () {\n  return '/api/cart/{id}/items/increment';\n};\n\nconst incrementOnCart_TYPE = exports.incrementOnCart_TYPE = function () {\n  return 'post';\n};\n\nconst incrementOnCartURL = exports.incrementOnCartURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/{id}/items/increment';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: decrementOnCart\n * url: decrementOnCartURL\n * method: decrementOnCart_TYPE\n * raw_url: decrementOnCart_RAW_URL\n * @param item - JSON representation of the item.\n * @param id - \n */\n\n\nconst decrementOnCart = exports.decrementOnCart = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/cart/{id}/items/decrement';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst decrementOnCart_RAW_URL = exports.decrementOnCart_RAW_URL = function () {\n  return '/api/cart/{id}/items/decrement';\n};\n\nconst decrementOnCart_TYPE = exports.decrementOnCart_TYPE = function () {\n  return 'post';\n};\n\nconst decrementOnCartURL = exports.decrementOnCartURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/cart/{id}/items/decrement';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createCoupon\n * url: createCouponURL\n * method: createCoupon_TYPE\n * raw_url: createCoupon_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param couponInfo - JSON representation of the Coupon to be created.\n */\n\n\nconst createCoupon = exports.createCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/coupon/create';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['couponInfo'] !== undefined) {\n    body = parameters['couponInfo'];\n  }\n\n  if (parameters['couponInfo'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: couponInfo'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createCoupon_RAW_URL = exports.createCoupon_RAW_URL = function () {\n  return '/api/coupon/create';\n};\n\nconst createCoupon_TYPE = exports.createCoupon_TYPE = function () {\n  return 'post';\n};\n\nconst createCouponURL = exports.createCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/coupon/create';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getCoupon\n * url: getCouponURL\n * method: getCoupon_TYPE\n * raw_url: getCoupon_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param couponName - Informations about the coupon\n * @param name - \n */\n\n\nconst getCoupon = exports.getCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/coupon/by-name/{name}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{couponName}', `${parameters['couponName']}`);\n\n  if (parameters['couponName'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: couponName'));\n  }\n\n  path = path.replace('{name}', `${parameters['name']}`);\n\n  if (parameters['name'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: name'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getCoupon_RAW_URL = exports.getCoupon_RAW_URL = function () {\n  return '/api/coupon/by-name/{name}';\n};\n\nconst getCoupon_TYPE = exports.getCoupon_TYPE = function () {\n  return 'get';\n};\n\nconst getCouponURL = exports.getCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/coupon/by-name/{name}';\n  path = path.replace('{couponName}', `${parameters['couponName']}`);\n  path = path.replace('{name}', `${parameters['name']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: useCoupon\n * url: useCouponURL\n * method: useCoupon_TYPE\n * raw_url: useCoupon_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param couponName - Decrement countMax of the couponName by one.\n */\n\n\nconst useCoupon = exports.useCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/coupon/{couponName}/use';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{couponName}', `${parameters['couponName']}`);\n\n  if (parameters['couponName'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: couponName'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst useCoupon_RAW_URL = exports.useCoupon_RAW_URL = function () {\n  return '/api/coupon/{couponName}/use';\n};\n\nconst useCoupon_TYPE = exports.useCoupon_TYPE = function () {\n  return 'post';\n};\n\nconst useCouponURL = exports.useCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/coupon/{couponName}/use';\n  path = path.replace('{couponName}', `${parameters['couponName']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addPaymentCard\n * url: addPaymentCardURL\n * method: addPaymentCard_TYPE\n * raw_url: addPaymentCard_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param card - JSON representation of the card.\n */\n\n\nconst addPaymentCard = exports.addPaymentCard = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/credit-card/card';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['card'] !== undefined) {\n    body = parameters['card'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addPaymentCard_RAW_URL = exports.addPaymentCard_RAW_URL = function () {\n  return '/api/credit-card/card';\n};\n\nconst addPaymentCard_TYPE = exports.addPaymentCard_TYPE = function () {\n  return 'post';\n};\n\nconst addPaymentCardURL = exports.addPaymentCardURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/credit-card/card';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removePaymentCard\n * url: removePaymentCardURL\n * method: removePaymentCard_TYPE\n * raw_url: removePaymentCard_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst removePaymentCard = exports.removePaymentCard = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/credit-card/card/{id}/delete';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removePaymentCard_RAW_URL = exports.removePaymentCard_RAW_URL = function () {\n  return '/api/credit-card/card/{id}/delete';\n};\n\nconst removePaymentCard_TYPE = exports.removePaymentCard_TYPE = function () {\n  return 'post';\n};\n\nconst removePaymentCardURL = exports.removePaymentCardURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/credit-card/card/{id}/delete';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPaymentCards\n * url: getPaymentCardsURL\n * method: getPaymentCards_TYPE\n * raw_url: getPaymentCards_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst getPaymentCards = exports.getPaymentCards = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/credit-card/customer/{id}/cards';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPaymentCards_RAW_URL = exports.getPaymentCards_RAW_URL = function () {\n  return '/api/credit-card/customer/{id}/cards';\n};\n\nconst getPaymentCards_TYPE = exports.getPaymentCards_TYPE = function () {\n  return 'get';\n};\n\nconst getPaymentCardsURL = exports.getPaymentCardsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/credit-card/customer/{id}/cards';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removeFavoriteMerchant\n * url: removeFavoriteMerchantURL\n * method: removeFavoriteMerchant_TYPE\n * raw_url: removeFavoriteMerchant_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param merchant - \n */\n\n\nconst removeFavoriteMerchant = exports.removeFavoriteMerchant = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/customer/favorites/merchant/{merchant}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removeFavoriteMerchant_RAW_URL = exports.removeFavoriteMerchant_RAW_URL = function () {\n  return '/api/customer/favorites/merchant/{merchant}';\n};\n\nconst removeFavoriteMerchant_TYPE = exports.removeFavoriteMerchant_TYPE = function () {\n  return 'post';\n};\n\nconst removeFavoriteMerchantURL = exports.removeFavoriteMerchantURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/customer/favorites/merchant/{merchant}';\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getFavoritesList\n * url: getFavoritesListURL\n * method: getFavoritesList_TYPE\n * raw_url: getFavoritesList_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getFavoritesList = exports.getFavoritesList = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/customer/favorites/merchants';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getFavoritesList_RAW_URL = exports.getFavoritesList_RAW_URL = function () {\n  return '/api/customer/favorites/merchants';\n};\n\nconst getFavoritesList_TYPE = exports.getFavoritesList_TYPE = function () {\n  return 'get';\n};\n\nconst getFavoritesListURL = exports.getFavoritesListURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/customer/favorites/merchants';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createCustomerAccount\n * url: createCustomerAccountURL\n * method: createCustomerAccount_TYPE\n * raw_url: createCustomerAccount_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param user - JSON representation of the user.\n */\n\n\nconst createCustomerAccount = exports.createCustomerAccount = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/customer/account/payment';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createCustomerAccount_RAW_URL = exports.createCustomerAccount_RAW_URL = function () {\n  return '/api/customer/account/payment';\n};\n\nconst createCustomerAccount_TYPE = exports.createCustomerAccount_TYPE = function () {\n  return 'post';\n};\n\nconst createCustomerAccountURL = exports.createCustomerAccountURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/customer/account/payment';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: saveInventoryItem\n * url: saveInventoryItemURL\n * method: saveInventoryItem_TYPE\n * raw_url: saveInventoryItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param item - JSON representation of the item.\n */\n\n\nconst saveInventoryItem = exports.saveInventoryItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/inventory/items';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst saveInventoryItem_RAW_URL = exports.saveInventoryItem_RAW_URL = function () {\n  return '/api/inventory/items';\n};\n\nconst saveInventoryItem_TYPE = exports.saveInventoryItem_TYPE = function () {\n  return 'post';\n};\n\nconst saveInventoryItemURL = exports.saveInventoryItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/inventory/items';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removeInventoryItem\n * url: removeInventoryItemURL\n * method: removeInventoryItem_TYPE\n * raw_url: removeInventoryItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst removeInventoryItem = exports.removeInventoryItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/inventory/items/{id}/delete';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removeInventoryItem_RAW_URL = exports.removeInventoryItem_RAW_URL = function () {\n  return '/api/inventory/items/{id}/delete';\n};\n\nconst removeInventoryItem_TYPE = exports.removeInventoryItem_TYPE = function () {\n  return 'post';\n};\n\nconst removeInventoryItemURL = exports.removeInventoryItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/inventory/items/{id}/delete';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getInventoryItemsCount\n * url: getInventoryItemsCountURL\n * method: getInventoryItemsCount_TYPE\n * raw_url: getInventoryItemsCount_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getInventoryItemsCount = exports.getInventoryItemsCount = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/inventory/items/count';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getInventoryItemsCount_RAW_URL = exports.getInventoryItemsCount_RAW_URL = function () {\n  return '/api/inventory/items/count';\n};\n\nconst getInventoryItemsCount_TYPE = exports.getInventoryItemsCount_TYPE = function () {\n  return 'get';\n};\n\nconst getInventoryItemsCountURL = exports.getInventoryItemsCountURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/inventory/items/count';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getInventoryCategory\n * url: getInventoryCategoryURL\n * method: getInventoryCategory_TYPE\n * raw_url: getInventoryCategory_RAW_URL\n * @param merchant - \n * @param category - \n */\n\n\nconst getInventoryCategory = exports.getInventoryCategory = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/inventory/{merchant}/category/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getInventoryCategory_RAW_URL = exports.getInventoryCategory_RAW_URL = function () {\n  return '/api/inventory/{merchant}/category/{category}';\n};\n\nconst getInventoryCategory_TYPE = exports.getInventoryCategory_TYPE = function () {\n  return 'get';\n};\n\nconst getInventoryCategoryURL = exports.getInventoryCategoryURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/inventory/{merchant}/category/{category}';\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getInventoryItems\n * url: getInventoryItemsURL\n * method: getInventoryItems_TYPE\n * raw_url: getInventoryItems_RAW_URL\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n * @param merchant - \n * @param category - \n */\n\n\nconst getInventoryItems = exports.getInventoryItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/inventory/{merchant}/items/list/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getInventoryItems_RAW_URL = exports.getInventoryItems_RAW_URL = function () {\n  return '/api/inventory/{merchant}/items/list/{category}';\n};\n\nconst getInventoryItems_TYPE = exports.getInventoryItems_TYPE = function () {\n  return 'get';\n};\n\nconst getInventoryItemsURL = exports.getInventoryItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/inventory/{merchant}/items/list/{category}';\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: saveMarketItem\n * url: saveMarketItemURL\n * method: saveMarketItem_TYPE\n * raw_url: saveMarketItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param item - JSON representation of the market item to be created.\n */\n\n\nconst saveMarketItem = exports.saveMarketItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/save';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst saveMarketItem_RAW_URL = exports.saveMarketItem_RAW_URL = function () {\n  return '/api/market-item/save';\n};\n\nconst saveMarketItem_TYPE = exports.saveMarketItem_TYPE = function () {\n  return 'post';\n};\n\nconst saveMarketItemURL = exports.saveMarketItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/save';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItemById\n * url: getMarketItemByIdURL\n * method: getMarketItemById_TYPE\n * raw_url: getMarketItemById_RAW_URL\n * @param id - \n */\n\n\nconst getMarketItemById = exports.getMarketItemById = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/by-id/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItemById_RAW_URL = exports.getMarketItemById_RAW_URL = function () {\n  return '/api/market-item/by-id/{id}';\n};\n\nconst getMarketItemById_TYPE = exports.getMarketItemById_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemByIdURL = exports.getMarketItemByIdURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/by-id/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItemBySlug\n * url: getMarketItemBySlugURL\n * method: getMarketItemBySlug_TYPE\n * raw_url: getMarketItemBySlug_RAW_URL\n * @param slug - \n */\n\n\nconst getMarketItemBySlug = exports.getMarketItemBySlug = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/by-slug/{slug}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{slug}', `${parameters['slug']}`);\n\n  if (parameters['slug'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: slug'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItemBySlug_RAW_URL = exports.getMarketItemBySlug_RAW_URL = function () {\n  return '/api/market-item/by-slug/{slug}';\n};\n\nconst getMarketItemBySlug_TYPE = exports.getMarketItemBySlug_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemBySlugURL = exports.getMarketItemBySlugURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/by-slug/{slug}';\n  path = path.replace('{slug}', `${parameters['slug']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: acceptMarketItem\n * url: acceptMarketItemURL\n * method: acceptMarketItem_TYPE\n * raw_url: acceptMarketItem_RAW_URL\n * @param id - \n */\n\n\nconst acceptMarketItem = exports.acceptMarketItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/{id}/accept';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst acceptMarketItem_RAW_URL = exports.acceptMarketItem_RAW_URL = function () {\n  return '/api/market-item/{id}/accept';\n};\n\nconst acceptMarketItem_TYPE = exports.acceptMarketItem_TYPE = function () {\n  return 'post';\n};\n\nconst acceptMarketItemURL = exports.acceptMarketItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/{id}/accept';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: rejectMarketItem\n * url: rejectMarketItemURL\n * method: rejectMarketItem_TYPE\n * raw_url: rejectMarketItem_RAW_URL\n * @param id - \n */\n\n\nconst rejectMarketItem = exports.rejectMarketItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/{id}/reject';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst rejectMarketItem_RAW_URL = exports.rejectMarketItem_RAW_URL = function () {\n  return '/api/market-item/{id}/reject';\n};\n\nconst rejectMarketItem_TYPE = exports.rejectMarketItem_TYPE = function () {\n  return 'post';\n};\n\nconst rejectMarketItemURL = exports.rejectMarketItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/{id}/reject';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: deactivateMarketItem\n * url: deactivateMarketItemURL\n * method: deactivateMarketItem_TYPE\n * raw_url: deactivateMarketItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst deactivateMarketItem = exports.deactivateMarketItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/deactivate/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst deactivateMarketItem_RAW_URL = exports.deactivateMarketItem_RAW_URL = function () {\n  return '/api/market-item/deactivate/{id}';\n};\n\nconst deactivateMarketItem_TYPE = exports.deactivateMarketItem_TYPE = function () {\n  return 'get';\n};\n\nconst deactivateMarketItemURL = exports.deactivateMarketItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/deactivate/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: activateMarketItem\n * url: activateMarketItemURL\n * method: activateMarketItem_TYPE\n * raw_url: activateMarketItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst activateMarketItem = exports.activateMarketItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/activate/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst activateMarketItem_RAW_URL = exports.activateMarketItem_RAW_URL = function () {\n  return '/api/market-item/activate/{id}';\n};\n\nconst activateMarketItem_TYPE = exports.activateMarketItem_TYPE = function () {\n  return 'get';\n};\n\nconst activateMarketItemURL = exports.activateMarketItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/activate/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPendingMarketItems\n * url: getPendingMarketItemsURL\n * method: getPendingMarketItems_TYPE\n * raw_url: getPendingMarketItems_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getPendingMarketItems = exports.getPendingMarketItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/pending';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPendingMarketItems_RAW_URL = exports.getPendingMarketItems_RAW_URL = function () {\n  return '/api/market-item/pending';\n};\n\nconst getPendingMarketItems_TYPE = exports.getPendingMarketItems_TYPE = function () {\n  return 'get';\n};\n\nconst getPendingMarketItemsURL = exports.getPendingMarketItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/pending';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getAllMarketItems\n * url: getAllMarketItemsURL\n * method: getAllMarketItems_TYPE\n * raw_url: getAllMarketItems_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n * @param category - \n */\n\n\nconst getAllMarketItems = exports.getAllMarketItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/admin/list/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getAllMarketItems_RAW_URL = exports.getAllMarketItems_RAW_URL = function () {\n  return '/api/market-item/admin/list/{category}';\n};\n\nconst getAllMarketItems_TYPE = exports.getAllMarketItems_TYPE = function () {\n  return 'get';\n};\n\nconst getAllMarketItemsURL = exports.getAllMarketItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/admin/list/{category}';\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItems\n * url: getMarketItemsURL\n * method: getMarketItems_TYPE\n * raw_url: getMarketItems_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n * @param exclude - Ids of items that must excluded from the results.\n * @param category - \n */\n\n\nconst getMarketItems = exports.getMarketItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item/list/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  if (parameters['exclude'] !== undefined) {\n    queryParameters['exclude'] = parameters['exclude'];\n  }\n\n  if (parameters['exclude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: exclude'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItems_RAW_URL = exports.getMarketItems_RAW_URL = function () {\n  return '/api/market-item/list/{category}';\n};\n\nconst getMarketItems_TYPE = exports.getMarketItems_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemsURL = exports.getMarketItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item/list/{category}';\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  if (parameters['exclude'] !== undefined) {\n    queryParameters['exclude'] = parameters['exclude'];\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addMarketItemAttribute\n * url: addMarketItemAttributeURL\n * method: addMarketItemAttribute_TYPE\n * raw_url: addMarketItemAttribute_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param attribute - JSON representation of the attribute to be created.\n */\n\n\nconst addMarketItemAttribute = exports.addMarketItemAttribute = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-attribute/attributes/save';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['attribute'] !== undefined) {\n    body = parameters['attribute'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addMarketItemAttribute_RAW_URL = exports.addMarketItemAttribute_RAW_URL = function () {\n  return '/api/market-item-attribute/attributes/save';\n};\n\nconst addMarketItemAttribute_TYPE = exports.addMarketItemAttribute_TYPE = function () {\n  return 'post';\n};\n\nconst addMarketItemAttributeURL = exports.addMarketItemAttributeURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-attribute/attributes/save';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItemAttributes\n * url: getMarketItemAttributesURL\n * method: getMarketItemAttributes_TYPE\n * raw_url: getMarketItemAttributes_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getMarketItemAttributes = exports.getMarketItemAttributes = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-attribute/attributes/list';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItemAttributes_RAW_URL = exports.getMarketItemAttributes_RAW_URL = function () {\n  return '/api/market-item-attribute/attributes/list';\n};\n\nconst getMarketItemAttributes_TYPE = exports.getMarketItemAttributes_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemAttributesURL = exports.getMarketItemAttributesURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-attribute/attributes/list';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addMarketItemCategory\n * url: addMarketItemCategoryURL\n * method: addMarketItemCategory_TYPE\n * raw_url: addMarketItemCategory_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param category - JSON representation of the category to be created.\n */\n\n\nconst addMarketItemCategory = exports.addMarketItemCategory = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['category'] !== undefined) {\n    body = parameters['category'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addMarketItemCategory_RAW_URL = exports.addMarketItemCategory_RAW_URL = function () {\n  return '/api/market-item-category';\n};\n\nconst addMarketItemCategory_TYPE = exports.addMarketItemCategory_TYPE = function () {\n  return 'post';\n};\n\nconst addMarketItemCategoryURL = exports.addMarketItemCategoryURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItemCategories\n * url: getMarketItemCategoriesURL\n * method: getMarketItemCategories_TYPE\n * raw_url: getMarketItemCategories_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getMarketItemCategories = exports.getMarketItemCategories = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItemCategories_RAW_URL = exports.getMarketItemCategories_RAW_URL = function () {\n  return '/api/market-item-category';\n};\n\nconst getMarketItemCategories_TYPE = exports.getMarketItemCategories_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemCategoriesURL = exports.getMarketItemCategoriesURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getRootMarketItemCategories\n * url: getRootMarketItemCategoriesURL\n * method: getRootMarketItemCategories_TYPE\n * raw_url: getRootMarketItemCategories_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getRootMarketItemCategories = exports.getRootMarketItemCategories = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category/root';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getRootMarketItemCategories_RAW_URL = exports.getRootMarketItemCategories_RAW_URL = function () {\n  return '/api/market-item-category/root';\n};\n\nconst getRootMarketItemCategories_TYPE = exports.getRootMarketItemCategories_TYPE = function () {\n  return 'get';\n};\n\nconst getRootMarketItemCategoriesURL = exports.getRootMarketItemCategoriesURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category/root';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMarketItemCategoryBySlug\n * url: getMarketItemCategoryBySlugURL\n * method: getMarketItemCategoryBySlug_TYPE\n * raw_url: getMarketItemCategoryBySlug_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param category - \n */\n\n\nconst getMarketItemCategoryBySlug = exports.getMarketItemCategoryBySlug = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category/categories/by-slug/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMarketItemCategoryBySlug_RAW_URL = exports.getMarketItemCategoryBySlug_RAW_URL = function () {\n  return '/api/market-item-category/categories/by-slug/{category}';\n};\n\nconst getMarketItemCategoryBySlug_TYPE = exports.getMarketItemCategoryBySlug_TYPE = function () {\n  return 'get';\n};\n\nconst getMarketItemCategoryBySlugURL = exports.getMarketItemCategoryBySlugURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category/categories/by-slug/{category}';\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: deactivateMarketItemCategory\n * url: deactivateMarketItemCategoryURL\n * method: deactivateMarketItemCategory_TYPE\n * raw_url: deactivateMarketItemCategory_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param categoryId - \n */\n\n\nconst deactivateMarketItemCategory = exports.deactivateMarketItemCategory = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category/categories/{categoryId}/deactivate';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{categoryId}', `${parameters['categoryId']}`);\n\n  if (parameters['categoryId'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: categoryId'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst deactivateMarketItemCategory_RAW_URL = exports.deactivateMarketItemCategory_RAW_URL = function () {\n  return '/api/market-item-category/categories/{categoryId}/deactivate';\n};\n\nconst deactivateMarketItemCategory_TYPE = exports.deactivateMarketItemCategory_TYPE = function () {\n  return 'post';\n};\n\nconst deactivateMarketItemCategoryURL = exports.deactivateMarketItemCategoryURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category/categories/{categoryId}/deactivate';\n  path = path.replace('{categoryId}', `${parameters['categoryId']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: activateMarketItemCategory\n * url: activateMarketItemCategoryURL\n * method: activateMarketItemCategory_TYPE\n * raw_url: activateMarketItemCategory_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param categoryId - \n */\n\n\nconst activateMarketItemCategory = exports.activateMarketItemCategory = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/market-item-category/categories/{categoryId}/activate';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{categoryId}', `${parameters['categoryId']}`);\n\n  if (parameters['categoryId'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: categoryId'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst activateMarketItemCategory_RAW_URL = exports.activateMarketItemCategory_RAW_URL = function () {\n  return '/api/market-item-category/categories/{categoryId}/activate';\n};\n\nconst activateMarketItemCategory_TYPE = exports.activateMarketItemCategory_TYPE = function () {\n  return 'post';\n};\n\nconst activateMarketItemCategoryURL = exports.activateMarketItemCategoryURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/market-item-category/categories/{categoryId}/activate';\n  path = path.replace('{categoryId}', `${parameters['categoryId']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMerchantById\n * url: getMerchantByIdURL\n * method: getMerchantById_TYPE\n * raw_url: getMerchantById_RAW_URL\n * @param id - \n */\n\n\nconst getMerchantById = exports.getMerchantById = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/merchant/{id}/details';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMerchantById_RAW_URL = exports.getMerchantById_RAW_URL = function () {\n  return '/api/merchant/{id}/details';\n};\n\nconst getMerchantById_TYPE = exports.getMerchantById_TYPE = function () {\n  return 'get';\n};\n\nconst getMerchantByIdURL = exports.getMerchantByIdURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/merchant/{id}/details';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMerchantByUsername\n * url: getMerchantByUsernameURL\n * method: getMerchantByUsername_TYPE\n * raw_url: getMerchantByUsername_RAW_URL\n * @param username - \n */\n\n\nconst getMerchantByUsername = exports.getMerchantByUsername = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/merchant/by-username/{username}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{username}', `${parameters['username']}`);\n\n  if (parameters['username'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: username'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMerchantByUsername_RAW_URL = exports.getMerchantByUsername_RAW_URL = function () {\n  return '/api/merchant/by-username/{username}';\n};\n\nconst getMerchantByUsername_TYPE = exports.getMerchantByUsername_TYPE = function () {\n  return 'get';\n};\n\nconst getMerchantByUsernameURL = exports.getMerchantByUsernameURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/merchant/by-username/{username}';\n  path = path.replace('{username}', `${parameters['username']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createMerchant\n * url: createMerchantURL\n * method: createMerchant_TYPE\n * raw_url: createMerchant_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param user - JSON representation of the user.\n */\n\n\nconst createMerchant = exports.createMerchant = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/merchant/account/payment';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createMerchant_RAW_URL = exports.createMerchant_RAW_URL = function () {\n  return '/api/merchant/account/payment';\n};\n\nconst createMerchant_TYPE = exports.createMerchant_TYPE = function () {\n  return 'post';\n};\n\nconst createMerchantURL = exports.createMerchantURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/merchant/account/payment';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getNearbyMerchants\n * url: getNearbyMerchantsURL\n * method: getNearbyMerchants_TYPE\n * raw_url: getNearbyMerchants_RAW_URL\n * @param latitude - Geolocation latitude value.\n * @param longitude - Geolocation longitude value.\n * @param radius - Maximum radius to search for (km).\n * @param keyword - Geolocation keyword value.\n */\n\n\nconst getNearbyMerchants = exports.getNearbyMerchants = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/merchant/nearby';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['latitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: latitude'));\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['longitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: longitude'));\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getNearbyMerchants_RAW_URL = exports.getNearbyMerchants_RAW_URL = function () {\n  return '/api/merchant/nearby';\n};\n\nconst getNearbyMerchants_TYPE = exports.getNearbyMerchants_TYPE = function () {\n  return 'get';\n};\n\nconst getNearbyMerchantsURL = exports.getNearbyMerchantsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/merchant/nearby';\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getNearbyMerchantsByService\n * url: getNearbyMerchantsByServiceURL\n * method: getNearbyMerchantsByService_TYPE\n * raw_url: getNearbyMerchantsByService_RAW_URL\n * @param service - Requested service name.\n * @param latitude - Geolocation latitude value.\n * @param longitude - Geolocation longitude value.\n * @param keyword - Geolocation keyword value.\n * @param radius - Maximum radius to search for (km).\n */\n\n\nconst getNearbyMerchantsByService = exports.getNearbyMerchantsByService = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/merchant/nearby/{service}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{service}', `${parameters['service']}`);\n\n  if (parameters['service'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: service'));\n  }\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['latitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: latitude'));\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['longitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: longitude'));\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getNearbyMerchantsByService_RAW_URL = exports.getNearbyMerchantsByService_RAW_URL = function () {\n  return '/api/merchant/nearby/{service}';\n};\n\nconst getNearbyMerchantsByService_TYPE = exports.getNearbyMerchantsByService_TYPE = function () {\n  return 'get';\n};\n\nconst getNearbyMerchantsByServiceURL = exports.getNearbyMerchantsByServiceURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/merchant/nearby/{service}';\n  path = path.replace('{service}', `${parameters['service']}`);\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createOrder\n * url: createOrderURL\n * method: createOrder_TYPE\n * raw_url: createOrder_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param order - JSON representation of the order to be created.\n */\n\n\nconst createOrder = exports.createOrder = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['order'] !== undefined) {\n    body = parameters['order'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createOrder_RAW_URL = exports.createOrder_RAW_URL = function () {\n  return '/api/order';\n};\n\nconst createOrder_TYPE = exports.createOrder_TYPE = function () {\n  return 'post';\n};\n\nconst createOrderURL = exports.createOrderURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getOrders\n * url: getOrdersURL\n * method: getOrders_TYPE\n * raw_url: getOrders_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param status - Filtering status.\n */\n\n\nconst getOrders = exports.getOrders = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['status'] !== undefined) {\n    queryParameters['status'] = parameters['status'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getOrders_RAW_URL = exports.getOrders_RAW_URL = function () {\n  return '/api/order';\n};\n\nconst getOrders_TYPE = exports.getOrders_TYPE = function () {\n  return 'get';\n};\n\nconst getOrdersURL = exports.getOrdersURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order';\n\n  if (parameters['status'] !== undefined) {\n    queryParameters['status'] = parameters['status'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getOrdersByPeriod\n * url: getOrdersByPeriodURL\n * method: getOrdersByPeriod_TYPE\n * raw_url: getOrdersByPeriod_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param status - Filtering status.\n * @param startDate - Filtering start date.\n * @param endDate - Filtering end date.\n */\n\n\nconst getOrdersByPeriod = exports.getOrdersByPeriod = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/between-dates';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['status'] !== undefined) {\n    queryParameters['status'] = parameters['status'];\n  }\n\n  if (parameters['startDate'] !== undefined) {\n    queryParameters['startDate'] = parameters['startDate'];\n  }\n\n  if (parameters['endDate'] !== undefined) {\n    queryParameters['endDate'] = parameters['endDate'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getOrdersByPeriod_RAW_URL = exports.getOrdersByPeriod_RAW_URL = function () {\n  return '/api/order/between-dates';\n};\n\nconst getOrdersByPeriod_TYPE = exports.getOrdersByPeriod_TYPE = function () {\n  return 'get';\n};\n\nconst getOrdersByPeriodURL = exports.getOrdersByPeriodURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/between-dates';\n\n  if (parameters['status'] !== undefined) {\n    queryParameters['status'] = parameters['status'];\n  }\n\n  if (parameters['startDate'] !== undefined) {\n    queryParameters['startDate'] = parameters['startDate'];\n  }\n\n  if (parameters['endDate'] !== undefined) {\n    queryParameters['endDate'] = parameters['endDate'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getOrder\n * url: getOrderURL\n * method: getOrder_TYPE\n * raw_url: getOrder_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst getOrder = exports.getOrder = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getOrder_RAW_URL = exports.getOrder_RAW_URL = function () {\n  return '/api/order/{id}';\n};\n\nconst getOrder_TYPE = exports.getOrder_TYPE = function () {\n  return 'get';\n};\n\nconst getOrderURL = exports.getOrderURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: acceptOrder\n * url: acceptOrderURL\n * method: acceptOrder_TYPE\n * raw_url: acceptOrder_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst acceptOrder = exports.acceptOrder = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/{id}/accept';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst acceptOrder_RAW_URL = exports.acceptOrder_RAW_URL = function () {\n  return '/api/order/{id}/accept';\n};\n\nconst acceptOrder_TYPE = exports.acceptOrder_TYPE = function () {\n  return 'post';\n};\n\nconst acceptOrderURL = exports.acceptOrderURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/{id}/accept';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: cancelOrder\n * url: cancelOrderURL\n * method: cancelOrder_TYPE\n * raw_url: cancelOrder_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst cancelOrder = exports.cancelOrder = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/{id}/cancel';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst cancelOrder_RAW_URL = exports.cancelOrder_RAW_URL = function () {\n  return '/api/order/{id}/cancel';\n};\n\nconst cancelOrder_TYPE = exports.cancelOrder_TYPE = function () {\n  return 'get';\n};\n\nconst cancelOrderURL = exports.cancelOrderURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/{id}/cancel';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: rateOrder\n * url: rateOrderURL\n * method: rateOrder_TYPE\n * raw_url: rateOrder_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n * @param rate - \n */\n\n\nconst rateOrder = exports.rateOrder = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/{id}/rate/{rate}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{rate}', `${parameters['rate']}`);\n\n  if (parameters['rate'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: rate'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst rateOrder_RAW_URL = exports.rateOrder_RAW_URL = function () {\n  return '/api/order/{id}/rate/{rate}';\n};\n\nconst rateOrder_TYPE = exports.rateOrder_TYPE = function () {\n  return 'post';\n};\n\nconst rateOrderURL = exports.rateOrderURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/{id}/rate/{rate}';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{rate}', `${parameters['rate']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getReceivingModes\n * url: getReceivingModesURL\n * method: getReceivingModes_TYPE\n * raw_url: getReceivingModes_RAW_URL\n */\n\n\nconst getReceivingModes = exports.getReceivingModes = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/order/receiving-modes';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getReceivingModes_RAW_URL = exports.getReceivingModes_RAW_URL = function () {\n  return '/api/order/receiving-modes';\n};\n\nconst getReceivingModes_TYPE = exports.getReceivingModes_TYPE = function () {\n  return 'get';\n};\n\nconst getReceivingModesURL = exports.getReceivingModesURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/order/receiving-modes';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPaymentModes\n * url: getPaymentModesURL\n * method: getPaymentModes_TYPE\n * raw_url: getPaymentModes_RAW_URL\n */\n\n\nconst getPaymentModes = exports.getPaymentModes = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/payment/modes';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPaymentModes_RAW_URL = exports.getPaymentModes_RAW_URL = function () {\n  return '/api/payment/modes';\n};\n\nconst getPaymentModes_TYPE = exports.getPaymentModes_TYPE = function () {\n  return 'get';\n};\n\nconst getPaymentModesURL = exports.getPaymentModesURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/payment/modes';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPromotions\n * url: getPromotionsURL\n * method: getPromotions_TYPE\n * raw_url: getPromotions_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getPromotions = exports.getPromotions = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPromotions_RAW_URL = exports.getPromotions_RAW_URL = function () {\n  return '/api/promotion';\n};\n\nconst getPromotions_TYPE = exports.getPromotions_TYPE = function () {\n  return 'get';\n};\n\nconst getPromotionsURL = exports.getPromotionsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: savePromotion\n * url: savePromotionURL\n * method: savePromotion_TYPE\n * raw_url: savePromotion_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param promotion - JSON representation of the promotion to be created.\n */\n\n\nconst savePromotion = exports.savePromotion = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['promotion'] !== undefined) {\n    body = parameters['promotion'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst savePromotion_RAW_URL = exports.savePromotion_RAW_URL = function () {\n  return '/api/promotion';\n};\n\nconst savePromotion_TYPE = exports.savePromotion_TYPE = function () {\n  return 'post';\n};\n\nconst savePromotionURL = exports.savePromotionURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPromotion\n * url: getPromotionURL\n * method: getPromotion_TYPE\n * raw_url: getPromotion_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n * @param merchant - \n */\n\n\nconst getPromotion = exports.getPromotion = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion/{id}/{merchant}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPromotion_RAW_URL = exports.getPromotion_RAW_URL = function () {\n  return '/api/promotion/{id}/{merchant}';\n};\n\nconst getPromotion_TYPE = exports.getPromotion_TYPE = function () {\n  return 'get';\n};\n\nconst getPromotionURL = exports.getPromotionURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion/{id}/{merchant}';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPromotionCategory\n * url: getPromotionCategoryURL\n * method: getPromotionCategory_TYPE\n * raw_url: getPromotionCategory_RAW_URL\n * @param id - \n * @param merchant - \n * @param category - \n */\n\n\nconst getPromotionCategory = exports.getPromotionCategory = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion/{id}/{merchant}/{category}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPromotionCategory_RAW_URL = exports.getPromotionCategory_RAW_URL = function () {\n  return '/api/promotion/{id}/{merchant}/{category}';\n};\n\nconst getPromotionCategory_TYPE = exports.getPromotionCategory_TYPE = function () {\n  return 'get';\n};\n\nconst getPromotionCategoryURL = exports.getPromotionCategoryURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion/{id}/{merchant}/{category}';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPromotionItems\n * url: getPromotionItemsURL\n * method: getPromotionItems_TYPE\n * raw_url: getPromotionItems_RAW_URL\n * @param id - \n * @param merchant - \n * @param category - \n */\n\n\nconst getPromotionItems = exports.getPromotionItems = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion/{id}/{merchant}/{category}/items/list';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n\n  if (parameters['merchant'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: merchant'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPromotionItems_RAW_URL = exports.getPromotionItems_RAW_URL = function () {\n  return '/api/promotion/{id}/{merchant}/{category}/items/list';\n};\n\nconst getPromotionItems_TYPE = exports.getPromotionItems_TYPE = function () {\n  return 'get';\n};\n\nconst getPromotionItemsURL = exports.getPromotionItemsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion/{id}/{merchant}/{category}/items/list';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{merchant}', `${parameters['merchant']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addPromotionItem\n * url: addPromotionItemURL\n * method: addPromotionItem_TYPE\n * raw_url: addPromotionItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param item - JSON representation of the category to be created.\n * @param id - \n * @param category - \n */\n\n\nconst addPromotionItem = exports.addPromotionItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion/{id}/{category}/items/add';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addPromotionItem_RAW_URL = exports.addPromotionItem_RAW_URL = function () {\n  return '/api/promotion/{id}/{category}/items/add';\n};\n\nconst addPromotionItem_TYPE = exports.addPromotionItem_TYPE = function () {\n  return 'post';\n};\n\nconst addPromotionItemURL = exports.addPromotionItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion/{id}/{category}/items/add';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removePromotionItem\n * url: removePromotionItemURL\n * method: removePromotionItem_TYPE\n * raw_url: removePromotionItem_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param item - JSON representation of the category to be created.\n * @param id - \n * @param category - \n */\n\n\nconst removePromotionItem = exports.removePromotionItem = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/promotion/{id}/{category}/items/remove';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['item'] !== undefined) {\n    body = parameters['item'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters['category'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: category'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removePromotionItem_RAW_URL = exports.removePromotionItem_RAW_URL = function () {\n  return '/api/promotion/{id}/{category}/items/remove';\n};\n\nconst removePromotionItem_TYPE = exports.removePromotionItem_TYPE = function () {\n  return 'post';\n};\n\nconst removePromotionItemURL = exports.removePromotionItemURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/promotion/{id}/{category}/items/remove';\n  path = path.replace('{id}', `${parameters['id']}`);\n  path = path.replace('{category}', `${parameters['category']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: requestServiceProvisionNearby\n * url: requestServiceProvisionNearbyURL\n * method: requestServiceProvisionNearby_TYPE\n * raw_url: requestServiceProvisionNearby_RAW_URL\n * @param service - Requested service name (BathAtPetshop, Training, Dogwalker, etc.).\n * @param latitude - Geolocation latitude value.\n * @param longitude - Geolocation longitude value.\n * @param keyword - Geolocation keyword value.\n * @param radius - Maximum radius to search for (km).\n */\n\n\nconst requestServiceProvisionNearby = exports.requestServiceProvisionNearby = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/service-provision/request/{service}/nearby';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{service}', `${parameters['service']}`);\n\n  if (parameters['service'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: service'));\n  }\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['latitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: latitude'));\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['longitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: longitude'));\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst requestServiceProvisionNearby_RAW_URL = exports.requestServiceProvisionNearby_RAW_URL = function () {\n  return '/api/service-provision/request/{service}/nearby';\n};\n\nconst requestServiceProvisionNearby_TYPE = exports.requestServiceProvisionNearby_TYPE = function () {\n  return 'get';\n};\n\nconst requestServiceProvisionNearbyURL = exports.requestServiceProvisionNearbyURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/service-provision/request/{service}/nearby';\n  path = path.replace('{service}', `${parameters['service']}`);\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['keyword'] !== undefined) {\n    queryParameters['keyword'] = parameters['keyword'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getMerchantSchedule\n * url: getMerchantScheduleURL\n * method: getMerchantSchedule_TYPE\n * raw_url: getMerchantSchedule_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getMerchantSchedule = exports.getMerchantSchedule = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/service-provision/schedule';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getMerchantSchedule_RAW_URL = exports.getMerchantSchedule_RAW_URL = function () {\n  return '/api/service-provision/schedule';\n};\n\nconst getMerchantSchedule_TYPE = exports.getMerchantSchedule_TYPE = function () {\n  return 'get';\n};\n\nconst getMerchantScheduleURL = exports.getMerchantScheduleURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/service-provision/schedule';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: saveSubscriptionPlan\n * url: saveSubscriptionPlanURL\n * method: saveSubscriptionPlan_TYPE\n * raw_url: saveSubscriptionPlan_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param plan - JSON representation of the plan.\n */\n\n\nconst saveSubscriptionPlan = exports.saveSubscriptionPlan = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/plans';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['plan'] !== undefined) {\n    body = parameters['plan'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst saveSubscriptionPlan_RAW_URL = exports.saveSubscriptionPlan_RAW_URL = function () {\n  return '/api/subscription/subscription/plans';\n};\n\nconst saveSubscriptionPlan_TYPE = exports.saveSubscriptionPlan_TYPE = function () {\n  return 'post';\n};\n\nconst saveSubscriptionPlanURL = exports.saveSubscriptionPlanURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/plans';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getSubscriptionPlans\n * url: getSubscriptionPlansURL\n * method: getSubscriptionPlans_TYPE\n * raw_url: getSubscriptionPlans_RAW_URL\n */\n\n\nconst getSubscriptionPlans = exports.getSubscriptionPlans = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/plans';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getSubscriptionPlans_RAW_URL = exports.getSubscriptionPlans_RAW_URL = function () {\n  return '/api/subscription/subscription/plans';\n};\n\nconst getSubscriptionPlans_TYPE = exports.getSubscriptionPlans_TYPE = function () {\n  return 'get';\n};\n\nconst getSubscriptionPlansURL = exports.getSubscriptionPlansURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/plans';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: toggleSubscriptionPlan\n * url: toggleSubscriptionPlanURL\n * method: toggleSubscriptionPlan_TYPE\n * raw_url: toggleSubscriptionPlan_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param planId - \n */\n\n\nconst toggleSubscriptionPlan = exports.toggleSubscriptionPlan = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/plans/toggle/{planId}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{planId}', `${parameters['planId']}`);\n\n  if (parameters['planId'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: planId'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst toggleSubscriptionPlan_RAW_URL = exports.toggleSubscriptionPlan_RAW_URL = function () {\n  return '/api/subscription/subscription/plans/toggle/{planId}';\n};\n\nconst toggleSubscriptionPlan_TYPE = exports.toggleSubscriptionPlan_TYPE = function () {\n  return 'post';\n};\n\nconst toggleSubscriptionPlanURL = exports.toggleSubscriptionPlanURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/plans/toggle/{planId}';\n  path = path.replace('{planId}', `${parameters['planId']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: saveSubscriptionCoupon\n * url: saveSubscriptionCouponURL\n * method: saveSubscriptionCoupon_TYPE\n * raw_url: saveSubscriptionCoupon_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param coupon - JSON representation of the coupon.\n */\n\n\nconst saveSubscriptionCoupon = exports.saveSubscriptionCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/coupons';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['coupon'] !== undefined) {\n    body = parameters['coupon'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst saveSubscriptionCoupon_RAW_URL = exports.saveSubscriptionCoupon_RAW_URL = function () {\n  return '/api/subscription/subscription/coupons';\n};\n\nconst saveSubscriptionCoupon_TYPE = exports.saveSubscriptionCoupon_TYPE = function () {\n  return 'post';\n};\n\nconst saveSubscriptionCouponURL = exports.saveSubscriptionCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/coupons';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getSubscriptionCoupons\n * url: getSubscriptionCouponsURL\n * method: getSubscriptionCoupons_TYPE\n * raw_url: getSubscriptionCoupons_RAW_URL\n */\n\n\nconst getSubscriptionCoupons = exports.getSubscriptionCoupons = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/coupons';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getSubscriptionCoupons_RAW_URL = exports.getSubscriptionCoupons_RAW_URL = function () {\n  return '/api/subscription/subscription/coupons';\n};\n\nconst getSubscriptionCoupons_TYPE = exports.getSubscriptionCoupons_TYPE = function () {\n  return 'get';\n};\n\nconst getSubscriptionCouponsURL = exports.getSubscriptionCouponsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/coupons';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: toggleSubscriptionCoupon\n * url: toggleSubscriptionCouponURL\n * method: toggleSubscriptionCoupon_TYPE\n * raw_url: toggleSubscriptionCoupon_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param couponId - \n */\n\n\nconst toggleSubscriptionCoupon = exports.toggleSubscriptionCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/coupons/toggle/{couponId}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{couponId}', `${parameters['couponId']}`);\n\n  if (parameters['couponId'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: couponId'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst toggleSubscriptionCoupon_RAW_URL = exports.toggleSubscriptionCoupon_RAW_URL = function () {\n  return '/api/subscription/subscription/coupons/toggle/{couponId}';\n};\n\nconst toggleSubscriptionCoupon_TYPE = exports.toggleSubscriptionCoupon_TYPE = function () {\n  return 'post';\n};\n\nconst toggleSubscriptionCouponURL = exports.toggleSubscriptionCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/coupons/toggle/{couponId}';\n  path = path.replace('{couponId}', `${parameters['couponId']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getSubscriptionCoupon\n * url: getSubscriptionCouponURL\n * method: getSubscriptionCoupon_TYPE\n * raw_url: getSubscriptionCoupon_RAW_URL\n * @param id - \n */\n\n\nconst getSubscriptionCoupon = exports.getSubscriptionCoupon = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/coupons/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getSubscriptionCoupon_RAW_URL = exports.getSubscriptionCoupon_RAW_URL = function () {\n  return '/api/subscription/subscription/coupons/{id}';\n};\n\nconst getSubscriptionCoupon_TYPE = exports.getSubscriptionCoupon_TYPE = function () {\n  return 'get';\n};\n\nconst getSubscriptionCouponURL = exports.getSubscriptionCouponURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/coupons/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addSubscription\n * url: addSubscriptionURL\n * method: addSubscription_TYPE\n * raw_url: addSubscription_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param subscription - JSON representation of the subscription.\n */\n\n\nconst addSubscription = exports.addSubscription = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['subscription'] !== undefined) {\n    body = parameters['subscription'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addSubscription_RAW_URL = exports.addSubscription_RAW_URL = function () {\n  return '/api/subscription/subscription';\n};\n\nconst addSubscription_TYPE = exports.addSubscription_TYPE = function () {\n  return 'post';\n};\n\nconst addSubscriptionURL = exports.addSubscriptionURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: cancelSubscription\n * url: cancelSubscriptionURL\n * method: cancelSubscription_TYPE\n * raw_url: cancelSubscription_RAW_URL\n * @param id - \n */\n\n\nconst cancelSubscription = exports.cancelSubscription = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/subscription/subscription/{id}/delete';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst cancelSubscription_RAW_URL = exports.cancelSubscription_RAW_URL = function () {\n  return '/api/subscription/subscription/{id}/delete';\n};\n\nconst cancelSubscription_TYPE = exports.cancelSubscription_TYPE = function () {\n  return 'post';\n};\n\nconst cancelSubscriptionURL = exports.cancelSubscriptionURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/subscription/subscription/{id}/delete';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getAvailabeWithdrawal\n * url: getAvailabeWithdrawalURL\n * method: getAvailabeWithdrawal_TYPE\n * raw_url: getAvailabeWithdrawal_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getAvailabeWithdrawal = exports.getAvailabeWithdrawal = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/transfers/withdrawal/available';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getAvailabeWithdrawal_RAW_URL = exports.getAvailabeWithdrawal_RAW_URL = function () {\n  return '/api/transfers/withdrawal/available';\n};\n\nconst getAvailabeWithdrawal_TYPE = exports.getAvailabeWithdrawal_TYPE = function () {\n  return 'get';\n};\n\nconst getAvailabeWithdrawalURL = exports.getAvailabeWithdrawalURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/transfers/withdrawal/available';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: transferWithdrawal\n * url: transferWithdrawalURL\n * method: transferWithdrawal_TYPE\n * raw_url: transferWithdrawal_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param account - JSON representation of the account.\n * @param amount - \n */\n\n\nconst transferWithdrawal = exports.transferWithdrawal = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/transfers/withdrawal/transfer/{amount}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['account'] !== undefined) {\n    body = parameters['account'];\n  }\n\n  path = path.replace('{amount}', `${parameters['amount']}`);\n\n  if (parameters['amount'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: amount'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst transferWithdrawal_RAW_URL = exports.transferWithdrawal_RAW_URL = function () {\n  return '/api/transfers/withdrawal/transfer/{amount}';\n};\n\nconst transferWithdrawal_TYPE = exports.transferWithdrawal_TYPE = function () {\n  return 'post';\n};\n\nconst transferWithdrawalURL = exports.transferWithdrawalURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/transfers/withdrawal/transfer/{amount}';\n  path = path.replace('{amount}', `${parameters['amount']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: sendNotification\n * url: sendNotificationURL\n * method: sendNotification_TYPE\n * raw_url: sendNotification_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst sendNotification = exports.sendNotification = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/notification/send';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst sendNotification_RAW_URL = exports.sendNotification_RAW_URL = function () {\n  return '/api/notification/send';\n};\n\nconst sendNotification_TYPE = exports.sendNotification_TYPE = function () {\n  return 'post';\n};\n\nconst sendNotificationURL = exports.sendNotificationURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/notification/send';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getNotifications\n * url: getNotificationsURL\n * method: getNotifications_TYPE\n * raw_url: getNotifications_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getNotifications = exports.getNotifications = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/notification';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getNotifications_RAW_URL = exports.getNotifications_RAW_URL = function () {\n  return '/api/notification';\n};\n\nconst getNotifications_TYPE = exports.getNotifications_TYPE = function () {\n  return 'get';\n};\n\nconst getNotificationsURL = exports.getNotificationsURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/notification';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getNotification\n * url: getNotificationURL\n * method: getNotification_TYPE\n * raw_url: getNotification_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst getNotification = exports.getNotification = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/notification/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getNotification_RAW_URL = exports.getNotification_RAW_URL = function () {\n  return '/api/notification/{id}';\n};\n\nconst getNotification_TYPE = exports.getNotification_TYPE = function () {\n  return 'get';\n};\n\nconst getNotificationURL = exports.getNotificationURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/notification/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: accessWithFacebook\n * url: accessWithFacebookURL\n * method: accessWithFacebook_TYPE\n * raw_url: accessWithFacebook_RAW_URL\n * @param accessToken - User access token returned from Facebook oauth.\n */\n\n\nconst accessWithFacebook = exports.accessWithFacebook = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/oauth/access/facebook';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['accessToken'] !== undefined) {\n    queryParameters['access_token'] = parameters['accessToken'];\n  }\n\n  if (parameters['accessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: accessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst accessWithFacebook_RAW_URL = exports.accessWithFacebook_RAW_URL = function () {\n  return '/api/oauth/access/facebook';\n};\n\nconst accessWithFacebook_TYPE = exports.accessWithFacebook_TYPE = function () {\n  return 'post';\n};\n\nconst accessWithFacebookURL = exports.accessWithFacebookURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/oauth/access/facebook';\n\n  if (parameters['accessToken'] !== undefined) {\n    queryParameters['access_token'] = parameters['accessToken'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPetsByUser\n * url: getPetsByUserURL\n * method: getPetsByUser_TYPE\n * raw_url: getPetsByUser_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getPetsByUser = exports.getPetsByUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/by-user';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPetsByUser_RAW_URL = exports.getPetsByUser_RAW_URL = function () {\n  return '/api/pet/by-user';\n};\n\nconst getPetsByUser_TYPE = exports.getPetsByUser_TYPE = function () {\n  return 'get';\n};\n\nconst getPetsByUserURL = exports.getPetsByUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/by-user';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPetsByONG\n * url: getPetsByONGURL\n * method: getPetsByONG_TYPE\n * raw_url: getPetsByONG_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n * @param status - \n */\n\n\nconst getPetsByONG = exports.getPetsByONG = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/by-ong/{status}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['page'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: page'));\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters['status'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: status'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPetsByONG_RAW_URL = exports.getPetsByONG_RAW_URL = function () {\n  return '/api/pet/by-ong/{status}';\n};\n\nconst getPetsByONG_TYPE = exports.getPetsByONG_TYPE = function () {\n  return 'get';\n};\n\nconst getPetsByONGURL = exports.getPetsByONGURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/by-ong/{status}';\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPetsByStatus\n * url: getPetsByStatusURL\n * method: getPetsByStatus_TYPE\n * raw_url: getPetsByStatus_RAW_URL\n * @param latitude - Geolocation latitude value.\n * @param longitude - Geolocation longitude value.\n * @param radius - Maximum radius to search for (km).\n * @param page - Number of pages to skip.\n * @param pageSize - Size of documents on one page.\n * @param status - \n */\n\n\nconst getPetsByStatus = exports.getPetsByStatus = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/by-status/{status}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['latitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: latitude'));\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['longitude'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: longitude'));\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['page'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: page'));\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters['status'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: status'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPetsByStatus_RAW_URL = exports.getPetsByStatus_RAW_URL = function () {\n  return '/api/pet/by-status/{status}';\n};\n\nconst getPetsByStatus_TYPE = exports.getPetsByStatus_TYPE = function () {\n  return 'get';\n};\n\nconst getPetsByStatusURL = exports.getPetsByStatusURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/by-status/{status}';\n\n  if (parameters['latitude'] !== undefined) {\n    queryParameters['latitude'] = parameters['latitude'];\n  }\n\n  if (parameters['longitude'] !== undefined) {\n    queryParameters['longitude'] = parameters['longitude'];\n  }\n\n  if (parameters['radius'] !== undefined) {\n    queryParameters['radius'] = parameters['radius'];\n  }\n\n  if (parameters['page'] !== undefined) {\n    queryParameters['page'] = parameters['page'];\n  }\n\n  if (parameters['pageSize'] !== undefined) {\n    queryParameters['pageSize'] = parameters['pageSize'];\n  }\n\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addPetToUser\n * url: addPetToUserURL\n * method: addPetToUser_TYPE\n * raw_url: addPetToUser_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param pet - JSON representation of the pet.\n */\n\n\nconst addPetToUser = exports.addPetToUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/add';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['pet'] !== undefined) {\n    body = parameters['pet'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addPetToUser_RAW_URL = exports.addPetToUser_RAW_URL = function () {\n  return '/api/pet/add';\n};\n\nconst addPetToUser_TYPE = exports.addPetToUser_TYPE = function () {\n  return 'post';\n};\n\nconst addPetToUserURL = exports.addPetToUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/add';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removePetFromUser\n * url: removePetFromUserURL\n * method: removePetFromUser_TYPE\n * raw_url: removePetFromUser_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param pet - JSON representation of the pet.\n */\n\n\nconst removePetFromUser = exports.removePetFromUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/remove';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['pet'] !== undefined) {\n    body = parameters['pet'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removePetFromUser_RAW_URL = exports.removePetFromUser_RAW_URL = function () {\n  return '/api/pet/remove';\n};\n\nconst removePetFromUser_TYPE = exports.removePetFromUser_TYPE = function () {\n  return 'post';\n};\n\nconst removePetFromUserURL = exports.removePetFromUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/remove';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: savePet\n * url: savePetURL\n * method: savePet_TYPE\n * raw_url: savePet_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param pet - JSON representation of the pet.\n * @param status - \n */\n\n\nconst savePet = exports.savePet = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/save/{status}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['pet'] !== undefined) {\n    body = parameters['pet'];\n  }\n\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters['status'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: status'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst savePet_RAW_URL = exports.savePet_RAW_URL = function () {\n  return '/api/pet/save/{status}';\n};\n\nconst savePet_TYPE = exports.savePet_TYPE = function () {\n  return 'post';\n};\n\nconst savePetURL = exports.savePetURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/save/{status}';\n  path = path.replace('{status}', `${parameters['status']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removePet\n * url: removePetURL\n * method: removePet_TYPE\n * raw_url: removePet_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - _id of the user to return the pet related\n */\n\n\nconst removePet = exports.removePet = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/remove/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removePet_RAW_URL = exports.removePet_RAW_URL = function () {\n  return '/api/pet/remove/{id}';\n};\n\nconst removePet_TYPE = exports.removePet_TYPE = function () {\n  return 'post';\n};\n\nconst removePetURL = exports.removePetURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/remove/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addCommentToPet\n * url: addCommentToPetURL\n * method: addCommentToPet_TYPE\n * raw_url: addCommentToPet_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param comment - JSON representation of the comment.\n * @param id - \n */\n\n\nconst addCommentToPet = exports.addCommentToPet = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/comments/add/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['comment'] !== undefined) {\n    body = parameters['comment'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addCommentToPet_RAW_URL = exports.addCommentToPet_RAW_URL = function () {\n  return '/api/pet/comments/add/{id}';\n};\n\nconst addCommentToPet_TYPE = exports.addCommentToPet_TYPE = function () {\n  return 'post';\n};\n\nconst addCommentToPetURL = exports.addCommentToPetURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/comments/add/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removeCommentFromPet\n * url: removeCommentFromPetURL\n * method: removeCommentFromPet_TYPE\n * raw_url: removeCommentFromPet_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param comment - JSON representation of the comment.\n * @param id - \n */\n\n\nconst removeCommentFromPet = exports.removeCommentFromPet = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/comments/remove/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['comment'] !== undefined) {\n    body = parameters['comment'];\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removeCommentFromPet_RAW_URL = exports.removeCommentFromPet_RAW_URL = function () {\n  return '/api/pet/comments/remove/{id}';\n};\n\nconst removeCommentFromPet_TYPE = exports.removeCommentFromPet_TYPE = function () {\n  return 'post';\n};\n\nconst removeCommentFromPetURL = exports.removeCommentFromPetURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/comments/remove/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPet\n * url: getPetURL\n * method: getPet_TYPE\n * raw_url: getPet_RAW_URL\n * @param id - _id of the pet\n */\n\n\nconst getPet = exports.getPet = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/pet/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPet_RAW_URL = exports.getPet_RAW_URL = function () {\n  return '/api/pet/{id}';\n};\n\nconst getPet_TYPE = exports.getPet_TYPE = function () {\n  return 'get';\n};\n\nconst getPetURL = exports.getPetURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/pet/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addPicture\n * url: addPictureURL\n * method: addPicture_TYPE\n * raw_url: addPicture_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param files - path of the file to update\n */\n\n\nconst addPicture = exports.addPicture = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/picture/save';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['files'] !== undefined) {\n    form['files'] = parameters['files'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addPicture_RAW_URL = exports.addPicture_RAW_URL = function () {\n  return '/api/picture/save';\n};\n\nconst addPicture_TYPE = exports.addPicture_TYPE = function () {\n  return 'post';\n};\n\nconst addPictureURL = exports.addPictureURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/picture/save';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getPicture\n * url: getPictureURL\n * method: getPicture_TYPE\n * raw_url: getPicture_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst getPicture = exports.getPicture = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/picture/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getPicture_RAW_URL = exports.getPicture_RAW_URL = function () {\n  return '/api/picture/{id}';\n};\n\nconst getPicture_TYPE = exports.getPicture_TYPE = function () {\n  return 'get';\n};\n\nconst getPictureURL = exports.getPictureURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/picture/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getLatest\n * url: getLatestURL\n * method: getLatest_TYPE\n * raw_url: getLatest_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param itemId - \n */\n\n\nconst getLatest = exports.getLatest = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/picture/{itemId}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{itemId}', `${parameters['itemId']}`);\n\n  if (parameters['itemId'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: itemId'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getLatest_RAW_URL = exports.getLatest_RAW_URL = function () {\n  return '/api/picture/{itemId}';\n};\n\nconst getLatest_TYPE = exports.getLatest_TYPE = function () {\n  return 'get';\n};\n\nconst getLatestURL = exports.getLatestURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/picture/{itemId}';\n  path = path.replace('{itemId}', `${parameters['itemId']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: removePicture\n * url: removePictureURL\n * method: removePicture_TYPE\n * raw_url: removePicture_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param id - \n */\n\n\nconst removePicture = exports.removePicture = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/picture/remove/{id}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst removePicture_RAW_URL = exports.removePicture_RAW_URL = function () {\n  return '/api/picture/remove/{id}';\n};\n\nconst removePicture_TYPE = exports.removePicture_TYPE = function () {\n  return 'post';\n};\n\nconst removePictureURL = exports.removePictureURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/picture/remove/{id}';\n  path = path.replace('{id}', `${parameters['id']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: createUser\n * url: createUserURL\n * method: createUser_TYPE\n * raw_url: createUser_RAW_URL\n * @param user - JSON representation of the user to be created.\n */\n\n\nconst createUser = exports.createUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/create';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst createUser_RAW_URL = exports.createUser_RAW_URL = function () {\n  return '/api/user/create';\n};\n\nconst createUser_TYPE = exports.createUser_TYPE = function () {\n  return 'post';\n};\n\nconst createUserURL = exports.createUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/create';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: isUniqueUsername\n * url: isUniqueUsernameURL\n * method: isUniqueUsername_TYPE\n * raw_url: isUniqueUsername_RAW_URL\n * @param username - \n */\n\n\nconst isUniqueUsername = exports.isUniqueUsername = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/username/exists/{username}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{username}', `${parameters['username']}`);\n\n  if (parameters['username'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: username'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst isUniqueUsername_RAW_URL = exports.isUniqueUsername_RAW_URL = function () {\n  return '/api/user/username/exists/{username}';\n};\n\nconst isUniqueUsername_TYPE = exports.isUniqueUsername_TYPE = function () {\n  return 'get';\n};\n\nconst isUniqueUsernameURL = exports.isUniqueUsernameURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/username/exists/{username}';\n  path = path.replace('{username}', `${parameters['username']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: getUserProfile\n * url: getUserProfileURL\n * method: getUserProfile_TYPE\n * raw_url: getUserProfile_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n */\n\n\nconst getUserProfile = exports.getUserProfile = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/profile';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('get', domain + path, body, queryParameters, form, config);\n};\n\nconst getUserProfile_RAW_URL = exports.getUserProfile_RAW_URL = function () {\n  return '/api/user/profile';\n};\n\nconst getUserProfile_TYPE = exports.getUserProfile_TYPE = function () {\n  return 'get';\n};\n\nconst getUserProfileURL = exports.getUserProfileURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/profile';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: authenticateUser\n * url: authenticateUserURL\n * method: authenticateUser_TYPE\n * raw_url: authenticateUser_RAW_URL\n * @param user - User credentials object.\n */\n\n\nconst authenticateUser = exports.authenticateUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/authenticate';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst authenticateUser_RAW_URL = exports.authenticateUser_RAW_URL = function () {\n  return '/api/user/authenticate';\n};\n\nconst authenticateUser_TYPE = exports.authenticateUser_TYPE = function () {\n  return 'post';\n};\n\nconst authenticateUserURL = exports.authenticateUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/authenticate';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: updateUser\n * url: updateUserURL\n * method: updateUser_TYPE\n * raw_url: updateUser_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param user - JSON representation of the user to be created.\n */\n\n\nconst updateUser = exports.updateUser = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/update';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst updateUser_RAW_URL = exports.updateUser_RAW_URL = function () {\n  return '/api/user/update';\n};\n\nconst updateUser_TYPE = exports.updateUser_TYPE = function () {\n  return 'post';\n};\n\nconst updateUserURL = exports.updateUserURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/update';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: recoverPassword\n * url: recoverPasswordURL\n * method: recoverPassword_TYPE\n * raw_url: recoverPassword_RAW_URL\n * @param email - \n */\n\n\nconst recoverPassword = exports.recoverPassword = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/password/recover/{email}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n  path = path.replace('{email}', `${parameters['email']}`);\n\n  if (parameters['email'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: email'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst recoverPassword_RAW_URL = exports.recoverPassword_RAW_URL = function () {\n  return '/api/user/password/recover/{email}';\n};\n\nconst recoverPassword_TYPE = exports.recoverPassword_TYPE = function () {\n  return 'post';\n};\n\nconst recoverPasswordURL = exports.recoverPasswordURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/password/recover/{email}';\n  path = path.replace('{email}', `${parameters['email']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: updatePassword\n * url: updatePasswordURL\n * method: updatePassword_TYPE\n * raw_url: updatePassword_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param user - User credentials object.\n */\n\n\nconst updatePassword = exports.updatePassword = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/password/update';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  if (parameters['user'] !== undefined) {\n    body = parameters['user'];\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst updatePassword_RAW_URL = exports.updatePassword_RAW_URL = function () {\n  return '/api/user/password/update';\n};\n\nconst updatePassword_TYPE = exports.updatePassword_TYPE = function () {\n  return 'post';\n};\n\nconst updatePasswordURL = exports.updatePasswordURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/password/update';\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n/**\n * \n * request: addSkip\n * url: addSkipURL\n * method: addSkip_TYPE\n * raw_url: addSkip_RAW_URL\n * @param xAccessToken - JWT created on user creation or authentication.\n * @param skip - User step in order to skip.\n */\n\n\nconst addSkip = exports.addSkip = function (parameters = {}) {\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  const config = parameters.$config || {\n    headers: {}\n  };\n  let path = '/api/user/skips/{skip}';\n  let body;\n  let queryParameters = {};\n  let form = {};\n\n  if (parameters['xAccessToken'] !== undefined) {\n    config.headers['x-access-token'] = parameters['xAccessToken'];\n  }\n\n  if (parameters['xAccessToken'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: xAccessToken'));\n  }\n\n  path = path.replace('{skip}', `${parameters['skip']}`);\n\n  if (parameters['skip'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: skip'));\n  }\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  return request('post', domain + path, body, queryParameters, form, config);\n};\n\nconst addSkip_RAW_URL = exports.addSkip_RAW_URL = function () {\n  return '/api/user/skips/{skip}';\n};\n\nconst addSkip_TYPE = exports.addSkip_TYPE = function () {\n  return 'post';\n};\n\nconst addSkipURL = exports.addSkipURL = function (parameters = {}) {\n  let queryParameters = {};\n  const domain = parameters.$domain ? parameters.$domain : getDomain();\n  let path = '/api/user/skips/{skip}';\n  path = path.replace('{skip}', `${parameters['skip']}`);\n\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n\n  let keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&') : '');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/backend/routes.js\n// module id = 475\n// module chunks = 71","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Signup pages progress component.\n */\n\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\n\nimport { AppUserPages } from '@pages/user-pages';\n\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { AppGlobals } from \"@app/app.globals\";\n\n@Component({\n    selector: \"mars-signup-progress\",\n    templateUrl: \"mars-signup-progress.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class MarsSignupProgressComponent {\n\n    pages = [];\n    currentPage = {};\n    currentPageIndex;\n\n    constructor(private changeDetector: ChangeDetectorRef,\n        private userInformationPages: AppUserPages,\n        private globals: AppGlobals,\n        private authService: MarsAuthService) {\n        this.init();\n    }\n\n    init() {\n        if (!MarsAuthService.isLoggedIn()) return;\n        let role = MarsAuthService.getLoggedInUser().roles;\n        this.pages = this.userInformationPages.getPagesFor(role);\n        this.currentPageIndex = this.userInformationPages.getCurrentStepIndex();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-signup-progress/mars-signup-progress.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description I18n label component.\r\n */\r\n\r\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\r\nimport { Input } from \"@angular/core\";\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { ViewContainerRef } from \"@angular/core\";\r\n\r\nimport { AppLocales } from \"@app/app.locales\";\r\n\r\n@Component({\r\n    selector: \"mars-translatable\",\r\n    template: \"<span #translation></span>\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class MarsTranslatableComponent {\r\n\r\n    private translations: AppTranslations;\r\n    private translation: string;\r\n    @ViewChild(\"translation\", { read: ViewContainerRef }) translationDiv: ViewContainerRef;\r\n    @Input(\"content\") localeKey: string;\r\n\r\n    constructor(private locales: AppLocales,\r\n        private changeDetector: ChangeDetectorRef) {\r\n        this.translations = locales.load();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        this.translation = this.translations[this.localeKey];\r\n        if (!this.translation)\r\n            console.warn(MarsTranslatableComponent.name + `: Whoops! There is no translation for the locale ${this.localeKey} in this language :(`);\r\n        this.translationDiv.element.nativeElement.innerHTML = this.translation;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-translatable/mars-translatable.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Spinner component.\n */\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\n@Component({\n    selector: \"mars-view-spinner\",\n    templateUrl: \"mars-view-spinner.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class MarsViewSpinnerComponent {\n    \n    constructor(private changeDetector: ChangeDetectorRef) { }\n    \n    ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-view-spinner/mars-view-spinner.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Market item category.\n */\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from \"@angular/core\";\n\nimport { AppUserPages } from '@pages/user-pages';\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { AppGlobals } from \"@app/app.globals\";\n\n@Component({\n    selector: \"market-item-category\",\n    templateUrl: \"market-item-category.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class MarketItemCategoryComponent {\n\n    @Input(\"description\") description: string;\n    @Input(\"href\") href: string;\n    @Input(\"show-folder-icon\") folderIcon: boolean;\n    @Input(\"isOnPromotion\") isOnPromotion: boolean;\n\n    constructor(private changeDetector: ChangeDetectorRef) { }\n\n    ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/marketplace/market-item-category/market-item-category.ts","/**\r\n * @license MIT\r\n * @version 1.1.0\r\n * @author M.A.R.S. Labs\r\n * @description Product component.\r\n */\r\n\r\nimport { Component, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Input, Output } from \"@angular/core\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { NgZone } from \"@angular/core\";\r\nimport { ChangeDetectorRef } from \"@angular/core\";\r\nimport { PopoverController } from \"ionic-angular\";\r\nimport { NavController } from \"ionic-angular\";\r\n\r\nimport { AppConstants } from \"@app/app.constants\";\r\nimport { AppGlobals } from \"@app/app.globals\";\r\nimport { AppLocales } from \"@app/app.locales\";\r\n\r\nimport { MarsNavigationService } from \"@services/navigation.service\";\r\nimport { MarsPictureService } from \"@services/picture.service\";\r\nimport { MarsProductOptionsMenu } from \"./options/mars-product-options\";\r\n\r\n\r\n@Component({\r\n    selector: \"mars-product\",\r\n    templateUrl: \"mars-product.html\",\r\n    styles: [`\r\n        :host ion-item {\r\n            border-bottom: 0px;\r\n        }\r\n    `]\r\n})\r\n\r\nexport class MarsProductComponent {\r\n\r\n    translations: AppTranslations;\r\n\r\n    @Input(\"product\") product: any;\r\n    @Input(\"options\") options: any;\r\n\r\n    // ---------------- Add product\r\n    @Output() add: EventEmitter<any> = new EventEmitter();\r\n\r\n    // ---------------- Save product\r\n    @Output() save: EventEmitter<any> = new EventEmitter();\r\n\r\n    // ---------------- Read product\r\n    @Output() view: EventEmitter<any> = new EventEmitter();\r\n\r\n    // ---------------- Edit product\r\n    @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n    // ---------------- Remove product\r\n    @Output() remove: EventEmitter<any> = new EventEmitter();\r\n\r\n    // ---------------- Toggle product\r\n    @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n    @Output() activate: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() increment: EventEmitter<any> = new EventEmitter();\r\n    @Output() decrement: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() blur: EventEmitter<any> = new EventEmitter();\r\n\r\n    private CURRENCY_OPTIONS = AppConstants.CURRENCY_OPTIONS;\r\n\r\n    constructor(private zone: NgZone,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private popoverCtrl: PopoverController,\r\n        private navCtrl: NavController,\r\n        private globals: AppGlobals,\r\n        private locales: AppLocales,\r\n        private pictureService: MarsPictureService) {\r\n        this.translations = this.locales.load();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.changeDetector.detectChanges();\r\n        this.options = this.options || {};\r\n        if (this.options.transform) {\r\n            this.product = this.options.transform(this.product);\r\n        }\r\n    }\r\n\r\n    formatPrice(price) {\r\n        price = parseFloat(price);\r\n        return price && price.toFixed ? (price.toFixed(2).split(\".\")[0]).concat(\",\").concat(price.toFixed(2).split(\".\")[1]) : \"\";\r\n    }\r\n\r\n    showItemLeft() {\r\n        return (this.options.showDiscountTag && this.product.discountPrice) || this.options.showPicture\r\n    }\r\n\r\n    getQuantityFor(product: any) {\r\n        if (!product.quantity)\r\n            return this.translations.add;\r\n        else\r\n            return product.quantity + \" \" + (product.quantity && product.quantity == 1 ? this.translations.unity : this.translations.unities);\r\n    }\r\n\r\n    showQuantityButtons() {\r\n        return (this.options.showDecreaseButton ? this.options.showDecreaseButton(this.product) : (this.decrement.observers.length > 0)) || (this.options.showIncreaseButton ? this.options.showIncreaseButton(this.product) : (this.increment.observers.length > 0));\r\n    }\r\n\r\n    showInventoryOptions() {\r\n        return this.remove.observers.length > 0 || this.add.observers.length > 0 || this.save.observers.length > 0;\r\n    }\r\n\r\n    showCatalogueOptions() {\r\n        return this.edit.observers.length > 0 || this.activate.observers.length > 0 || this.deactivate.observers.length > 0;\r\n    }\r\n\r\n    isDeleted() {\r\n        return this.product && this.product.information && this.product.information.deleted;\r\n    }\r\n\r\n    showOptionsFor($event, product) {\r\n        let popover = this.popoverCtrl.create(MarsProductOptionsMenu, {\r\n            product: product,\r\n            options: this.options,\r\n            events: {\r\n                add: this.add,\r\n                save: this.save,\r\n                edit: this.edit,\r\n                deactivate: this.deactivate,\r\n                activate: this.activate\r\n            }\r\n        });\r\n        popover.present({ ev: $event });\r\n        popover.onDidDismiss((data) => { });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mars-product/mars-product.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Geolocation management service.\n */\n\nimport { Injectable } from \"@angular/core\";\n\nimport { AppLocales } from \"@app/app.locales\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { MarsViewService } from \"@services/view.service\";\nimport { EventEmitter } from \"@angular/core\";\nimport { AppGlobals } from \"@app/app.globals\";\n\ndeclare var window;\n\n@Injectable()\nexport class MarsGeolocationService {\n\n    static GOOGLE_MAPS_LOADED = \"googlemapsloaded\";\n    static GOOGLE_MAPS_LOAD_TIMED_OUT = \"GOOGLE_MAPS_LOAD_TIMED_OUT\";\n    static libsLoaded: EventEmitter<any> = new EventEmitter();\n    static timeout: EventEmitter<any> = new EventEmitter();\n\n    constructor(private globals: AppGlobals) {\n        MarsGeolocationService.initLibs();\n    };\n\n    // ------------------------------------------------ USER LOCATION RELATED FUNCTIONS\n    getUserLocation(options: any = {}, callback?) {\n        return new Promise((resolve, reject) => {\n            MarsGeolocationService.onLoad(() => {\n                window.navigator.geolocation.getCurrentPosition((location) => {\n                    let latLng = this.getLatLngFrom(location);\n                    this.globals.currentLocation.location = latLng;\n                    if (callback)\n                        callback(latLng);\n                    return resolve(latLng);\n                }, (err) => {\n                    let location = { coords: { latitude: 0, longitude: 0 } }\n                    console.warn(MarsGeolocationService.name + `: There was an error getting the user location (${err})`);\n                    return resolve(location);\n                });\n            });\n        });\n    }\n\n    getLatLngFrom(location) {\n        // In case we retrieve the location successfully, we must wrap it on a google maps friendly way.\n        let coordinates = MarsGeolocationService.isReady() ? new google.maps.LatLng(location.coords.latitude, location.coords.longitude) : this.createFallbackCoordinates(location);\n        return coordinates;\n    }\n\n    createFallbackCoordinates(nativeCoordinates) {\n        nativeCoordinates.lat = function () {\n            return this.coords.latitude;\n        }\n        nativeCoordinates.lng = function () {\n            return this.coords.longitude;\n        }\n        return nativeCoordinates;\n    }\n\n    // ------------------------------------------------ GOOGLE MAP RELATED FUNCTIONS\n    static initLibs(callback?) {\n        MarsViewService.loadLib(AppConstants.GOOGLE_MAPS_LIB_URL, () => {\n            MarsViewService.loadLib(AppConstants.GOOGLE_MAPS_MARKER_WITH_LABEL_URL, () => {\n                MarsViewService.loadLib(AppConstants.GOOGLE_MAPS_RICHMARKER_URL, () => {\n\n                    MarsGeolocationService.libsLoaded.emit();\n                });\n            });\n        }, () => { MarsGeolocationService.timeout.emit() });\n        setTimeout(() => {\n            if (!MarsGeolocationService.isReady())\n                MarsGeolocationService.timeout.emit();\n        }, 15000);\n    }\n\n    static onLoad(callback) {\n        if (MarsGeolocationService.isReady())\n            callback();\n        else\n            MarsGeolocationService.libsLoaded.subscribe(callback);\n    }\n\n    static isReady() {\n        return typeof window.google !== \"undefined\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/geolocation.service.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 526\n// module chunks = 71","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Application component.\n */\n\nimport { Component } from \"@angular/core\";\nimport { Platform } from \"ionic-angular\";\nimport { App } from \"ionic-angular\";\n\nimport { AppConstants } from \"@app/app.constants\";\nimport { MarsCartService } from \"@services/cart.service\";\nimport { MarsAuthService } from \"@services/auth.service\";\nimport { MarsGeolocationService } from \"@services/geolocation/geolocation.service\";\n\n@Component({\n    templateUrl: \"app.html\",\n    providers: [],\n})\n\nexport class MyApp {\n    /* private rootPage = MarsAuthService.isLoggedIn() ? \"HomePage\" : \"IntroductionPage\"; */\n    private rootPage = \"HomePage\";\n\n    constructor(private platform: Platform,\n        private app: App,\n        private cartService: MarsCartService,\n        private geolocationService: MarsGeolocationService) {\n        platform.ready().then(async () => {\n            this.app.viewWillEnter.subscribe((view) => { this.updatePageTitleFor(view); });\n            setTimeout(() => {\n                document.querySelector('[splashscreen]').remove(); // Removes the HTML splashscreen\n            }, 2000);\n            if (platform.is(\"cordova\")) { // Okay, so the platform is ready and our plugins are available.\n                /* statusbar.styleDefault(); // Here you can do any higher level native things you might need.\n                splahscreen.hide();\n                statusbar.show();\n                 statusbar.backgroundColorByHexString(AppConstants.DARKER_primary_color); */\n            };\n        });\n    }\n\n    updatePageTitleFor(view: any) {\n        let title = document.querySelector(\"title\");\n        if (view && view._nav && view._nav.tabTitle) {\n            title.innerHTML = view._nav.tabTitle;\n        } else {\n            title.innerHTML = AppConstants.NAME;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Map directions management service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { MarsGeolocationService } from \"./geolocation.service\";\n\n@Injectable()\nexport class MarsDirectionsService {\n\n    directionsService: google.maps.DirectionsService;\n    directionsDisplay: google.maps.DirectionsRenderer;\n\n    constructor() {\n        MarsGeolocationService.onLoad(() => {\n            this.directionsService = new google.maps.DirectionsService();\n            this.directionsDisplay.setOptions({ suppressMarkers: true });\n        });\n    };\n\n    drawNavigationRouteOn(map, originCoordinates, destinyCoordinates) {\n        MarsGeolocationService.onLoad(() => {\n            this.directionsDisplay.setMap(map);\n            let request = <google.maps.DirectionsRequest>{\n                origin: originCoordinates,\n                destination: destinyCoordinates,\n                travelMode: google.maps.TravelMode.DRIVING,\n                unitSystem: google.maps.UnitSystem.METRIC,\n                avoidHighways: true,\n                drivingOptions: <google.maps.DrivingOptions>{\n                    departureTime: new Date(),\n                    trafficModel: google.maps.TrafficModel.PESSIMISTIC\n                }\n            }\n            this.directionsService.route(request, (response, status) => {\n                if (status == google.maps.DirectionsStatus.OK) {\n                    this.directionsDisplay.setDirections(response);\n                }\n            });\n        });\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocation/directions.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Mobile keyboard service.\n */\n\nimport { Platform } from \"ionic-angular\";\nimport { Injectable, EventEmitter } from \"@angular/core\";\nimport { MarsViewService } from \"@services/view.service\";\nimport { AppGlobals } from \"@app/app.globals\";\n\n@Injectable()\nexport class MarsMobileKeyboardService {\n\n    initialViewHeight;\n    KEYBOARD_MIN_SIZE = 100;\n    shown: EventEmitter<any> = new EventEmitter<any>();\n    hidden: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private globals: AppGlobals) { };\n\n    initialize() {\n        if (MarsViewService.screenIsDesktopSized()) return;\n        let heightDifference;\n        this.initialViewHeight = window.innerHeight; // Stores the view height for comparsion purposes\n        window.addEventListener(\"resize\", () => {\n            heightDifference = Math.abs(this.initialViewHeight - window.innerHeight); // Checks the height diff\n            if (heightDifference > 0 && heightDifference > this.KEYBOARD_MIN_SIZE) {\n                this.shown.emit(); // Checks if keyboard is shown\n                this.globals.keyboardIsUp = true; // Sets it on the global scope\n            } else {\n                this.hidden.emit(); // Otherwise, consider it hidden\n                this.globals.keyboardIsUp = false; // Sets it on the global scope\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mobile-keyboard.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description UI interaction service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AlertController } from \"ionic-angular\";\nimport { LoadingController } from \"ionic-angular\";\nimport { ToastController } from \"ionic-angular\";\nimport { Loading } from \"ionic-angular\";\n\n@Injectable()\nexport class MarsInteractionService {\n\n    static LONG_TOAST_DURATION = 2000;\n    static SHORT_TOAST_DURATION = 1000;\n\n    constructor(private alertCtrl: AlertController, private loadingCtrl: LoadingController, private toastCtrl: ToastController) { }\n\n    toast(message: string, duration: number = MarsInteractionService.LONG_TOAST_DURATION, callback?: Function) {\n        let toast = this.toastCtrl.create({\n            message: message,\n            duration: duration,\n            position: \"bottom\"\n        });\n\n        toast.present();\n        if (callback) {\n            callback();\n        }\n    }\n\n    customAlert(cssClass: string, message: string, callback?: Function) {\n        let alert = this.alertCtrl.create({\n            message: message,\n            cssClass: cssClass,\n            buttons: [{\n                text: \"OK\",\n                handler: () => {\n                    if (callback)\n                        callback();\n                }\n            }]\n        });\n        alert.present();\n    }\n\n    alert(message: string, callback?: Function) {\n        let alert = this.alertCtrl.create({\n            message: message,\n            buttons: [{\n                text: \"OK\",\n                handler: () => {\n                    if (callback)\n                        callback();\n                }\n            }]\n        });\n        alert.present();\n    }\n\n    confirm(title: string, buttons: Array<any>, callback?: Function) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            buttons: buttons\n        });\n        alert.present();\n    }\n\n    prompt(title: string, inputs: Array<any>, buttons: Array<any>, callback?: Function) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            inputs: inputs,\n            buttons: buttons\n        });\n        alert.present();\n    }\n\n    spinner(options: any): Loading {\n        let spinner = this.loadingCtrl.create(options);\n        spinner.present();\n        return spinner;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/interaction.service.ts","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description View management service.\n */\n\nimport { Platform } from \"ionic-angular\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class MarsViewService {\n    static RESIZE_EVENT = \"resize\";\n\n    constructor() { };\n\n    static loadLib(url, callback?, errorCallback?) {\n        let isFirstLoad = false;\n        let load = () => {\n            isFirstLoad = true;\n            // Remove the script before appending it to the body\n            let currentScriptTag = document.querySelector(`script[src=\"${url}\"]`);\n\n            let currentScriptTagIsAlreadyAppended = currentScriptTag && currentScriptTag.remove;\n            if (currentScriptTagIsAlreadyAppended)\n                currentScriptTag.remove();\n\n            let script: any = document.createElement(\"script\")\n            script.type = \"text/javascript\";\n            if (script.readyState) { // IE\n                script.onreadystatechange = () => {\n                    if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\n                        script.onreadystatechange = null;\n                        if (callback)\n                            callback();\n                    }\n                }\n            } else { // Others\n                script.onload = () => {\n                    if (callback)\n                        callback();\n                }\n                script.onerror = () => {\n                    if (errorCallback)\n                        errorCallback();\n                }\n            }\n            script.src = url;\n            document.getElementsByTagName(\"head\")[0].appendChild(script);\n        }\n        return navigator.onLine ? load() : window.addEventListener(\"online\", (e) => { if (isFirstLoad) load(); });\n    }\n\n    static screenIsDesktopSized() {\n        return window.innerWidth > 768;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/view.service.ts","import * as Backend from \"./routes\";\n export { Backend };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/backend/index.js\n// module id = 98\n// module chunks = 71","/**\n * @license MIT\n * @version 1.1.0\n * @author M.A.R.S. Labs\n * @description Cart management service.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AppGlobals } from \"@app/app.globals\";\nimport { AppConstants } from \"@app/app.constants\";\nimport { Backend } from \"@backend/index\";\nimport { EventEmitter } from \"@angular/core\";\nimport { MarsInteractionService } from \"./interaction.service\";\nimport { AppLocales } from \"@app/app.locales\";\n\n@Injectable()\nexport class MarsCartService {\n\n    isUpdating: boolean;\n    loaded: EventEmitter<any> = new EventEmitter<any>();\n    updated: EventEmitter<any> = new EventEmitter<any>();\n    translations: AppTranslations;\n\n    constructor(private globals: AppGlobals,\n        private interactionService: MarsInteractionService,\n        private locales: AppLocales) {\n        this.translations = locales.load();\n    };\n\n    async load() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let cart = this.isDefined() ? await this.read() : await this.create();\n                this.set(cart);\n                resolve(cart);\n            } catch (e) {\n                reject(e);\n            } finally {\n            }\n        });\n    };\n\n    async create() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let cart = (await Backend.createCart()).data;\n                resolve(cart);\n            } catch (e) {\n                reject(e);\n            } finally {\n            }\n        });\n    }\n\n\n    async read() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let cart = (await Backend.getCart({ id: this.get()._id })).data;\n                resolve(cart);\n            } catch (e) {\n                reject(e);\n            } finally {\n\n            }\n        });\n    }\n\n    async getCategoryItems(categorySlug: string) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let items = (await Backend.getCartItems({ id: this.get()._id, category: categorySlug })).data.items;\n                resolve(items);\n            } catch (e) {\n                reject(e);\n            } finally {\n            }\n        });\n\n    }\n\n    isDefined() {\n        return typeof localStorage[AppConstants.CURRENT_CART_ID] !== \"undefined\";\n    };\n\n    set(cart: any) {\n        localStorage[AppConstants.CURRENT_CART_ID] = JSON.stringify(cart);\n    };\n\n    get(): any {\n        let cart = localStorage[AppConstants.CURRENT_CART_ID];\n        return this.isDefined() ? JSON.parse(cart) : undefined;\n    };\n\n    async clear() {\n        return new Promise(async (resolve, reject) => {\n            try {\n                let cart = (await Backend.clearCart({ id: this.get()._id })).data;\n                this.update(cart);\n                resolve();\n            } catch (e) {\n                this.interactionService.alert(this.translations.server_failure);\n                reject();\n            } finally {\n\n            }\n        });\n\n    };\n\n    async increment(product) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                this.isUpdating = true;\n                product.loading = true;\n                let cart = (await Backend.incrementOnCart({ id: this.get()._id, item: product })).data;\n                this.update(cart);\n                resolve();\n            } catch (e) {\n                this.interactionService.alert(this.translations.server_failure);\n                reject();\n            } finally {\n                product.loading = false;\n                this.isUpdating = false;\n            }\n        });\n    };\n\n    async decrement(product) {\n        return new Promise(async (resolve, reject) => {\n\n            try {\n                this.isUpdating = true;\n                product.loading = true;\n                let cart = (await Backend.decrementOnCart({ id: this.get()._id, item: product })).data;\n                this.update(cart);\n                resolve();\n            } catch (e) {\n                this.interactionService.alert(this.translations.server_failure);\n                reject();\n            } finally {\n                product.loading = false;\n                this.isUpdating = false;\n\n            }\n        });\n    };\n\n    update(cart) {\n        try {\n            this.set(cart);\n            this.updated.emit({ cart: cart });\n        } catch (e) {\n            this.interactionService.alert(this.translations.server_failure);\n        } finally {\n\n        }\n    };\n\n    isEmpty() {\n        let cart = this.get() || { items: [] };\n        return !(cart.items.length > 0);\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/cart.service.ts"],"sourceRoot":""}